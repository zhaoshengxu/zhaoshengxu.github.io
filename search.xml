<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[溶液粘度]]></title>
    <url>%2F2018%2F11%2F14%2F%E6%BA%B6%E6%B6%B2%E7%B2%98%E5%BA%A6%2F</url>
    <content type="text"><![CDATA[本文参考维基百科词条：粘度和特性粘度 对于溶液（尤其是高分子溶液），常用到以下几种黏度。 相对粘度又称黏度比，是溶液（或分散相）的黏度η与溶剂（或连续相）的黏度η0之比，即：1\eta_r=\frac&#123;\eta&#125;&#123;\eta_0&#125; 增比粘度又称比黏度，是溶液（或分散相）的黏度η与溶剂（或连续相）的黏度η0之差被溶剂（或连续相）黏度的η0除得之商，即：1\eta _&#123;sp&#125;=\frac &#123;\eta -\eta _0&#125;&#123;\eta _0&#125;=\frac &#123;\eta&#125;&#123;\eta _0&#125;-1=\eta _&#123;r&#125;-1 比浓粘度又称换算黏度或黏度数,是单位浓度的溶液（或分散相）的增比浓度，即：1&#123;\displaystyle &#123;\frac &#123;\eta _&#123;sp&#125;&#125;&#123;c&#125;&#125;=&#123;\frac &#123;\eta _&#123;r&#125;-1&#125;&#123;c&#125;&#125;&#125; 比浓对数粘度又称对数粘度，是相对黏度的自然对数被溶液（或分散相）的浓度除得之商，即：1&#123;\displaystyle \left\&#123;\eta \right\&#125;=&#123;\frac &#123;\ln &#123;\eta _&#123;r&#125;&#125;&#125;&#123;c&#125;&#125;&#125; 特性粘度又称极限粘度，是浓度趋于零时比浓粘度的极限值，即：1&#123;\displaystyle \left[\eta \right]=\lim _&#123;c\to 0&#125;&#123;\frac &#123;\eta _&#123;sp&#125;&#125;&#123;c&#125;&#125;&#125;]]></content>
      <categories>
        <category>Research</category>
      </categories>
      <tags>
        <tag>Petroleum</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[岩心驱替实验流程及注意事项]]></title>
    <url>%2F2018%2F11%2F14%2F%E5%B2%A9%E5%BF%83%E9%A9%B1%E6%9B%BF%E5%AE%9E%E9%AA%8C%E6%B5%81%E7%A8%8B%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%2F</url>
    <content type="text"><![CDATA[岩心驱替实验流程岩心驱替实验的流程主要包括如下6个步骤： 抽真空造束缚水 水测渗透率 饱和油 前期水驱 注驱油剂 后续水驱 抽真空造束缚水首先，岩心烘干，量取岩心直径、长度，并称量岩心质量（若采用称量法测量孔隙体积会用到）。 其次，逐段检查管线是否漏气，并在-0.1MPa压力条件下抽取4-5h，然后将吸水后岩心取出，用纸将表面水快速擦去后，再次称量其质量，岩心吸水后增加的质量，即可得到岩心孔隙体积，并可计算出孔隙度。 另外，还可以直接在岩心夹持器内抽真空（无需称质量），抽完真空后岩心吸水体积即为岩心孔隙体积，并可计算出孔隙度。 注意：测量岩心孔隙体积时，若管线较长，需扣除管线内水的体积。 水测渗透率可分别采用3个注入速度进行水测渗透率，液测渗透率取平均值，岩心各测点的压力稳定即可转入下一阶段。 饱和油以合适的注入速度（如0.05mL/min）进行饱和油，出口端用量筒计量排出水的体积，直到不再出水，排出水的总体积即为饱和油体积，并可计算出原始含油饱和度及束缚水饱和度。岩心饱和油之后老化12h，然后进行前期水驱。 注意：饱和油阶段时间较长，可安排在夜间进行。 前期水驱以一定的速度水驱至岩心出口端含水率高于98%，通常需要注水2PV左右，转入注驱油剂阶段（如注聚）。 注意：前期水驱速度需要提前确定，并和水测渗透率阶段的其中1个注入速度相同。 注驱油剂选定驱油剂注入速度（如0.5mL/min），注入一定PV数的驱油剂，而后转入下一阶段。聚合物驱中，通常是注入0.3PV的聚合物溶液，或者是注入到岩心各测点的压力稳定时，停止驱油剂注入，大概在3PV左右。 注意：驱油剂注入速度需要提前确定，并和水测渗透率阶段的其中1个注入速度相同。 后续水驱注驱油剂阶段结束，转入后续水驱阶段，以相同的注入速度进行后续水驱，直至岩心各测点压力稳定。 注意：尽可能缩短前后两个阶段的转换时间，因为岩心各测点的压力会快速下降。 注意事项 水测渗透率阶段压力较小（kPa数量级，如20kPa），注驱油剂阶段的压力较大（MPa数量级，如2MPa），注入压力压力大小与岩心气测渗透率和驱油剂浓度有关，所以需要选取合适量程的压力传感器。 实验前最好将压力传感器进行校准，以减小计量误差。 岩心驱替实验的围压至少比入口端压力高2MPa。 实验过程中，注意泵压变化，若压力快速上升，可能有阀门没有打开，或是发生堵塞。实验开始前需要对各个阀门进行检查（是否通畅，是否排空气，螺母是否拧紧，阀门打开是否正确等）。” 这篇文章的 PRESS.one 签名:“https://press.one/file/v?s=47dbd0703a580716265a192518095d41e4c5d4404307da4dc5eb8d264ecdd728b1d4b6ec28b0e36dec3a6f5cfda6a65cd5072ca33b99b7f21e41d9d94c4f40951&amp;h=f5de4f6e033b6f3333a7aaee393b558b4586c8accb8aeaad6dc1cf6da63a36f5&amp;a=5fff08474362b1e48d72b083abf18d2360881d5e&amp;f=P1&amp;v=2]]></content>
      <categories>
        <category>Research</category>
      </categories>
      <tags>
        <tag>Guide</tag>
        <tag>Petroleum</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[哈克流变仪粘度测量步骤及注意事项]]></title>
    <url>%2F2018%2F11%2F14%2F%E5%93%88%E5%85%8B%E6%B5%81%E5%8F%98%E4%BB%AA%E7%B2%98%E5%BA%A6%E6%B5%8B%E9%87%8F%E6%AD%A5%E9%AA%A4%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%2F</url>
    <content type="text"><![CDATA[聚合物溶液流变性（如粘度）测量仪器为HAKKE RS6000旋转流变仪，流变仪由4部分组成： 空气压缩机； 温控系统； 流变测量系统； 软件系统（控制-测量-数据处理）。 液体粘度测量的操作步骤： 开机，其顺序为：空气压缩机→温控仪→测量系统→电脑控制系统。 根据被测样品及其测量条件，选择安装合适的转子系统和温控器，并在测量程序中首先选择对应的转子和温控器。 新建测量文件（Job），文件包含常规要素（General elements）、测量要素（Measurement elements）、评价要素（Evaluation elements）3个部分。通常测量，只需将温度模块和测量方法两个模块拖至右侧，并进行简单设置即可（温度、剪切速率上下限）。 测量台调平。使测量台处于水平状态。 校零（Zero point）。校准上下椎板的距离。 加样，用移液管向下椎板中心部位移取1.5mL左右的待测溶液。 开始测量，点击Start按钮开始测量，测量结束输入文件名保存文件。 分离并清洗上下椎板，并导出测量数据（数据全选复制到Excel表格中）。 关机，关机顺序与开机顺序刚好相反。 相关注意事项设置剪切速率在设置剪切速率时，首先需要选中测量模式的CR（控制剪切速率）才进行设置（CS是表示控制应力）。而且，除了设置上下限，还有剪切速率是以ln还是log进行分布，两者的区别在于： ln模式：测量点在剪切速率上限附近多，下限附近稀疏，适合目标剪切速率较大的测量。 log模式：与ln模式相反，测量点在剪切速率上限附近稀疏，下限附近多，适合目标剪切速率较小（如7.34s-1）的测量。 设置测量步数及单步测量停止条件测量步数需要结合剪切速率上下限进行设置，以保证剪切速率与目标值尽可能接近，例如聚合物粘度测量常用的剪切速率0.1~1000，100个测量点，log模式，剪切速率目标值7.34s-1，实际值7.221-1很接近。 单步测量停止条件：默认每个剪切速率测量30s时间，然后改变剪切速率再次测量，直到最后。测量步数和单步测量时间决定了每个样品的测试时间。以剪切速率0.1~1000,100步，单步测量时间30s，一个样品耗时3300s，即55min。样品量少，如果测量温度较高，则测量时间不能太久，否则样品挥发，导致测量失败。所以在不影响测量结果情况下，适当减少测量步数，缩短单步测量时间（如10s），以及设置限制条件gradient =0.5都可减少测量时间。 如果常用某种测量模式（JOB），新建并设置测量文件后，可保存并命名该测量文件，以便下次测试时直接调用。 常见异常及处理 测量过程中，弹出温控系统Timeout错误信息。 需检查各插头连接是否良好，并重启温控系统重新测量。 当测量出现粘度非常大（几十万），粘度及应力曲线出现异常的杂峰状况： 一种情况，空气压缩机未打开，打开后再次测量即可。 第二种情况，测量台未处于水平状态（即把水平仪放置于测量台上，其中气泡偏离正常区域），可通过调节流变仪底座的四个支点使其处于水平状态，再次进行测量。 另外，注意每次实验前必须检查测量台是否处于水平状态，然后进行归零校准！！！ 控制流变仪的电脑故障：主机指示灯状态为3和4，显示屏无法显示。请按照下图提示自行解决：“ 这篇文章的 PRESS.one 签名:“https://press.one/file/v?s=518e1251f8cf0d964dc9cb4b67f622974412f2cbad579673390d04c8671f03ec8e7f2e152ede080fc663f06eeb47db76f269ff3100f9da3eaa3fe17839f02e3f0&amp;h=8638863ba0c65b8bad2edeef7c0205fadb0a7eecdec5cfa0f528aedff9da4c7d&amp;a=5fff08474362b1e48d72b083abf18d2360881d5e&amp;f=P1&amp;v=2]]></content>
      <categories>
        <category>Research</category>
      </categories>
      <tags>
        <tag>Guide</tag>
        <tag>Petroleum</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL数据库]]></title>
    <url>%2F2018%2F11%2F13%2FMYSQL%E6%95%B0%E6%8D%AE%E5%BA%93%2F</url>
    <content type="text"><![CDATA[MySQL数据库是一个小型关系型数据库管理系统，开发者为瑞典MySQL AB公司。在2008年1月16号被Sun公司收购。而2009年，Sun公司又被Oracle公司收购。目前MySQL被广泛地应用在Internet上的中小型网站中。由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，许多中小型网站为了降低网站总体拥有成本而选择了MySQL作为网站数据库。 MySQL数据库的下载安装MySQL官方下载地址：MySQL 如果重装mysql，可先删除服务：1Sc delete MySQL ① 解压mysql-5.7.17-winx64.zip压缩包（32位操作系统的请下载winx32的压缩包） ② 进入到刚才的解压目录，修改my-default.ini配置文件，修改后保存： //注意：替换MySQL安装路径 basedir = C:\mysql\mysql-5.7.17-winx64 datadir = C:\mysql\mysql-5.7.17-winx64\data port = 3306 ③ 添加环境变量： //注意：替换MySQL安装路径 MYSQL_HOME：C:\mysql\mysql-5.7.17-winx64 将MYSQL_HOME追加到系统的path变量的末尾， 注意用英文分号（;）隔开。追加内容： ;%MYSQL_HOME%\bin; ④ 将MySQL添加到系统服务中并启动： 1) 右键“开始”——&gt; “运行(R)”或者快捷键：“开始”+“R”(以管理员身份运行cmd)2) cd 到MySQL所在的本地磁盘路径的bin目录，然后执行：12//替换MySQL安装路径mysqld install MySQL --defaults-file=&quot;D:\Mysql01\mysql-5.7.17-winx64\my-default.ini&quot; 启动mysql：12345678910net start mysql``` 此时会出现MySQL服务无法启动，服务没有报告任何错误。解决办法：执行如下代码：```mysqlmysqld --installmysqld --initializenet start mysql ⑤ 修改mysql密码 Mysql在启动后会初始化一个默认密码，该密码在mysql的安装目录data/xxx.err结尾的文件中。 [Note] A temporary password is generated for root@localhost: ****** 在cmd下执行：1mysql -uroot -p 输入上面文件中的密码，即可进入mysql操作界面。然后执行如下代码以修改密码： 12//root即为新密码SET PASSWORD = PASSWORD(&apos;root&apos;); 使用quit或者exit退出mysql，在cmd下执行：1mysql -uroot -p 然后输入设置的密码后就能登录到mysql中。 数据库和表的操作数据库的操作12345678910111213141516171819201 查看当前所有额数据库show databases;2 创建数据库create database &lt;database name&gt;;3 展示创建数据库show create database &lt;database name&gt;;4 创建数据库指定编码create database &lt;database name&gt; character set utf8;5 删除数据库drop database &lt;database name&gt;;6 选择使用数据库use &lt;database name&gt;;7 查看当前使用数据库select database(); 表的操作12345678910111 创建表create table &lt;tableName&gt;(id int, name varchar(30));2 查看当前数据库中所有的表show tables; 3 查看表结构desc &lt;tableName&gt;; 4 创建表时的数据约束类型create table &lt;tableName&gt;(id int primary key auot_increment, name varchar(30) not null, email varchar(30) noy null unique, role varchar(20) default &apos;VIP&apos;); 对数据进行操作对数据进行操作主要有：增、删、改、查 增加数据123451 向表中插入指定字段的数据insert into &lt;tableName&gt; (id,name,email) values(1,&apos;zsx&apos;,&apos;zsx@qq.com&apos;);3 插入所有列的所有数据insert into &lt;tableName&gt; values(1,&apos;zsx&apos;,&apos;zsx@qq.com&apos;,&apos;MVP&apos;); 删除数据123456781 删除表中所有数据delete from 表名 删除所有的数据2 删除表中指定条件的数据delete from 表名 where 条件3 将表的数据清空 ，表结构截断 ，相当于生成一个新的表格 。Truncate table 表名 修改数据1Update 表名 set 字段1 = 值1 ，字段2 = 值2 ......where 条件 查询数据123451 简单无条件查询所有的数据select * from 表名2 条件查询数据select * from 表名 where 条件 条件查询代码示例：123456789101112131415161718192021222324252627281.查询所有计算机类商品信息select * from products where category = &apos;计算机&apos;2.查询出商品价格大于90的商品信息select * from products where price &gt; 903.查询出商品总价大于10000的商品信息select * from products where price*pnum &gt;100004.查询出价格在100-200之间的商品信息select * from products where price &gt;=100 and price &lt;=200select * from products where price between 100 and 2005.查询出ID在1和5之间，并且价格在50和100之间select * from products where (id between 1 and 5) and (price between 50 and 100)6.查询出商品价格是65,100或190的商品信息(两种方式：or，in)select * from products where price = 65 or price = 100 or price = 190select * from products where price in (65,100,190)7.查询出商品的名称中包含java的商品信息。select * from products where name like &apos;%java%&apos; //含javaselect * from products where name like &apos;java%&apos; //以java开头select * from products where name like &apos;%java&apos; //以java结尾select * from products where name like &apos;_java%&apos; //java前有一个字符8.查询出商品价格不为null商品信息select * from products where price is null 排序123451 查询出所有商品，根据数量进行升序排列，如果数量相同，根据价格进行降序排列select * from products order by pnum desc, price desc2 查询出id小于8的商品，根据数量进行升序排列，如果数量相同，根据价格进行降序排列select * from products where id &lt; 8 order by pnum desc, price desc 聚合函数12345678910111213141516171819201.统计商品表中共有多少条记录select count(*) from products2.统计商品表中价格大于50的有多少条记录select count(*) from products where price &gt; 503.统计有多少商品select sum(pnum) from products4.统计所有商品的总价值select sum(price*pnum) from products5.统计所有商品的平均价格select sum(price*pnum)/sum(pnum) from products6.统计出记录中price的平均值select avg(price) from products7.统计出商品表中price最大与最小值select max(price), min(price) from products 子查询12//子查询：一条语句的查询结果作为另一条查询的条件select * from products where price in (select price from products where id &lt; 8) 分组GROUP BY 语句用于结合聚合函数，根据一个或多个列对结果集进行分组。语法解析如下： SELECT column_name, aggregate_function(column_name) FROM table_name WHERE column_name operator value GROUP BY column_name HAVING 条件 代码示例：123456781 对商品分类别统计，求出每一种类商品的总数量select category,sum(pnum) from products group by category2 对商品分类别统计，求出每一种类商品的总数量，数量要大于100select category,sum(pnum) from products group by category having sum(pnum)&gt;1003 对id小于9的商品分类别统计，求出每一种类商品的总数量，要求数量要大于100，并以数量降序排列，而且只显示前两名select category,sum(pnum) from products where id&lt;9 group by category having sum(pnum)&gt;100 order by sum(pnum) desc limit 1,2 Having与where的区别： having是在分组后对数据进行过滤，where是在分组前对数据进行过滤 having后面可以使用分组函数(统计函数)，where后面不可以使用分组函数。 多表设计 一对多 在进行表设计时，如果存在一对多关系，要求在多的一方加入一个外键，用于描述它来自于一方的主键。 多对多 存在多对多关系，进行表设计时，产生一个中间的关系表，来描述关系。 操作数据库的客户端在dos命令中操作数据库有很多不方便，用数据库客户端软件Navicat操作数据库。]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Bootstrap快速入门]]></title>
    <url>%2F2018%2F11%2F12%2FBootstrap%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[Bootstrap是基于HTML、CSS、JavaScript 开发的简洁、直观、强悍的前端开发框架，使得 Web 开发更加快捷。 Bootstrap提供了优雅的HTML和CSS规范，它即是由动态CSS语言Less写成。Bootstrap一经推出后颇受欢迎，一直是GitHub上的热门开源项目，包括NASA的MSNBC（微软全国广播公司）的Breaking News都使用了该项目。 国内一些移动开发者较为熟悉的框架，如WeX5前端开源框架等，也是基于Bootstrap源码进行性能优化而来。 Bootstrap的优势 移动设备优先：自 Bootstrap 3 起，框架包含了贯穿于整个库的移动设备优先的样式。 浏览器支持：Chrome、Firefox、IE等所有的主流浏览器都支持 Bootstrap。 容易上手：只要具备 HTML 和 CSS 的基础知识，就可以开始学习 Bootstrap。 响应式设计：Bootstrap 的响应式 CSS 能够自适应于台式机、平板电脑和手机。 为开发人员创建接口提供了一个简洁统一的解决方案；包含了功能强大的内置组件，易于定制；还提供了基于 Web 的定制；而且还是开源的。 Bootstrap主要学习内容Bootstrap的学习内容，主要包括组件、全局CSS样式和JavaScript插件。Bootstrap参考文档：Bootstrap中文网 组件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;!--声明文档兼容模式，表示使用IE浏览器的最新模式--&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt; &lt;!--设置视口的宽度(值为设备的理想宽度)，页面初始缩放值&lt;理想宽度/可见宽度&gt;--&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt; &lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt; &lt;title&gt;Bootstrap容器介绍&lt;/title&gt; &lt;!-- 引入Bootstrap核心样式文件 --&gt; &lt;link href="./css/bootstrap.min.css" rel="stylesheet"&gt; &lt;!-- 引入jQuery核心js文件 --&gt; &lt;script src="./js/jquery-1.11.0.min.js"&gt;&lt;/script&gt; &lt;!-- 引入BootStrap核心js文件 --&gt; &lt;script src="./js/bootstrap.min.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;!--组件：进度条--&gt; &lt;div class="progress"&gt; &lt;div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 60%;"&gt; 60% &lt;/div&gt; &lt;/div&gt; &lt;br /&gt; &lt;!--组件：图标--&gt; &lt;button type="button" class="btn btn-default" aria-label="Left Align"&gt; &lt;span class="glyphicon glyphicon-align-left" aria-hidden="true"&gt;&lt;/span&gt; &lt;/button&gt; &lt;button type="button" class="btn btn-default btn-lg"&gt; &lt;span class="glyphicon glyphicon-star" aria-hidden="true"&gt;&lt;/span&gt; Star &lt;/button&gt; &lt;br /&gt; &lt;!--组件：下拉菜单--&gt; &lt;div class="dropdown"&gt; &lt;button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"&gt; Dropdown &lt;span class="caret"&gt;&lt;/span&gt; &lt;/button&gt; &lt;ul class="dropdown-menu" aria-labelledby="dropdownMenu1"&gt; &lt;li&gt;&lt;a href="#"&gt;Action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Another action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Something else here&lt;/a&gt;&lt;/li&gt; &lt;li role="separator" class="divider"&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Separated link&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;br /&gt; &lt;!-- 组件：按钮--&gt; &lt;div class="btn-group" role="group" aria-label="..."&gt; &lt;button type="button" class="btn btn-danger"&gt;Left&lt;/button&gt; &lt;button type="button" class="btn btn-gr"&gt;Middle&lt;/button&gt; &lt;button type="button" class="btn btn-default"&gt;Right&lt;/button&gt; &lt;/div&gt; &lt;br /&gt;&lt;br /&gt; &lt;!-- 组件：输入框--&gt; &lt;div class="input-group"&gt; &lt;span class="input-group-addon" id="basic-addon1"&gt;@&lt;/span&gt; &lt;input type="text" class="form-control" placeholder="Username" aria-describedby="basic-addon1"&gt; &lt;/div&gt; &lt;div class="input-group"&gt; &lt;input type="text" class="form-control" placeholder="Recipient's username" aria-describedby="basic-addon2"&gt; &lt;span class="input-group-addon" id="basic-addon2"&gt;@example.com&lt;/span&gt; &lt;/div&gt; &lt;div class="input-group"&gt; &lt;span class="input-group-addon"&gt;$&lt;/span&gt; &lt;input type="text" class="form-control" aria-label="Amount (to the nearest dollar)"&gt; &lt;span class="input-group-addon"&gt;.00&lt;/span&gt; &lt;/div&gt; &lt;label for="basic-url"&gt;Your vanity URL&lt;/label&gt; &lt;div class="input-group"&gt; &lt;span class="input-group-addon" id="basic-addon3"&gt;https://example.com/users/&lt;/span&gt; &lt;input type="text" class="form-control" id="basic-url" aria-describedby="basic-addon3"&gt; &lt;/div&gt; &lt;!--组件：导航条--&gt; &lt;nav class="navbar navbar-inverse"&gt; &lt;div class="container-fluid"&gt; &lt;!-- Brand and toggle get grouped for better mobile display --&gt; &lt;div class="navbar-header"&gt; &lt;button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false"&gt; &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;/button&gt; &lt;a class="navbar-brand" href="#"&gt;Brand&lt;/a&gt; &lt;/div&gt; &lt;!-- Collect the nav links, forms, and other content for toggling --&gt; &lt;div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1"&gt; &lt;ul class="nav navbar-nav"&gt; &lt;li class="active"&gt;&lt;a href="#"&gt;Link &lt;span class="sr-only"&gt;(current)&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Link&lt;/a&gt;&lt;/li&gt; &lt;li class="dropdown"&gt; &lt;a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"&gt;Dropdown &lt;span class="caret"&gt;&lt;/span&gt;&lt;/a&gt; &lt;ul class="dropdown-menu"&gt; &lt;li&gt;&lt;a href="#"&gt;Action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Another action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Something else here&lt;/a&gt;&lt;/li&gt; &lt;li role="separator" class="divider"&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Separated link&lt;/a&gt;&lt;/li&gt; &lt;li role="separator" class="divider"&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;One more separated link&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;form class="navbar-form navbar-left"&gt; &lt;div class="form-group"&gt; &lt;input type="text" class="form-control" placeholder="Search"&gt; &lt;/div&gt; &lt;button type="submit" class="btn btn-default"&gt;Submit&lt;/button&gt; &lt;/form&gt; &lt;ul class="nav navbar-nav navbar-right"&gt; &lt;li&gt;&lt;a href="#"&gt;Link&lt;/a&gt;&lt;/li&gt; &lt;li class="dropdown"&gt; &lt;a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"&gt;Dropdown &lt;span class="caret"&gt;&lt;/span&gt;&lt;/a&gt; &lt;ul class="dropdown-menu"&gt; &lt;li&gt;&lt;a href="#"&gt;Action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Another action&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Something else here&lt;/a&gt;&lt;/li&gt; &lt;li role="separator" class="divider"&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Separated link&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!-- /.navbar-collapse --&gt; &lt;/div&gt;&lt;!-- /.container-fluid --&gt; &lt;/nav&gt; &lt;br /&gt; &lt;!-- 巨幕 --&gt; &lt;div class="jumbotron"&gt; &lt;h1&gt;Hello, world!&lt;/h1&gt; &lt;p&gt;...&lt;/p&gt; &lt;p&gt;&lt;a class="btn btn-primary btn-lg" href="#" role="button"&gt;Learn more&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;br /&gt; &lt;!-- 标签 --&gt; &lt;span class="label label-default"&gt;Default&lt;/span&gt; &lt;span class="label label-primary"&gt;Primary&lt;/span&gt; &lt;span class="label label-success"&gt;Success&lt;/span&gt; &lt;span class="label label-info"&gt;Info&lt;/span&gt; &lt;span class="label label-warning"&gt;Warning&lt;/span&gt; &lt;span class="label label-danger"&gt;Danger&lt;/span&gt; &lt;br /&gt; &lt;!-- 带表格的面版 --&gt; &lt;div class="panel panel-default"&gt; &lt;!-- Default panel contents --&gt; &lt;div class="panel-heading"&gt;Panel heading&lt;/div&gt; &lt;div class="panel-body"&gt; &lt;p&gt;带表格的面版&lt;/p&gt; &lt;/div&gt; &lt;!-- Table --&gt; &lt;table class="table"&gt; &lt;tr&gt; &lt;td&gt;#&lt;/td&gt; &lt;td&gt;First Name&lt;/td&gt; &lt;td&gt;Last Name&lt;/td&gt; &lt;td&gt;Username&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;Mark&lt;/td&gt; &lt;td&gt;Otto&lt;/td&gt; &lt;td&gt;@mdo&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 全局 CSS 样式123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657&lt;body&gt; &lt;!--全局 CSS 样式--&gt; &lt;!--表单--&gt; &lt;form&gt; &lt;div class="form-group"&gt; &lt;label for="exampleInputEmail1"&gt;Email address&lt;/label&gt; &lt;input type="email" class="form-control" id="exampleInputEmail1" placeholder="Email"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label for="exampleInputPassword1"&gt;Password&lt;/label&gt; &lt;input type="password" class="form-control" id="exampleInputPassword1" placeholder="Password"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label for="exampleInputFile"&gt;File input&lt;/label&gt; &lt;input type="file" id="exampleInputFile"&gt; &lt;p class="help-block"&gt;Example block-level help text here.&lt;/p&gt; &lt;/div&gt; &lt;div class="checkbox"&gt; &lt;label&gt; &lt;input type="checkbox"&gt; Check me out &lt;/label&gt; &lt;/div&gt; &lt;button type="submit" class="btn btn-default"&gt;Submit&lt;/button&gt; &lt;/form&gt; &lt;br /&gt; &lt;!--按钮--&gt; &lt;!-- Standard button --&gt; &lt;button type="button" class="btn btn-default"&gt;（默认样式）Default&lt;/button&gt; &lt;!-- Provides extra visual weight and identifies the primary action in a set of buttons --&gt; &lt;button type="button" class="btn btn-primary"&gt;（首选项）Primary&lt;/button&gt; &lt;!-- Indicates a successful or positive action --&gt; &lt;button type="button" class="btn btn-success"&gt;（成功）Success&lt;/button&gt; &lt;!-- Contextual button for informational alert messages --&gt; &lt;button type="button" class="btn btn-info"&gt;（一般信息）Info&lt;/button&gt; &lt;!-- Indicates caution should be taken with this action --&gt; &lt;button type="button" class="btn btn-warning"&gt;（警告）Warning&lt;/button&gt; &lt;!-- Indicates a dangerous or potentially negative action --&gt; &lt;button type="button" class="btn btn-danger"&gt;（危险）Danger&lt;/button&gt; &lt;!-- Deemphasize a button by making it look like a link while maintaining button behavior --&gt; &lt;button type="button" class="btn btn-link"&gt;（链接）Link&lt;/button&gt; &lt;br /&gt; &lt;!--按钮--&gt; &lt;img src="../img/1.jpg" alt="..." class="img-rounded"&gt; &lt;img src="../img/1.jpg" alt="..." class="img-circle"&gt; &lt;img src="../img/1.jpg" alt="..." class="img-thumbnail"&gt;&lt;/body&gt; JavaScript 插件Carousel carousel.js12345678910111213141516171819202122232425262728293031323334353637383940&lt;body&gt; &lt;!--JavaScript 插件--&gt; &lt;!--Carousel carousel.js--&gt; &lt;div id="carousel-example-generic" class="carousel slide" data-ride="carousel"&gt; &lt;!-- Indicators --&gt; &lt;ol class="carousel-indicators"&gt; &lt;li data-target="#carousel-example-generic" data-slide-to="0" class="active"&gt;&lt;/li&gt; &lt;li data-target="#carousel-example-generic" data-slide-to="1"&gt;&lt;/li&gt; &lt;li data-target="#carousel-example-generic" data-slide-to="2"&gt;&lt;/li&gt; &lt;/ol&gt; &lt;!-- Wrapper for slides --&gt; &lt;div class="carousel-inner" role="listbox"&gt; &lt;div class="item active"&gt; &lt;img src="../img/1.jpg" alt="..."&gt; &lt;div class="carousel-caption"&gt; ... &lt;/div&gt; &lt;/div&gt; &lt;div class="item"&gt; &lt;img src="../img/2.jpg" alt="..."&gt; &lt;div class="carousel-caption"&gt; ... &lt;/div&gt; &lt;/div&gt; ... &lt;/div&gt; &lt;!-- Controls --&gt; &lt;a class="left carousel-control" href="#carousel-example-generic" role="button" data-slide="prev"&gt; &lt;span class="glyphicon glyphicon-chevron-left" aria-hidden="true"&gt;&lt;/span&gt; &lt;span class="sr-only"&gt;Previous&lt;/span&gt; &lt;/a&gt; &lt;a class="right carousel-control" href="#carousel-example-generic" role="button" data-slide="next"&gt; &lt;span class="glyphicon glyphicon-chevron-right" aria-hidden="true"&gt;&lt;/span&gt; &lt;span class="sr-only"&gt;Next&lt;/span&gt; &lt;/a&gt; &lt;/div&gt;&lt;/body&gt;]]></content>
      <categories>
        <category>Bootstrap</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MCGS组态工程安装及注意事项]]></title>
    <url>%2F2018%2F11%2F12%2FMCGS%E7%BB%84%E6%80%81%E5%B7%A5%E7%A8%8B%E5%AE%89%E8%A3%85%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%2F</url>
    <content type="text"><![CDATA[Step 1：主程序及驱动安装打开MCGS安装程序，点击自动运行程序(Autorun.exe) 进行自动安装。主程序安装完之后，需要继续安装驱动程序。 安装过程中，可能会弹出安装错误提示，选择“跳过”或“忽略”即可。 Step 2：USB To COM驱动程序安装打开并安装USB To COM驱动程序。如果电脑之前已经安装，则不需要重新安装。 Step 3：2个关键文件替换 将文件石油大学.mcg复制到安装目录下的Work文件夹中进行替换。 将文件夹用户定制设备复制到安装目录下的Programs/Drivers文件夹中进行替换。 注意：替换之前记录已经校准的各个压力的上下限。 Step 4：确认本机COM端口号按照以下步骤确认本机的COM端口号（以XP系统为例，win7相同）： 123456graph LRA[我的电脑]--&gt;|右击|B[管理]B--&gt;C[设备管理器]C--&gt;D[端口设置]D--&gt;E[高级]E--&gt;F[COM端口号=COM4] Step 5：调用石油大学定制组态工程点击桌面MCGS组态环境快捷方式，到达组态环境界面，并通过以下两步调用石油大学定制组态工程： 123graph LRA[文件]--&gt;B[打开工程]B--&gt;C[调用D:MCGS/Work/石油大学.mcg] 然后，可以通过点击组态环境工具栏中的图标（带有向下箭头），或者桌面MCGS组态工程快捷方式进入组态工程工作界面。 Step 6：调整压力计量时间间隔完成上述步骤后，在组态工程界面将压力采集间隔设置为30s。 通过上述6步即可完成MCGS组态工程的安装，下次使用可通过Step 5中所说的2种方式进入组态工程工作界面。 另外，若使用过程中出现工作界面弹不出来或者卡顿等问题，可通过重启程序，按照上述步骤检查，或者直接重启电脑。 注：本文档是在张昱师兄记录的基础上完善而成，供大家参考。 这篇文章的 PRESS.one 签名:“https://press.one/file/v?s=b2f970b065f161fdb727037fbda63925986b8da221ae472313337c2cb22e5271d225af36a9075f7ff434868bafed30d0e92debed04e205f0b062af7b6cad782d0&amp;h=8f9fe5f5343b6b05b2d7be922213aa7bfe458995d19bf46053ac018cbf68c40a&amp;a=5fff08474362b1e48d72b083abf18d2360881d5e&amp;f=P1&amp;v=2]]></content>
      <categories>
        <category>Research</category>
      </categories>
      <tags>
        <tag>Guide</tag>
        <tag>Petroleum</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jQuery快速入门]]></title>
    <url>%2F2018%2F11%2F11%2FjQuery%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[jQuery是一个快速、简洁的JavaScript框架，它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。jQuery设计的宗旨是“write Less，Do More”，即倡导写更少的代码，做更多的事情。他是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。 jQuery使用jquery是一个代码库(框架)，相当于java中能够的jar包，要使用，必须先导入。 jquery-1.8.3.js：一般用于学习，可读性强 jquery-1.8.3.min.js：用于项目使用阶段，可读性极差 jQuery参考文档：W3School:jQuery 教程|jQueryAPI中文文档|jQueryAPI英文文档 jQuery的快速入门 调用jQuery代码示例 12345678910111213141516&lt;script src="../js/jquery-1.8.3.js"&gt;&lt;/script&gt;&lt;script &gt; $(function()&#123;//全局加载函数,相当于window.onload //获取元素的一般方法 //var val1 = document.getElementById("name").value; //alert(val1); //jQuery获取元素 var val2 = $("#name").val(); alert(val2); &#125;)&lt;/script&gt;&lt;body&gt; &lt;input type="text" id="name" value="mike" /&gt;&lt;/body&gt; 将js对象转换成jQuery对象 1234567891011121314151617&lt;script src="../js/jquery-1.8.3.js"&gt;&lt;/script&gt;&lt;script&gt; $(function() &#123; //全局加载函数,相当于window.onload //获取js对象 var name = document.getElementById("name"); var val1 = name.value; //alert(val1); //将js对象转换成jQuery对象 var name2 = $(name); var val2 = name2.val(); alert(val2); &#125;)&lt;/script&gt;&lt;body&gt; &lt;input type="text" id="name" value="mike" /&gt;&lt;/body&gt; jQuery选择器基本选择器12345678910111213141516171819202122232425262728&lt;script&gt; $(function() &#123; //&lt;input type="button" value="选择 id为 one 的元素." id="btn1" /&gt; $("#btn1").click(function()&#123; $("#one").css("background-color","red"); &#125;); //&lt;input type="button" value="选择 class 为 mini 的所有元素." id="btn2" /&gt; $("#btn2").click(function()&#123; $(".mini").css("background-color", "green"); &#125;); //&lt;input type="button" value="选择 元素名是 div 的所有元素." id="btn3" /&gt; $("#btn3").click(function()&#123; $("div").css("background-color", "yellow"); &#125;); //&lt;input type="button" value="选择 所有的元素." id="btn4" /&gt; $("#btn4").click(function()&#123; $("*").css("background-color", "yellow"); &#125;); //&lt;input type="button" value="选择 所有的span元素和id为two的元素." id="btn5" /&gt; $("#btn5").click(function()&#123; $("span,#two").css("background-color", "yellow"); &#125;); &#125;)&lt;/script&gt; 层级选择器12345678910111213141516171819202122232425262728&lt;script&gt; $(function() &#123; //&lt;input type="button" value="选择 body内的所有div元素." id="btn1" /&gt; $("#btn1").click(function() &#123; $("body div").css("background-color", "yellow"); &#125;); //&lt;input type="button" value="在body内,选择子元素是div的。" id="btn2" /&gt; $("#btn2").click(function() &#123; $("body&gt;div").css("background-color", "red"); &#125;); //&lt;input type="button" value="选择 id为one 的下一个div元素." id="btn3" /&gt; $("#btn3").click(function() &#123; $("#one+div").css("background-color", "red"); &#125;); //&lt;input type="button" value="选择 id为two的元素后面的所有div兄弟元素." id="btn4" /&gt; $("#btn4").click(function() &#123; $("#two~div").css("background-color", "red"); &#125;); //&lt;input type="button" value="选择 id为two的元素的所有div兄弟元素." id="btn5" /&gt; $("#btn5").click(function() &#123; $("#two").siblings("div").css("background-color", "red"); &#125;); &#125;);&lt;/script&gt; 可见性12345678910111213&lt;script src="../js/jquery-1.8.3.js"&gt;&lt;/script&gt;&lt;script&gt; $(function()&#123; //alert($("input:hidden").val()); //alert($(":visible").size()); console.log($(":visible"));//打印日志 &#125;);&lt;/script&gt;&lt;body&gt; &lt;input type="hidden" value="hidden" /&gt; &lt;input type="text" value="visible" /&gt;&lt;/body&gt; 表单属性12345678910111213&lt;script type="text/javascript" src="../js/jquery-1.8.3.js"&gt;&lt;/script&gt;&lt;script&gt; $(function() &#123; //$("input:disabled").val("dis"); //alert($("#in").attr("id")); $("#in").attr("value", "hello"); &#125;);&lt;/script&gt;&lt;body&gt; &lt;input type="text" disabled="disabled" id="in" / value="disabled"&gt;&lt;br /&gt; &lt;input type="text" value="world" /&gt;&lt;/body&gt; 事件绑定123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;script type="text/javascript" src="../js/jquery-1.8.3.js" &gt;&lt;/script&gt;&lt;script&gt; $(function()&#123; //常规事件绑定 /*$("button").click(function()&#123; alert("点我干啥1"); &#125;);*/ //事件处理bind /*$("button").bind("click", function()&#123; alert("点我干啥2"); &#125;);*/ //事件处理on /*$("button").on("click", function()&#123; alert("点我干啥3"); &#125;);*/ //事件处理one /*$("button").one("click", function()&#123; alert("点我干啥4"); &#125;);*/ //事件切换toggle /*$("button").toggle(function()&#123; alert("点我干啥1"); &#125;,function()&#123; alert("点我干啥2"); &#125;,function()&#123; alert("点我干啥3"); &#125;);*/ //显示隐藏的匹配元素。效果show $("button").bind("click", function()&#123; $("p").show(1000); //$("p").show("slow"); //$("p").show("normal"); //$("p").show("fast"); &#125;) &#125;)&lt;/script&gt;&lt;body&gt; &lt;p style="display: none;"&gt;hello&lt;/p&gt; &lt;button&gt;点击&lt;/button&gt;&lt;/body&gt; 列表动态显示12345678910111213141516171819202122&lt;!-- 引入jQuery --&gt;&lt;script src="../js/jquery-1.8.3.js" type="text/javascript"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt; $(function()&#123; //隐藏第4个之后的品牌，保留最后的“其它品牌相机”继续显示 var cam = $("li:gt(4):not(:last)"); cam.hide(); //span绑定点击事件 $("span").click(function() &#123; if(cam.is(":hidden")) &#123; cam.show(1000); //更换span元素内容 //this.innerHTML = "隐藏更多品牌"; $(this).html("隐藏更多品牌"); &#125;else&#123; cam.hide(1000); //this.innerHTML = "隐藏更多品牌"; $(this).html("显示更多品牌"); &#125; &#125;); &#125;);&lt;/script&gt; 动画效果123456789101112131415161718192021222324&lt;script type="text/javascript" src="../js/jquery-1.8.3.js" &gt;&lt;/script&gt;&lt;script&gt; $(function()&#123; $("#b1").click(function()&#123; //$("img").show(1000); //$("img").slideDown(1000); //$("img").slideToggle(1000); $("img").fadeIn(1000); &#125;); $("#b2").click(function()&#123; //$("img").hide(1000); //$("img").slideUp(1000); $("img").fadeOut(1000); &#125;); &#125;);&lt;/script&gt;&lt;body&gt; &lt;div id="img" width="400px" height="400px"&gt; &lt;img src="../img/1.jpg" hidden="hidden" width="100%" height="100%"/&gt; &lt;/div&gt; &lt;button id="b1" &gt;显示图片&lt;/button&gt; &lt;button id="b2" &gt;隐藏图片&lt;/button&gt;&lt;/body&gt; 元素遍历123456789101112131415161718192021222324252627282930&lt;script type="text/javascript" src="../js/jquery-1.8.3.js" &gt;&lt;/script&gt;&lt;script&gt; $(function()&#123; //第一种方式：元素遍历 /* //$("input").val("hello");//所有元素赋值相同 $("input").each(function(i,n)&#123; //i 每个元素的索引 //alert(i); //n 每个元素对应的js对象 n.value = "hi, "+i; &#125;); */ //第二种方式：元素遍历 $.each($("input"), function(i,n) &#123; //alert(i); n.value = "hello, "+i; &#125;); &#125;);&lt;/script&gt;&lt;body&gt; &lt;input type="text" /&gt; &lt;input type="text" /&gt; &lt;input type="text" /&gt; &lt;input type="text" /&gt; &lt;input type="text" /&gt; &lt;input type="text" /&gt;&lt;/body&gt; 文档处理123456789101112131415161718192021222324252627282930313233&lt;!--文档处理简单案例1--&gt;&lt;script type="text/javascript" src="../js/jquery-1.8.3.js"&gt;&lt;/script&gt;&lt;script&gt; $(function()&#123; //将div2移动到div1 $("#div2").appendTo("#div1"); //div2添加内容"&lt;h1&gt;hello&lt;/h1&gt;" $("#div2").append("&lt;h1&gt;hello&lt;/h1&gt;"); &#125;);&lt;/script&gt;&lt;body&gt; &lt;div id="div1" style="width: 400px; height: 400px; background-color: yellow;"&gt;&lt;/div&gt; &lt;div id="div2" style="width: 100px; height: 100px; background-color: red;"&gt;&lt;/div&gt;&lt;/body&gt;&lt;!--文档处理简单案例2--&gt;&lt;script type="text/javascript" src="../js/jquery-1.8.3.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt; $(function()&#123; //三个元素全部移动 $("#left3").click(function()&#123; $("#leftSelectId option").appendTo("#rightSelectId"); &#125;); //移动选中的元素 $("#left2").click(function()&#123; $("#leftSelectId option:selected").appendTo("#rightSelectId"); &#125;); //移动第1个元素 $("#left1").click(function()&#123; $("#leftSelectId option:first").appendTo("#rightSelectId"); &#125;); &#125;);&lt;/script&gt; 页面加载1234567891011121314151617181920212223242526272829303132&lt;script type="text/javascript" src="../js/jquery-1.8.3.js" &gt;&lt;/script&gt;&lt;script type="text/javascript"&gt; //全局加载:方法内的代码在html页面加载完成后才会执行 //方式1 window.onload = function() &#123; var name = document.getElementById("name").value; //alert(name); //alert($("#name").val()); &#125; //方式二 $(function()&#123; var name = document.getElementById("name").value; //alert(name); //alert($("#name").val()); &#125;); //方式三 jQuery(function()&#123; var name = document.getElementById("name").value; //alert(name); //alert($("#name").val()); &#125;); //方式四 $(document).ready(function()&#123; var name = document.getElementById("name").value; //alert(name); //alert($("#name").val()); &#125;);&lt;/script&gt;&lt;body&gt; &lt;input type="text" id="name" value="mike" /&gt; &lt;br /&gt; &lt;button id="btn"&gt;点击&lt;/button&gt;&lt;/body&gt;]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>QuickStart</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常规驱油实验方案]]></title>
    <url>%2F2018%2F11%2F10%2F%E5%B8%B8%E8%A7%84%E9%A9%B1%E6%B2%B9%E5%AE%9E%E9%AA%8C%E6%96%B9%E6%A1%88%2F</url>
    <content type="text"><![CDATA[实验材料及仪器 聚合物溶液、岩心、模拟油（原油和煤油按照一定比例配制而成，混合比例需提前确定） 中间容器3个（模拟地层水、模拟油、聚合物溶液） 岩心夹持器、压力传感器 真空泵（岩心抽真空）、手摇泵（岩心加围压）、恒速恒压泵（动力源） 流变仪、紫外分光光度计 具塞量筒（50mL，1个），具塞试管（5mL，30个）其他（移液管等） 驱油实验步骤驱油实验步骤主要包括如下7个部分： 抽真空造束缚水 水测渗透率 饱和油 水驱 注聚合物 后续水驱 样品采集及实验目的 抽真空造束缚水首先，岩心烘干，量取岩心直径、长度，并称量岩心质量。然后，在-0.1MPa压力条件下，岩心抽真空造束缚水4h以上。最后，再次称量岩心质量，岩心吸水后增加的质量，即可得到岩心孔隙体积，并可计算出孔隙度。 测量岩心孔隙体积时，若管线较长，需扣除管线内水的体积。 另外，还可以直接在岩心夹持器内抽真空（无需称质量），抽完真空后岩心吸水体积即为岩心孔隙体积，并可计算出孔隙度。 水测渗透率选取高、中、低三个注入速度进行水测渗透率，取平均值，待岩心各测点的压力稳定即可转入下一阶段。 饱和油以合适的注入速度（如0.05mL/min）进行饱和油，出口端用量筒计量排出水的体积，直到不再出水，排出水的总体积即为饱和油体积。岩心饱和油之后老化12h，然后进行水驱。 非均质岩心饱和油时，低渗层在下，高渗层在上。 饱和油阶段时间较长，合理安排时间。 如果原油粘度很高，可以在高温条件下饱和油，然后恢复常温进行接下来的实验。 在高温条件饱和油，如果边升温边实验，因为热膨胀或者原油中溶解气析出，会导致采出液量远大于注入量的情况。因此，建议先将恒温箱温度升至目标温度，然后开始实验，保持实验过程中的温度基本不变。 水驱以合适的注入速度（如0.5mL/min）水驱至岩心出口端含水率高于98%，大概注水2PV左右（注意保持多组实验水驱PV数的一致性），转入聚合物驱阶段。 注聚合物以合适的注入速度（如0.5mL/min），注入0.3PV(通常是0.25-0.5PV)，然后转入后续水驱。 后续水驱聚合物驱结束，转入后续水驱阶段，以相同的注入速度进行后续水驱，直至岩心各测点压力稳定。需要注意的是：尽可能缩短前后两个阶段的转换时间，因为岩心各测点的压力会快速下降。 样品采集及实验目的采样原则 使用合适量程的量筒不间断计量出油体积。 采样间隔6min，用5ml试管取样，样品体积约3mL。 液测渗透率后换压力传感器，然后再饱和油，避免原油泄漏。 管线出口端应加橡皮塞，为避免采出油沾到试管壁，便于读数。 采样后，放置几分钟，待油水分层后读取示数。 水驱：0.5PV开始采样，计算含水率，含水率到达98%转入下一阶段。样品全部收集到100mL具塞量筒。 聚合物驱：按照上述采样原则，持续采样，计算含水率，用5mL试管单独盛放每个采集样品（需要测量聚合物浓度）。 后续水驱：按照上述采样原则，持续采样，计算含水率，每个样品一个5mL试管，样品单独放置（需要测量聚合物浓度）。 实验目的和测量指标实验目的：驱油效率，波及效率，见聚时间（聚合物滞留量，粘度损失）。 测量指标：含水率，浓度（粘度）。 根据测量指标达到实验目的： 计量每个样品的体积（油、水），计算含水率及最终驱油效率。 测量样品浓度，确定岩心出口端的见聚时间。（并根据聚合物的总注入量，计算聚合物在岩心中滞留量） （最后测试样品粘度，明确聚合物溶液的粘度损失情况。） 数据处理注意事项 计算注入孔隙体积(PV)时，应当以岩心出口端采出的液体量而计算得到的PV数为准。 简单用泵速乘以实验时间计算得到的PV数是偏大的，因为岩心中的实际流速要低于设定的泵速。 这篇文章的 PRESS.one 签名:“https://press.one/file/v?s=fd1b726164a6b4303d248e891a271a7eac2208cfb588464fa2772c584092a644224958acb34a48ce386828941074283119a7a911f82d3ae1068f2d66f6649f841&amp;h=7528596698111a68070e79cc2f7ca3ade590c46d377af1a5b8c888b3a5db25d6&amp;a=5fff08474362b1e48d72b083abf18d2360881d5e&amp;f=P1&amp;v=2]]></content>
      <categories>
        <category>Research</category>
      </categories>
      <tags>
        <tag>Guide</tag>
        <tag>Petroleum</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[七牛云测试域名过期，存储图片的下载方法]]></title>
    <url>%2F2018%2F11%2F09%2F%E4%B8%83%E7%89%9B%E4%BA%91%E6%B5%8B%E8%AF%95%E5%9F%9F%E5%90%8D%E8%BF%87%E6%9C%9F%EF%BC%8C%E5%AD%98%E5%82%A8%E5%9B%BE%E7%89%87%E7%9A%84%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[作为免费图床，七牛云是很好选择之一。但是，自上个月起，七牛云开始回收测试域名，即便重新分配测试域名也是30天之后自动回收，详见七牛云官方通告：测试域名使用规范。 七牛云邮件提醒回收测试域名时，没有及时下载备份存储的图片？ 七牛云测试域名回收之后，原来通过外链引用的图片失效？ 想要更新外链，七牛云存储的图片 却无法直接下载？ 此情此景，百度一下，不少人像我一样有如此遭遇。下面根据查找的资料，给出解决方法： 新建存储空间(bucket)重新创建一个新的存储空间，会自动分配一个新的测试域名，选择的地区（如华北）应与原存储空间选择的地区相同。 批量复制(batchcopy)七牛云命令行工具(qshell)批量复制及下载均需要借助七牛云的命令行工具(qshell)，下载地址、使用指南及常用命令参见：命令行工具(qshell)。 根据系统下载命令行工具(qshell)，以win7系统为例进行详细说明，避免入坑： 下载命令行工具后，为了便于使用，将与系统对应的exe文件重命名为qshell.exe。 打开系统命令行工具，将qshell.exe文件所在目录设置为当前工作目录，才可以使用七牛云命令行工具(qshell)。如果不设置前两步而直接运行EXE文件则闪退。 设置秘钥。秘钥可在“个人面板/秘钥管理”页面查看12$ qshell account AccessKey SecretKey //设置秘钥$ qshell account //查看秘钥 获取仅有文件名的文件列表批量复制batchcopy命令，需要用到仅有文件名的文件列表。 获取原存储空间的完整文件列表（包含文件名、类型、日期等） 12//bucketname：原存储空间名称；list.txt：原存储空间文件列表的保存文件$ qshell listbucket bucketname list.txt 获取仅有文件名的文件列表。对于wins系统，简单粗暴的做法就是，将刚刚获取的list.txt粘到excel表格中，然后将第1列文件名粘贴到新的文件如name.txt。如果有文件名含中文，则需要将txt文件的编码方式转为UTF-8编码，否则复制名称含中文的文件时会报错。不过，其他文件并不受影响。 批量复制文件至新存储空间1234567/* -force 加入此选项不需要输入验证码&lt;SrcBucket&gt; 原存储空间名称&lt;DestBucket&gt; 新建存储空间名称&lt;SrcDestKeyMapFile&gt; 需要复制的文件列表，即上述得到的name.txt*/$ qshell batchcopy -force &lt;SrcBucket&gt; &lt;DestBucket&gt; &lt;SrcDestKeyMapFile&gt; 批量下载(qdownload)复制完成之后，可以进入新的存储空间进行确认复制是否成功。 123//[&lt;ThreadCount&gt;]: 同时下载文件数量（1-2000），默认为5//&lt;LocalDownloadConfig&gt;: 配置文件，如tmp.conf$ qshell qdownload [&lt;ThreadCount&gt;] &lt;LocalDownloadConfig&gt; 需要在上述qshell.exe文件所在目录新建配置文件，以.conf为后缀，如tmp.conf。配置文件的内容如下：123456789101112/*dest_dir 下载文件存储目录。wins下目录示例 D:\\jemy\\backup，尽量不要出现中文，否则涉及编码问题bucket 新建存储空间的名称suffixes 下载文件的后缀cdn_domain 新建存储空间的CDN测试域名，可在新存储空间页面查看*/&#123; "dest_dir" : "&lt;LocalBackupDir&gt;", "bucket" : "&lt;Bucket&gt;", "suffixes" : ".png,.jpg", "cdn_domain" : "down.example.com",&#125; 配置完成，就可以开始批量下载了，好运！]]></content>
      <categories>
        <category>Guide</category>
      </categories>
      <tags>
        <tag>七牛云</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[专属你的青海湖旅游攻略]]></title>
    <url>%2F2018%2F11%2F08%2F%E4%B8%93%E5%B1%9E%E4%BD%A0%E7%9A%84%E9%9D%92%E6%B5%B7%E6%B9%96%E6%97%85%E6%B8%B8%E6%94%BB%E7%95%A5%2F</url>
    <content type="text"><![CDATA[本攻略包含两部分可供你参考的内容： 我们青海湖旅行的见闻及遇到的问题； 建议青海湖旅行路线及相关注意事项。 第一部分：我们青海湖旅行的见闻 从火车站出来，西宁给人的第一感觉：清爽。 环青海湖旅行主要有三种方式： 跟团(360/2天，来自去哪儿网和蚂蚁窝) 包车(600/天，1000/2天，来自火车站师傅报价) 自由行。 我们是乘坐大巴自由行，环青海湖旅行路线： 二郎剑景区–&gt; 黑马河乡 –&gt;茶卡盐湖 第一站：二郎剑景区（151基地） 交通：西宁火车站出站，左手边就是汽车站，有旅游大巴到青海湖，在二郎剑景区下车，3h车程，车票35/人。坐在大巴去青海湖的一路上，也能饱览青海地区的独特风景。（20170822，12:00-15:00） 门票价格：100/人，美团95/人，自助取票。 开放时间：全天开放 参观耗时：2h 观后感：置身二郎剑景区，近距离接触青海湖，近处的湖面在微风的吹拂下泛起阵阵涟漪，远处碧水蓝天，白云高山，相映成趣。 建议：总体而言，青海湖二郎剑景区本身并没有什么特别引人注目的地方。不过，从黑马河乡返回西宁时，途径二郎剑景区，如果有时间也不妨停下来看看，说不定有意外的收获。 第二站：黑马河乡 二郎剑景区到黑马河乡，1h车程，票价30/人。（17:00-18:00） 在宾馆稍作休息后，去超市买了些零食，然后伴着落日和晚霞，从宾馆后面向青海湖边走去。 穿过几道铁丝网，越靠近湖边草原上的水越多，以至于无法靠近湖边，只好远远眺望。 不幸的是，第二天早上下雨，所以并没有看到预想的日出。 第三站：茶卡盐湖 交通从黑马河乡徒步近2h，大概8km路程，终于拦到一辆西宁到乌兰的大巴，途径茶卡盐湖，车程1h左右，票价25/人。路上也拦了很多辆从西宁到敦煌、兰州的大巴，但司机都不停车。徒步过程中，沿途的风景非常美，手机拍照效果不佳，美景唯有留在心中。（20170823，10:00-11:50）从茶卡盐湖下车，步行3km，耗时50min，到达茶卡盐湖景区，如坐出租车，大概10min左右。 门票价格：70/人，有自助购票机。去哪儿或携程购买门票68/人，可直接扫二维码进入景区。 参观耗时：步行参观时长3h，路程约11km。 观后感：进入景区，到达天空之境广场，此时丝毫看不到茶卡盐湖的“天空之境”的踪迹，只看到游人如织，人在蓝天白云和连绵高山的衬托下如同蝼蚁。往前走，一代天骄成吉思汗的盐雕在蓝天白云巍然屹立。一步步走向茶卡盐湖，天空之境渐入眼帘，洁白的湖面，倒映着蓝天白云，周围的连绵高山与天相接。许多游人脱下鞋子，走到湖中拍照，以洁白湖面和蓝天白云为背景，游人显得愈发美丽，更加纯粹。 返回西宁：五点从茶卡盐湖景区出来，经过询问，乘坐出租车去茶卡镇坐大巴。出租车司机，飞一般的速度把我们送到汽车站，刚好赶上五点二十的最后一班返回西宁的大巴，预计耗时五个小时，于十点半到达西宁汽车站。不幸的是，大巴车档位错乱，中途停了两次，比预计晚了两个小时，十二点半到目的地。第一次停车期间，我快速爬到了一座山头，站在海拔3800m的山顶俯瞰青海湖。一路小跑上山，喘得很厉害，有点高原反应的意思，所以不得不降低速度，不过下山就快了许多，山坡比较舒缓，而且刚下山没多久，大巴就再次出发。 旅途虽有坎坷，却已留下我们的足迹，都将成为今后的回忆。 第二部分：建议青海湖旅行路线7-8月是环青海湖旅行的最佳季节，7月中旬到8月中旬则是青海湖看油菜花的绝好时机。建议青海湖旅行路线如下，并分别各景区的门票价格、参观耗时、交通及注意事项等进行简单介绍。 茶卡盐湖–&gt;|大巴|–&gt;黑马河乡–&gt;|徒步|–&gt;环湖西路 本攻略是青海湖两到三天的旅游路线规划，但涵盖内容有限。想了解更多详细内容可参考：蚂蜂窝旅游攻略——青海湖旅游。 茶卡盐湖：欣赏天空之境 交通： 火车：Y961(西宁-茶卡)，上午8:25开车，直达茶卡盐湖景区，硬座成人票价62.5，耗时4h，正点到达茶卡的时间是12:23。 大巴：汽车站(火车站旁)坐大巴，5h车程，直达茶卡镇，然后坐出租车到茶卡盐湖景区，下午参观茶卡盐湖(耗时3h)。 门票价格：70/人，去哪儿或携程购买门票68/人，可直接扫二维码进入景区。 开放时间：7:00～18:30 参观耗时：3小时 注意事项：从西宁到茶卡，如果乘大巴，最好坐8:00的大巴。因为西宁到茶卡镇有5h车程，参观景区耗时3h，坐出租往返茶卡镇和景区以及中途歇息吃饭还需要约1h，所以最快17:00才到茶卡镇汽车站，赶上从茶卡镇到黑马河乡的最晚一趟17:20的大巴。为了节省体力和时间，可坐小火车到茶卡盐湖中央，返回时徒步，慢慢欣赏沿途的美景。 黑马河乡：观赏日落日出最好赶在17:20之前，坐大巴去黑马河乡(耗时1h)，当晚在黑马河乡下榻。黑马河乡是位于青海湖西南部，是距离环湖西路最近的补给点，乘大巴去茶卡盐湖需从此翻越3800m的橡皮山。黑马河乡是青海湖观赏日出的最佳地点之一。 食宿：黑马河乡的马路两旁都是宾馆和小饭馆，所以吃饭和住宿很好解决。需要注意的是，当地的自来水很凉，宾馆可能是用太阳能提供热水，如遇阴雨天气，热水可能并不热，建议入住前试一下热水温度。 观赏日落和日出：订好宾馆后，可以走到宾馆后边的草原上看看日落，如果天还很亮，可以看到远处的青海湖。你可能想从草原上走到青海湖边，但由于越靠近湖边草原上的水越多，以至于根本无法到达湖边，正因为如此，使得青海湖可望而不可及。另外，当天晚上查一下共和县第二天的日出时间，以便第二天如约和日出相遇。 环湖西路：沿青海湖徒步 由于没能去亲自去环湖西路，所以该部分内容主要参考蚂蜂窝青海湖旅游攻略上面的介绍。 黑马河乡是环湖西路的起点，黑马河乡至石乃亥乡共41km的环湖西路是青海湖最美路段。 其中，环湖西路的13-16km处是距湖最近点，下了公路步行3-5min即可到达湖边亲手触摸到湖水，风景绝佳，环湖西路上的民宿是夜晚观看璀璨星空的绝佳地点。 而且，环湖西路在不同的季节呈现出不同的美景： 5月，野花绽放、群鸟飞翔； 8月，万亩油菜花在湖畔灿烂盛开； 10月，繁华过尽，草原归于平静，青海湖呈现出最朴素的自然美。 交通：从黑马河乡到石乃亥乡：有绿色班车，如果包车前往，费用在150左右。另外，从黑马河乡到西宁：有茶卡或乌兰至西宁的大巴路过黑马河乡，4h车程，40/人。 注意事项 天气：昼夜温差大，天气变化快，长衣长裤必备。 防晒：气候干燥，紫外线强，携带防晒品。 高原反应：景区海拔3000m以上，最好携带抗高反药品（如携氧片、红景天等），特别是上了年纪的人。 拍照：由于多需要拍远景，手机拍照显得有点相形见绌，所以想要拍出美丽的照片，相机就显得非常有必要。 旅行是一场考验体力和财力的视觉盛宴，小伙伴且行且珍惜。]]></content>
      <categories>
        <category>Travel</category>
      </categories>
      <tags>
        <tag>青海湖</tag>
        <tag>茶卡盐湖</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java开发环境配置]]></title>
    <url>%2F2018%2F11%2F07%2FJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[下载安装编辑器：Notepad++|Sublime Text 3|Atom，任选其一即可。 下载安装JDK：Java SE 8 Archive Downloads，需要注册oracle账户。 环境变量配置（基于win7系统） 计算机-&gt;右击，属性-&gt;高级系统设置-&gt;环境变量-&gt;新建系统变量： 变量名：JAVA_HOME 变量值：C:\Program Files\Java\jdk1.8.0_172（即jdk安装目录） -&gt;更改系统变量Path在最左侧添加： %JAVA_HOME%\bin;]]></content>
      <categories>
        <category>JavaSE</category>
      </categories>
      <tags>
        <tag>Guide</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript快速入门]]></title>
    <url>%2F2018%2F11%2F06%2FJavaScript%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[Javascript概述 JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言，最早是在HTML（标准通用标记语言下的一个应用）网页上使用，用来给HTML网页增加动态功能。 JavaScript是因特网上最流行的脚本语言。因脚本语言不能单独使用，必须嵌入到其他语言中组合使用。所以JavaScript不能单独使用，必须和其他语言（HTML）结合使用。 JavaScript由浏览器解释执行（解释一条，执行一条。故写代码时能用一条语句就不要用两条语句）。所以JavaScript代码必须强调效率和可读性；JavaScript代码遇到错误，解析引擎停止 Javascript的作用及特点Javascript的作用： JS可以控制前端页面的逻辑操作书写规范 JS可以控制CSS的样式； JS可以对表单项进行校验（主要作用） JS可以对HTML元素进行动态控制 Javascript的特点： 安全性（没有访问系统文件权限，无法用来做木马病毒） 跨平台性（浏览器有JS解析器，有浏览器就能运行JS代码，和平台无关） 交互性（JavaScript控制HTML元素） Javascript组成部分 ECMAScript，描述了Javascript的语法和基本对象。 文档对象模型（DOM），描述处理网页内容的方法和接口。 浏览器对象模型（BOM），描述与浏览器进行交互的方法和接口。 JavaScript和HTML的结合方式JavaScript在HTML中有两种使用方式： 内部使用方式。 代码示例如下12345&lt;script type="text/javascript"&gt; //JavaScript的代码 var str = "Hello JS"; alert(str);&lt;/script&gt; 外部使用方式。 外部引用时script标签内不能有script代码，即使写了也不会执行。代码示例如下12&lt;script type="text/javascript" src="../js/test.js"&gt;&lt;/script&gt; Javascript基本语法参考文档：W3School:JavaScript 教程 注释单行注释 //单行注释内容 多行注释 /*多行注释内容 第二行注释 第三行注释 */ 变量JavaScript变量的声明JavaScript中所有类型的变量声明都用var关键字。 变量以字母开头，也可以 $ 和 _ 符号开头（不推荐） 变量名称对大小写敏感 JavaScript变量的数据类型分为：原始数据类型和引用数据类型 JavaScript原始数据类型 string，字符串类型，””和’’都表示字符串； boolean，布尔类型，true、false； number，数字类型：整数、小数和NaN（Not a Number）。其中，NaN!=NaN； null，空，对象的占位符，表示引用类型的对象不存在； undefined，值未定义，即声明变量未赋值，系统会自动赋值undefined。其中，undefined==undefined。 变量定义代码示例如下：123456789101112131415161718&lt;script type="text/javascript"&gt; var str = "hi"; var num1 = 12; var num2 = 12.0; var num3 = "12.0l"; var b = true; var n =null; var a; alert(typeof(str)); //string alert(typeof(num1)); //number alert(typeof(num2)); //number alert(typeof(num3)); //string alert(typeof(b)); // boolean alert(typeof(n)); // object alert(typeof(a)); // undefined alert(c); // undefined&lt;/script&gt; 其中，undefined容易和”变量未声明就使用”混淆。“变量声明未赋值时使用”或”对象的属性未赋值时使用”都会出现undefined。但如果变量”未声明”就使用，JavaScript会报错”变量未定义”并截停代码。123456//变量声明未赋值时使用： var str; alert(str);//undefined//变量未声明就使用： alert(a);//报错，并且截断javascript代码 引用数据类型Javascript引用数据类型如下，可以参考w3school：JavaScript 对象，后面结合函数部分会选取其中的Date和RegExp进行深入学习。 Javascript常用对象-Boolean Javascript常用对象-Number Javascript常用对象-Array Javascript常用对象-String Javascript常用对象-Date Javascript常用对象-Math Javascript常用对象-RegExp 运算符算数运算符 加号+：算术运算加；字符串连接符。 减号-：算术运算减；数字转换符，会把其他值转换成数字。 string转number 如果string可以转换成number，那么转换后算术运算 如果不能转换成number，那么整体NaN boolean转number True---&gt;1 False---&gt; 0 null转number 转换成0 undefined转number 转成NaN NaN和其他数字运算都是NaN 1234567891011121314151617&lt;script&gt; var a = 12; var b = 2; var c = "12"; var d = 10.2; var t = true; var n = null; var u; alert(a+b); // 12 alert(a+c); // 1212 alert(a+d); // 22.2 alert(typeof(-c)); // number alert(a-c); // 0 alert(a-t); // 11 alert(a-n); // 12 alert(a-u); // NaN&lt;/script&gt; 比较运算符== 比较值 === 比较值和类型。 如果变量值和变量类型都相同，那么true，有一个不同则为false。 != 比较值 !== 全不等。比较值或比较类型，有一个不同即为不同，true。值和类型都相同，则为false。 代码示例：1234567891011121314151617181920&lt;script&gt; var x=8; alert(x==8); //true alert(x===8); //true alert(x=="8"); //true alert(x==="8"); // false alert(x!=8); // false alert(x!=1); //true alert(x!==8); //false alert(x!==1); //true alert(x!="8"); //false alert(x!="1"); //true alert(x!=="8"); //true alert(x!=="1"); //true&lt;/script&gt; 逻辑运算符&amp;&amp; 逻辑与 || 逻辑或 ！ 非 注：使用以上逻辑运算符，最终都会用boolean类型运算，若不是boolean类型，则进行转换。 number转boolean：-0或0或NaN转换成false，其他为true; string转boolean：&quot;&quot;为false，其他为true; null转boolean：转为false; undefined转boolean：转为false; 对象转boolean：转为true; 综上：0、-0、null、””、undefined、NaN，转换为false，否则转换为true。 流程控制语句判断语句与java相同，代码示例： 123456var a = 12;if(a)&#123; alert(a);&#125; else&#123; alert(-1);&#125; 循环语句：常用的是for循环，while和switch用的比较少。区别于Java中的增强for，JavaScript中的增强for遍历数组时，其中变量代表的是数组的下标，而且无需写定义变量符号（var）。 代码示例： 123456789101112&lt;script&gt; var arr = [1, 2, 3, 4, 5, 6]; alert(arr.length); //输出数组长度 //普通for循环 for(var i = 0; i &lt; arr.length; i++) &#123; alert(arr[i]); &#125; //增强for循环 for(i in arr)&#123; alert(arr[i]); &#125;&lt;/script&gt; Javascript的方法（函数）Javascript的方法示例Javascript函数创建及调用方式如代码示例所示。与java相比，Javascript函数有返回值无需声明返回值类型，没有返回值也无需声明void。123456789101112131415161718&lt;script type="text/javascript"&gt; //最常用创建函数的方法 function add(a, b) &#123; return a + b; &#125; //创建函数的方法2 var add = function(a, b) &#123; return a + b; &#125; //创建函数的方法3 var add = new Function("a", "b","return a + b");//参数列表，函数体 //调用函数 var sum = add(1,2); alert(sum);&lt;/script&gt; 使用add(1,2,3,4)调用上述代码示例中的add函数，如果在java中是会报错的，但是对于javascript来说，不会报错。也就是说，在javascript中，函数调用时传递的参数不一定要与函数声明时的参数个数一致。而且当调用函数时传递的参数与函数定义时参数个数不一致时，可以借助一个特殊对象arguments，来获取函数中的所有参数。代码示例如下：123456789101112&lt;script type="text/javascript"&gt; //最常用创建函数的方法 function add(a, b) &#123; // return a + b; alert(arguments.length); //返回传入参数个数 for(i in arguments)&#123; //逐个打印传入的参数 alert(arguments[i]); &#125; &#125; //调用函数，依次返回传入参数个数，及各个参数值 add(1,2,3,4);&lt;/script&gt; 日期对象-DateDate 对象用于处理日期和时间。Date 对象具有很多方法，可参考JavaScript Date 对象参考手册。借助Date 对象实现一个简单的动态时钟，代码示例如下:12345678910111213141516171819202122232425262728&lt;body&gt; &lt;h1 id="clock"&gt;&lt;/h1&gt;&lt;/body&gt;&lt;script type="text/javascript"&gt; //创建一个动态时钟，每隔一秒跳动一次。 function clock() &#123; //1. 创建Date 对象，它会自动把当前日期和时间保存为其初始值。 var d = new Date(); //2. 获取时间，时分秒 var h = d.getHours(); var m = d.getMinutes(); var s = d.getSeconds(); h = (h &lt; 10) ? "0" + h : h; m = (m &lt; 10) ? "0" + m : m; s = (s &lt; 10) ? "0" + s : s; //3. 获取元素，doccument对象方法 var h1 = document.getElementById("clock"); //4. 向元素中插入获取的时间 h1.innerHTML = h + ":" + m + ":" + s; &#125; //5. 动态时钟。setInterval方法是在函数体之外调用， //setInterval方法有两个参数：1. 调用方法名称（注意括号，引号）；2. 时间间隔，单位毫秒 setInterval("clock()", 1000);&lt;/script&gt; 正则表达式-RegExp使用正则表达式对输入框的数据进行校验，代码示例如下。123456789101112131415161718192021222324&lt;body&gt; username: &lt;input type="text" id="name" value="hellomike" /&gt; &lt;span id="msg"&gt;&lt;/span&gt;&lt;/body&gt;&lt;script type="text/javascript"&gt; //使用正则表达式对输入框的数据进行校验 function checkname() &#123; //1. 定义正则表达式 rex = /^[a-zA-Z]&#123;6,12&#125;$/; //2. 获取输入框中的内容 var name = document.getElementById("name").value; //3. 校验输入内容是否合法，并输出校验结果 if(rex.test(name)) &#123; //如果输入内容合法，则输出“格式正确” document.getElementById("msg").innerHTML = "&lt;font color='green'&gt;格式正确&lt;/font&gt;"; &#125; else &#123; document.getElementById("msg").innerHTML = "&lt;font color='green'&gt;格式不正确&lt;/font&gt;"; &#125; &#125; //调用函数 checkname();&lt;/script&gt; 事件的绑定事件： 记录用户在浏览器上的操作行为。 事件源： 触发事件的元素。 事件和方法的绑定： 当触发事件的时候执行具体的某个方法。 在javascript中，事件经常与函数一起使用，事件与函数绑定，就是某个事件被触发后，函数被调用。事件与函数绑定通常有两种方法： 在事件源元素上直接写事件属性，并赋值方法名（别忘了函数的小括号）。代码示例如下： 12345678&lt;body&gt; &lt;button id="btn" onclick="test()"&gt;点我&lt;/button&gt;&lt;/body&gt;&lt;script&gt; function test()&#123; alert("点我，干啊哈"); &#125;&lt;/script&gt; 先获取事件源元素，然后给事件属性赋值方法。代码示例如下： 12345678&lt;body&gt; &lt;button id="btn"&gt;点我&lt;/button&gt;&lt;/body&gt;&lt;script&gt; document.getElementById("btn").onclick = function()&#123; alert("又点我，作甚"); &#125;&lt;/script&gt; DOM对象当网页被加载时，浏览器会创建页面的文档对象模型（Document Object Model），页面加载HTML文档，HTML文档内部遵循文档对象模型规范，其内部维护一个DOM树模型(如同HTML源代码一样一层一层)。DOM对象就是用来操作DOM树的。 获取单个或多个元素DOM对象可以操作dom文档中的任何元素、元素的属性和文本。代码示例： 123456789101112131415&lt;body&gt; username: &lt;input type="text" id="nick" value="mike" class="input" /&gt; &lt;br /&gt; E-mail: &lt;input type="text" id="email" value="123@qq.com" class="input" /&gt; &lt;br /&gt; gender: &lt;input type="text" id="gender" value="man" class="input" /&gt; &lt;br /&gt;&lt;/body&gt;&lt;script&gt; //获取单个元素 var name = document.getElementById("nick").value; //alert(name); //获取多个元素 var ins = document.getElementsByClassName("input"); var ins2 = document.getElementsByTagName("input"); alert(ins.length);&lt;/script&gt; JavaScript综合案例表单校验案列1234567891011121314151617181920212223242526272829303132333435363738394041&lt;body&gt; &lt;!--表单校验；校验用户名和密码，两者均合法才能跳转到注册成功页面。 onsubmit事件比较特殊，需要有返回值。 submit.html与本文件在相同目录下。 --&gt; &lt;form action="submit.html" onsubmit="return checkall()"&gt; username:&lt;input type="text" id="name" value="hellomike" onblur="check('name')"/&gt; &lt;span id="namespan"&gt;&lt;/span&gt;&lt;br /&gt; password:&lt;input type="password" id="pwd" value="123456" onblur="check('pwd')"/&gt; &lt;span id="pwdspan"&gt;&lt;/span&gt;&lt;br /&gt; &lt;button type="submit"&gt;submit&lt;/button&gt; &lt;/form&gt;&lt;/body&gt;&lt;script&gt; //提交数据前，校验输入数据是否都合法，都合法返回true，否则false function checkall()&#123; var rex = /^[a-zA-Z0-9]&#123;6,8&#125;$/; var name = document.getElementById("name").value; var pwd = document.getElementById("pwd").value; if(rex.test(name) &amp;&amp; rex.test(pwd))&#123; return true; &#125; else&#123; return false; &#125; &#125; //校验用户名和密码 function check(id)&#123; //获取输入数据，即用户名或密码 var nick = document.getElementById(id).value; //定义正则表达式，校验数据 var rex = /^[a-zA-Z0-9]&#123;6,8&#125;$/; if(rex.test(nick))&#123; //输出校验结果 document.getElementById(id+"span").innerHTML = "&lt;font color='green'&gt;格式正确&lt;/font&gt;"; &#125;else&#123; document.getElementById(id+"span").innerHTML = "&lt;font color='red'&gt;不格式正确&lt;/font&gt;"; &#125; &#125;&lt;/script&gt; 鼠标悬浮变色案例1234567891011121314151617181920212223242526272829303132333435363738&lt;body&gt; &lt;!--生成3行3列表格--&gt; &lt;table border="1px" cellspacing="0" width="300px" bgcolor="green"&gt; &lt;caption&gt;3行3列数字表格&lt;/caption&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt;&lt;script&gt; //获取所有表格行元素 var trs = document.getElementsByTagName("tr"); for(i in trs)&#123; //鼠标滑过单元格背景色变白色 trs[i].onmouseover = function()&#123; this.style.backgroundColor = "white"; &#125; //鼠标滑过单元格背景色恢复原色（绿色） trs[i].onmouseout = function()&#123; this.style.backgroundColor = "green"; &#125; &#125;&lt;/script&gt; 动态切换图片案列 图片手动切换 123456789101112131415161718&lt;body&gt; &lt;div&gt; &lt;img id="picture" width="300" height="300" src="../img/0.jpg"/&gt; &lt;/div&gt; &lt;input type="button" value="手动切换图片" onclick="imageUpdate()" /&gt;&lt;/body&gt;&lt;script type="text/javascript"&gt; var i = 0; function imageUpdate()&#123; i++; document.getElementById("picture").src = "../img/" + i + ".jpg"; //图片名称分别为0，1，2，3，4 if(i == 5)&#123; i = 0; &#125; &#125;&lt;/script&gt; 图片动态切换 1234567891011121314151617&lt;body&gt; &lt;div id=""&gt; &lt;img id="img" width="300px" height="300px" src="../img/0.jpg"/&gt; &lt;/div&gt; &lt;/body&gt;&lt;script type="text/javascript"&gt; var i = 0; function imageUpdate()&#123; document.getElementById("img").src = "../img/"+ i +".jpg/"; i++; //图片名称分别为0，1，2，3，4 i = (i==5)?0:i; &#125; //每隔1s调用函数1次，以实现图片动态切换 setInterval("imageUpdate()",1000);&lt;/script&gt; 全选/反选案例12345678910111213141516171819202122232425262728293031323334353637&lt;body&gt; &lt;table border="1px" cellspacing="0" width="500px" bgcolor="#FF0000"&gt; &lt;caption&gt;3x4 Table&lt;/caption&gt; &lt;tr&gt; &lt;!-- 点击复选框调用check函数，并将第一个复选框的选中状态作为参数传给check函数 --&gt; &lt;td&gt;&lt;input type="checkbox" onclick="check(this.checked)"/&gt;全选/反选&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;input type="checkbox"/&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;input type="checkbox"/&gt;&lt;/td&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/body&gt;&lt;script&gt; function check(data)&#123; //获取复选框所在单元格元素 var ins = document.getElementsByTagName("input"); //将第一个复选框的选中状态传递给剩余复选框，以实现全选或反选 for(i in ins)&#123; ins[i].checked = data; &#125; &#125;&lt;/script&gt; 城市的二级级联12345678910111213141516171819202122232425262728293031323334353637383940&lt;body&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt;出生地&lt;/td&gt; &lt;td&gt; &lt;select name="prov" onchange="updateCity(this.value)"&gt; &lt;option&gt;--请选择--&lt;/option&gt; &lt;option value="0"&gt;北京市&lt;/option&gt; &lt;option value="1"&gt;河北省&lt;/option&gt; &lt;option value="2"&gt;河南省&lt;/option&gt; &lt;/select&gt; &lt;select id="city"&gt; &lt;/select&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/body&gt;&lt;script&gt; //创建二维数组存放城市 var cities = new Array(3); cities[0] = new Array("朝阳", "海淀", "丰台"); cities[1] = new Array("石家庄", "保定", "廊坊", "邢台"); cities[2] = new Array("郑州", "开封", "洛阳", "南阳", "信阳"); function updateCity(i) &#123; //获取select元素 var city = document.getElementById("city"); city.length = 0; for(j in cities[i]) &#123; //创建option元素 var op = document.createElement("option"); //创建文本节点 var tn = document.createTextNode(cities[i][j]); //将文本节点插入创建的option元素 op.appendChild(tn); //将创建的option元素插入city变量，即select元素 city.appendChild(op); &#125; &#125;&lt;/script&gt;]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>QuickStart</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[编程三大利器及四步走战略]]></title>
    <url>%2F2018%2F11%2F06%2F%E7%BC%96%E7%A8%8B%E4%B8%89%E5%A4%A7%E5%88%A9%E5%99%A8%E5%8F%8A%E5%9B%9B%E6%AD%A5%E8%B5%B0%E6%88%98%E7%95%A5%2F</url>
    <content type="text"><![CDATA[编程三大利器Google 互联网时代，不学编程，搜索也应是必备技能。知之为知之，不知Google知 Google + Wikipedia + English = Almost Everything 科学上网，请自行百度蓝灯之类，或者可访问getlantern Stack OverflowGoogle编程问题，遇见的一直都是他。所以有新闻吐槽到，「计算机编程铁律」将会被正式命名为「Google 一下，然后 Stack Overflow」 Stack Overflow（堆栈溢出）是一个面向程序员的问答网站，2015 年时每天有 760 万的访问量，是当时世界上访问量第 57 位的网站。对在编程中遇到困难的人来说，Stack Overflow 就是庇护所。无论新手还是老手，都把 Stack Overflow 作为一个主要的资源网站。不确定如何解决一个难题？把这个问题放在 Stack Overflow 上。一般来讲，半个小时之内这个问题就会被其他的用户解决（免费）。但切记，如果你不想让你的问题被草草地浏览，请把你的问题写清晰明了。（引自Stack Overflow 与全民编程时代） Github 截止到2015年，GitHub已经有超过九百万注册用户和2110万代码库。事实上已经成为了世界上最大的代码存放网站和开源社区。GitHub除了托管代码功能之外，它也提供了一些协同开发的功能，包括允许追踪其他用户、组织、软件库的动态，对软件代码的改动和bug提出评论等。GitHub也提供了图表功能，用于概观显示开发者们怎样在代码库上工作以及软件的开发活跃程度。（引自维基百科GitHub） 编程四步走 有问题Google一下 打开Stack Overflow找代码 复制&amp;粘贴代码 运行代码123如果代码不能运行： 返回第2步否则：返回第1步 FAQ Q：如果找不到代码咋办？ A：不可能，继续找。(引自漫画：如何编程？四步走，So easy！)]]></content>
      <categories>
        <category>Guide</category>
      </categories>
      <tags>
        <tag>Google</tag>
        <tag>Stack Overflow</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux下安装Python包]]></title>
    <url>%2F2018%2F11%2F05%2FLinux%E4%B8%8B%E5%AE%89%E8%A3%85Python%E5%8C%85%2F</url>
    <content type="text"><![CDATA[安装指南：Python官方安装指南(英文)和ubuntu一些基本软件安装方法(中文) 1. pip安装python标准库中的包123456# 如果提示没有权限，安装命令前加sudopip install 'SomeProject' # 安装最新版本的包pip install 'SomeProject==1.4' # 安装特定版本的包pip install -U setuptools # 安装安装包时会用到的工具setuptools 2. apt-get安装方式12345678910111213sudo apt-get install 安装包名称sudo apt-get install python-jinja2sudo apt-get install python2.7-mysqldbsudo apt-get install python-pip# 完整步骤（下载、解压、更新、安装）wget url # 根据链接url下载文件targetunzip target # 解压文件sudo apt-get update # 更新软件信息库sudo apt-get install target #以编译方式安装target文件 3. deb类型安装包的安装方式 deb 是 debian 系 Linux 的包管理方式, ubuntu 是属于 debian 系的 Linux 发行版，默认支持这种软件安装方式，当下载到一个deb 格式的软件后，在终端输入如下一行命令就能安装:1sudo dpkg -i deb安装包名称加后缀 4. 安装tar.gz或tgz软件 方法1 12341. 下载压缩包2. 解压压缩包3. cd到解压后的文件目录下，执行sudo Python setup.py install 方法2 1234567891011121314# 以python3.5.3安装为例首先下载安装包#解压安装包，并出现Python-3.5.3.tgz目录tar -xzvf Python-3.5.3.tgz cd Python-3.5.3.tgz./configuremake # 如果报错请求被拒绝，则使用sudo重新运行make install]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Guide</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS快速入门]]></title>
    <url>%2F2018%2F11%2F04%2FCSS%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[层叠样式表（Cascading Style Sheets），样式定义如何显示html元素，多个样式可以叠加显示，样式通常保存在样式表中，即css文件。 将CSS添加到HTML中，解决了内容与表现分离的问题，更好的修饰HTML内容的样式，丰富页面，渲染显示效果，更好的规划页面布局。而且，外部CSS便于维护，极大提高工作效率。 CSS基本语法CSS 基本语法由两个主要部分构成：选择器和声明。代码示例如下： 如果值为多个单词，则要给值加双引号 多个声明之间使用分号(;)隔开 css对大小写不敏感，如果涉及到与html文档一起使用时，class与id名称对大小写敏感 123456789p&#123; text-align:center; font-family:arial; color:black;&#125;/*p 为元素选择器&#123;&#125; 中内容为样式的声明*/ 导入CSS的方式内联样式表内联样式，是在相关的标签内使用样式（style）属性。style 属性可以包含任何 CSS 属性，代码示例如下:12345678910111213&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8" /&gt; &lt;title&gt;Hello&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!--内联样式表--&gt; &lt;p style="font-family: '黑体';color: yellowgreen;"&gt; CSS即层叠样式表（Cascading Style Sheets）&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 提示：慎用内联样式表，它将html的内容与表现混在一起，没有发挥层叠样式表的优势。一般情况下，只有在单个标签上只应用一次样式时才会使用，这种方式使用的仅仅是标签的一个样式属性。 内部样式表内部样式表，是使用style标签在html文档的head中来定义样式表。内部样式表只适应用于单个页面。代码示例如下：123456789101112131415161718&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8" /&gt; &lt;title&gt;Hello&lt;/title&gt; &lt;!--内部样式表--&gt; &lt;style type="text/css"&gt; p&#123; font-family: "微软雅黑"; color: red; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;CSS即层叠样式表（Cascading Style Sheets）&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 外部样式表如果想要在多个页面使用同一层叠样式表，外部样式表是最合适的，可以在html页面上使用link标签来导入外部样式表。代码示例如下：12345678910111213&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8" /&gt; &lt;title&gt;Hello&lt;/title&gt; &lt;!--外部样式表--&gt; &lt;link rel="stylesheet" href="css/p.css" / &lt;/head&gt; &lt;body&gt; &lt;p&gt;CSS即层叠样式表（Cascading Style Sheets）&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 浏览器会从层叠样式表文件中读取样式，并对页面上的html进行渲染。外部样式表以css为后缀。外部样式表代码示例如下:123456p&#123; align-content: center; font-family: "楷体"; font-size: large; color: darkgreen;&#125; @import导入@import导入，也是外部导入，不推荐使用。代码示例如下：123456789101112131415&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8" /&gt; &lt;title&gt;Hello&lt;/title&gt; &lt;!--@import导入--&gt; &lt;style type="text/css"&gt; @import url("css/p.css"); &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;CSS即层叠样式表（Cascading Style Sheets）&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 不同样式表的优先级问题： 内联样式表 &gt; 内部样式表 &gt; 外部样式表 CSS选择器CSS选择器，主要是用于选择需要添加样式的html元素，用于精准定位到具体的想要添加样式的某个或某些元素.常用选择器有：id选择器、class选择器、元素选择器、属性选择器。 id选择器Id选择器使用#引入，它引用的是id属性中的值。代码示例如下：12345678910&lt;head&gt; &lt;style type="text/css"&gt; #p &#123; color: blue ; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;p id="p"&gt;hello world&lt;/p&gt;&lt;/body&gt; class选择器类选择器使用时，需要在类名前加一个点号(.)。代码示例如下：12345678910&lt;head&gt; &lt;style type="text/css"&gt; .c &#123; color: blue ; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;p class="c"&gt;hello world&lt;/p&gt;&lt;/body&gt; 元素选择器这是最常见的选择器，简单说，文档中的元素就是选择器。代码示例如下： 12345678910&lt;head&gt; &lt;style type="text/css"&gt; p&#123; color: blue ; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;p&gt;hello world&lt;/p&gt;&lt;/body&gt; 属性选择器如果需要选择有某个属性的元素，而不论属性是什么，可以使用属性选择器。代码示例如下：12345678910&lt;head&gt; &lt;style type="text/css"&gt; a[href] &#123; color: red ; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;a href="http://zsx-cup.top"&gt;Xu'Blog&lt;/a&gt;&lt;br /&gt;&lt;/body&gt; CSS属性所谓属性就像java类中定义的一些属性，用来描述一些具体的特性。 字体css字体属性定义文本的字体系列，大小，加粗，风格(如斜体)和变形(如小型大写字母)。常用属性: font:简写属性，所有针对字体的属性可设置在一个声明中。 font-family: 字体系列 font-size: 字体尺寸 font-style: 字体风格 文本CSS 文本属性可定义文本的外观。通过文本属性，可以改变文本颜色、字符间距、对齐方式、装饰文本、文本缩进等。常用属性： color: 文本颜色 text-align: 对齐方式 letter-spacing: 字符间隔 word-spacing: 字间隔 背景CSS 允许应用纯色，或使用图像作为背景。CSS 在这方面的能力远远在 HTML 之上。常用属性: background:简写属性，背景属性设置可在一个声明中 background-color: 背景颜色 background-image: 背景图片 background-position: 背景图片的起始位置 background-repeat: 背景图片是否及如何重复。 尺寸CSS 尺寸属性允许控制元素的高度和宽度。常用属性: width: 元素宽度 height: 元素高度 列表CSS 列表属性允许放置、改变列表项标志，或者将图像作为列表项标志。 常用属性: list-style: 简写属性。所有用于列表的属性可设置在一个声明中。 list-style-image: 列表项标志的图象 list-style-position: 列表项标志的位置 list-style-type: 列表项标志的类型。 表格CSS 表格属性可极大改善表格外观。常用属性: border-collapse: 是否把表格边框合并为单一的边框。 border-spacing: 分隔单元格边框的距离 caption-side: 表格标题的位置 轮廓轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。CSS轮廓属性规定元素轮廓的样式、颜色和宽度。常用属性: outline: 简写属性。可在一个声明中设置所有的轮廓属性 outline-color: 轮廓颜色 outline-style: 轮廓样式 outline-width: 轮廓宽度 定位CSS 定位 (Positioning) 属性允许对元素进行定位。定位的基本思想很简单，它允许你定义元素框相对于其正常位置应该出现的位置，或者相对于父元素、另一个元素甚至浏览器窗口本身的位置。CSS 有三种基本的定位机制：普通流、浮动和绝对定位。常用属性: position: 把元素放置到一个静态的、相对的、绝对的、或固定的位置中。 top: 定位元素的上外边距边界与其包含块上边界之间的偏移量 right: 定位元素右外边距边界与其包含块右边界之间的偏移 left: 定位元素左外边距边界与其包含块左边界之间的偏移 bottom: 定位元素下外边距边界与其包含块下边界之间的偏移。 分类CSS 分类属性允许你控制如何显示元素，设置图像显示于另一元素中的何处，相对于其正常位置来定位元素，使用绝对值来定位元素，以及元素的可见度。常用属性： clear: 一个元素的侧面是否允许其它的浮动元素 float: 元素的浮动方向 cursor: 当指向某元素之上时显示的指针类型 display: 是否及如何显示元素 visibility: 元素是否可见或不可见。]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>QuickStart</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML快速入门]]></title>
    <url>%2F2018%2F11%2F01%2FHTML%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[超文本标记语言（Hyper Text Markup Language），超越普通文本，以标签记号描述网页的非编程语言。HTML文件被浏览器加载读取，以网页的形式展示。 HTML文件格式1. html 文件都是以.html 或者.htm 结尾的，推荐使用.html。 2. html 文件由头部&lt;head&gt;&lt;/head&gt;和主题&lt;body&gt;&lt;/body&gt;两部分组成 3. html 标签都是成对出现的，如&lt;html&gt;&lt;/html&gt;，&lt;head&gt;&lt;/head&gt;&gt;，&lt;body&gt;&lt;/body&gt; 4. html 标签忽略大小写，推荐使用小写。 HTML基本标签文件标签1. html标签。整个文件都处于&lt;html&gt;标签中，&lt;!DOCTYPE HTML&gt;用以声明文件类型是 HTML 文件，让浏览器识别并处理该文件。 2. head标签。在HTML文件有两部分&lt;head&gt;与&lt;body&gt;，&lt;head&gt;用于加载网页的部分重要信息，它的内容不会被显示。 3. title标签。&lt;title&gt;只能出现于&lt;head&gt;中，它代表的是网页标题，显示如下图所示。 4. body标签。&lt;body&gt;中的内容是网页的主体部分，会被显示。 HTML元素和属性 HTML元素: 指的是从开始标签到结束标签的所有代码，包含其中所有的子标签及其内容。 123&lt;body&gt; //body元素包含p标签元素&lt;p&gt;p标签元素&lt;/p&gt; //这行就是一个p标签元素&lt;/body&gt; HTML属性：每个标签元素可以拥有属性。属性提供了有关 HTML 元素的更多的信息。属性总是以名称-值成对出现，比如：name=”value”。作用是使整个元素具有特定的特性 。 1&lt;body bgcolor="yellow"&gt; //是整个背景颜色变成黄色 排版标签1. 注释。在html中注释是 &lt;!--注释 --&gt; 2. p标签。&lt;p&gt;标签是段落标签，可以将html文档分割为若干段落。浏览器会自动在段落前后添加空行。 常用属性: align:用于设定对齐方式 可选值 left right center 默认值是left. 3. br标签。&lt;br&gt;标签是换行标签。因为浏览器会自动的忽略空白与换行，因此&lt;br&gt;标签较常用。 4. hr标签。&lt;hr&gt;标签会生成水平线。 常用属性: align:设置水平线对齐方式 可选值 left right center size:设置水平线厚度 以像素为单位。默认为2 width:设置水平线长度.可以是绝对值或相对值。默认为100% color:设置水平线颜色.默认为黑色 5. 关于html中数值单位。html的数值默认单位为像素(px)，在有些位置可以使用百分比。 块标签1. div标签。用于在文档中设定一个块区域。 2. span标签。用于在行内设定一个块区域。 3. Font 字体&lt;font&gt;标签用于规定文本的字体(face)，大小(size)，颜色(color)。 4. h1-h6标题。&lt;h1&gt;-&lt;h6&gt;标签用于定义标题，&lt;h1&gt;最大标题，&lt;h6&gt;最小标题 列表标签1. &lt;ul&gt;标签表示的是一个无序列表。 常用属性: type:项目符号类型,可取值 disc,square,circle.默认值为disc 2. &lt;li&gt;标签表示的是一个列表项。 常用属性: type: 只适用于无序列表，用于设定项目符号，默认值为disc value: 只适用于有序列表，用于设定列表的项目数字 3. &lt;ol&gt;表示的是一个有序列表。 常用属性: type:这个属性规定列表中使用的标记类型。可取值1、A、a、I、i。 value:这个属性规定列表的起始值 图片标签&lt;img&gt;是一个图片标签，用于在页面上引入图片 常用属性： 边框：border 宽度：width 高度：height 居中显示：align 引用图片路径：src 绝对路径与相对路径： 绝对路径： 带有盘符的相对路径： 如果是同级目录： 直接写文件名称或者./文件名称 如果是上一级目录： ../文件名称(如果是多层，对应多个../) 如果是下一级目录： 目录名称/文件名称 链接标签&lt;a&gt;标签用于定义超连接，从一个页面链接到另一个页面。 常用属性: href:用于设定链接的资源 name:用于设定锚的名称 target:用于设定在何处打开链接页面。 链接资源 内部资源： 图片、HTML等；引用时采用相对于本资源的相对路径； 外网资源： 如图床的图片、视频网站的视频等；引用时采用绝对路径。 表格标签1. &lt;table&gt;标签用于定义表格 常用属性: 边框：border 宽度：width 高度：height 背景颜色：bgcolor 边框与边框的间距：cellspacing 边框与内容的间距：cellpadding 居中显示：align 2. &lt;tr&gt;标签用于定义表格的行,包含一个或多个th或td元素。 常用属性: align:用于设定表格中行的内容对齐方式。 bgcolor:用于设定表格中行的背景颜色。 3. &lt;td&gt;标签用于定义表格单元，文本一般显示为正常字体且左对齐。 常用属性: align:用于设定单元格内容的对齐方式。 bgcolor:用于设定单元格背景颜色。 height:用于设定单元格的高度。 width:用于设定单元格的宽度。 colspan:用于设定列合并，合并相邻列 rowspan:用于设定行合并，合并相邻行 4. &lt;caption&gt;用于定义表格标题 &lt;caption&gt;标签必须紧随&lt;table&gt;标签之后， 一个表格只能有一个标题，且标题通常在表格之上居中显示。 5. &lt;th&gt;标签用于定义表格的表头，文本通常居中加粗显示。 html表格中有两种类型的单元格： 表头单元格th:包含表头信息。 标准单元格td:包含数据。 HTML表单标签form标签&lt;form&gt;标签代表一个表单，用于向服务器传输数据。 &lt;form&gt;标签包含&lt;input&gt;、&lt;textarea&gt;、&lt;select&gt;等。 &lt;form&gt;常用属性: name: 定义表单的名称 action: 向何处发送表单数据 method: 表单提交方式，POST或GET。 POST与GET方式区别: get方式只能少量数据，数据会在地址栏上显示，安全性差。 post可以携带大数据，数据不会在地址栏上显示，更加安全。 input标签&lt;input&gt; 标签用于页面交互。根据不同的 type 属性值，输入字段拥有很多种形式。输入字段可以是文本字段、密码、单选框、复选框、按钮等。 &lt;input&gt;标签type属性值包含： 1. text &lt;input type=”text”&gt; 定义单行的输入字段，用户可在其中输入文本。默认宽度为 20 个字符。 其它常用属性: name:定义标签名称 value:定义标签值 size:定义输入字段的长度 maxlength:定义可输入最大字符个数 2. password &lt;input type=”password”&gt; 定义密码字段。该字段中的字符被掩码。 其它常用属性: name:定义标签名称 value:定义标签值 size:定义输入字段的长度 maxlength:定义可输入最大字符个数 3. radio &lt;input type=”radio”&gt; 定义单选按钮。 其它常用属性: name:定义标签名称。对于单选按钮，多radio的name值必一样。 value:定义标签值 checked:定义该标签默认被选中。 4. checkbox &lt;input type=”checkbox”&gt; 定义复选框。 其它常用属性: name:定义标签名称，一组的checkbox的name值应该是一样的。 value:定义标签值 checked:定义该标签默认被选中。 5. button &lt;input type=”button”&gt; 定义可点击按钮（多数情况下，用于通过JS启动脚本） 其它常用属性: name:定义标签名称 value:按钮显示名称 6. hidden &lt;input type=”hidden”&gt; 定义隐藏的输入字段。 其它常用属性: name:定义标签名称 value:定义标签值 7. file &lt;input type=”file”&gt; 定义输入字段和&quot;浏览&quot;按钮，供文件上传。 其它常用属性: name:定义标签名称 8 submit &lt;input type=”submit”&gt; 定义提交按钮，把表单数据发送到服务器。 其它常用属性: name:定义标签名称 value:按钮显示名称 9. reset &lt;input type=”reset”&gt; 定义重置按钮，清除表单中的所有数据。 其它常用属性: name:定义标签名称 value:按钮显示名称 10. image &lt;input type=”image”&gt; 定义图像形式的提交按钮。 这个标签主要是用了替换submit按钮，因为默认产生的提交按钮并不漂亮，这个标签允许你采用指定的图片做为提交按钮。 其它常用属性: name:定义标签名称 src:定义作为提交按钮显示的图像的url alt:定义作用图像的替代文本。 select标签&lt;select&gt; 用于定义一个下拉列表 常用属性: name:定义下拉列表的名称 size:定义下拉列表中可见选项的数目 multiple:定义可选择多个选项 option标签&lt;option&gt; 用于定义下拉列表中的选项，位于&lt;select&gt;标签内部 常用属性: value:定义送往服务器的选项值 selected:定义选项为选中状态。 textarea标签&lt;textarea&gt;标签用于定义多行文本输入控件(多行文本框，文本域) 常用属性: name:定义多行文本框名称 cols:定义多行文本框可见宽度 rows:定义多行文本框可见行数 wrap:规定多行文本框中文字如何换行。 其它标签与特殊字符meta标签&lt;meta&gt; 元素可提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词。 &lt;meta&gt; 标签位于文档的头部，不包含任何内容。&lt;meta&gt; 标签的属性定义了与文档相关联的名称/值对。 常用属性： content: 定义与http-equiv或name属性相关的元信息 http-equiv: 把content属性关联到HTTP头部 name: 把content属性关联到一个名称。 link标签&lt;link&gt; 标签定义文档与外部资源的关系。 &lt;link&gt; 标签最常见的用途是链接样式表，会在css中介绍。 &lt;link&gt;只能存在于 head 部分，不过它可出现任何次数。 常用属性: type:定义被链接的文档的MIME类型 href:定义被链接的文档的URL rel:定义当前文档与被链接文档之间的关系。 特殊字符原码 |显示| 描述 --- |--- | --- &amp;nbsp;|空格| 不断行的空白符 &amp;lt; | &lt; | 小于号 &amp;gt; | &gt; | 大于号 &amp;reg; | ® | 已注册 &amp;copy;| © | 版权 代码示例123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"/&gt; &lt;title&gt;HTML&lt;/title&gt; &lt;/head&gt; &lt;body bgcolor="gold"&gt; &lt;!--title--&gt; &lt;h1 align="center"&gt;HTML入门&lt;/h1&gt; &lt;h2 &gt;title&lt;/h2&gt; &lt;!--paragraph--&gt; &lt;p align="center"&gt; hello world! &lt;br /&gt; winter is coming! &lt;/p&gt; &lt;!--div--&gt; &lt;div id="div1" style="" align="right" width=20px height=20px&gt; 我的地盘我做主 &lt;br /&gt; &lt;!--font--&gt; &lt;font size="9", color="red"&gt;font&lt;/font&gt; &lt;/div&gt; &lt;!--image--&gt; &lt;img src="img/HBuilder.png" width="20px" height="20px" alt="不小出错咯"/&gt; &lt;br /&gt; &lt;!--link--&gt; &lt;a href="http://zsx-cup.top"&gt;Xu'Blog&lt;/a&gt;&lt;br /&gt; &lt;a href="img/HBuilder.png"&gt;picture&lt;/a&gt;&lt;br /&gt; &lt;a href="index.html"&gt;html&lt;/a&gt; &lt;br /&gt; &lt;!--table--&gt; &lt;table align="center" border="1px"&gt; &lt;tr&gt; &lt;th&gt;name&lt;/th&gt; &lt;th&gt;sex&lt;/th&gt; &lt;th&gt;age&lt;/th&gt; &lt;th&gt;height&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;mike&lt;/th&gt; &lt;th&gt;man&lt;/th&gt; &lt;th&gt;16&lt;/th&gt; &lt;th&gt;170&lt;/th&gt; &lt;/tr&gt; &lt;/table&gt; &lt;!--list--&gt; &lt;ol type="A" start=""&gt; &lt;li&gt;javase&lt;/li&gt; &lt;li&gt;javaweb&lt;/li&gt; &lt;li&gt;javame&lt;/li&gt; &lt;/ol&gt; &lt;ul type="circle"&gt; &lt;li&gt;html&lt;/li&gt; &lt;li&gt;css&lt;/li&gt; &lt;li&gt;js&lt;/li&gt; &lt;/ul&gt; &lt;!--水平线--&gt; &lt;hr color="red" size="2px" width="100%" /&gt; &lt;!--居中，将列表显示为一行--&gt; &lt;center&gt; &lt;ul type="square"&gt; &lt;li style="display: inline;"&gt;&lt;a href="http://zsx-cup.top"&gt;blog&lt;/a&gt;&lt;/li&gt; &lt;li style="display: inline;"&gt;&lt;a href="http://zsx-cup.top"&gt;blog&lt;/a&gt;&lt;/li&gt; &lt;li style="display: inline;"&gt;&lt;a href="http://zsx-cup.top"&gt;blog&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/center&gt; &lt;hr color="red" size="2px" width="100%" /&gt; &lt;!--form--&gt; &lt;h1&gt;form&lt;/h1&gt; &lt;form&gt; e-mail: &lt;input type="email" name="email"/&gt;&lt;br /&gt; username: &lt;input type="text" name="username"/&gt;&lt;br /&gt; password: &lt;input type="password" name="pwd"/&gt;&lt;br /&gt; gender: &lt;input type="radio" name="sex" value="man"/&gt; man &lt;input type="radio" name="sex" value="woman"/&gt; woman &lt;br /&gt; hobby: &lt;input type="checkbox" name="hobby" value="eat"/&gt; eat &lt;input type="checkbox" name="hobby" value="drink"/&gt; drink &lt;input type="checkbox" name="hobby" value="play"/&gt; play &lt;br /&gt; upload avator: &lt;input type="file" name="avator" /&gt; &lt;br /&gt; birth place: &lt;select name="address"&gt; &lt;option value="China"&gt;China&lt;/option&gt; &lt;option value="America"&gt;America&lt;/option&gt; &lt;option value="Canada"&gt;Canada&lt;/option&gt; &lt;option value="Brazil"&gt;Brazil&lt;/option&gt; &lt;/select&gt; &lt;select name="city"&gt; &lt;option value="bj"&gt;Beijing&lt;/option&gt; &lt;option value="ny"&gt;New York&lt;/option&gt; &lt;option value="vc"&gt;Vancouve&lt;/option&gt; &lt;option value="nj"&gt;Nanjing&lt;/option&gt; &lt;/select&gt; &lt;br /&gt; tips: &lt;br /&gt; &lt;textarea rows="3" cols="30"&gt;&lt;/textarea&gt; &lt;br /&gt; &lt;br /&gt; &lt;button type="submit" name="submit" value="sign up"&gt;sign up&lt;/button&gt; &lt;button type="submit" name="submit" value="sign in"&gt;sign in&lt;/button&gt; &lt;button type="reset" name="reset" value="reset"&gt;reset&lt;/button&gt; &lt;/form&gt; &lt;!--框架标签--&gt; &lt;frameset rows="15%,*"&gt; &lt;frame src="head.html" /&gt; &lt;frameset cols="15%,*"&gt; &lt;frame src="left.html" /&gt; &lt;frame src="index.html" name="index" /&gt; &lt;/frameset&gt; &lt;/frameset&gt; &lt;!--盒子模式--&gt; &lt;div style=" margin-top: 50px; padding: 50px; width: 400px; height: 400px; background-color: #006400;"&gt; &lt;div style="width: 200px; height: 200px; background-color: red;"&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>QuickStart</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux命令及双系统安装配置]]></title>
    <url>%2F2018%2F11%2F01%2FLinux%E5%91%BD%E4%BB%A4%E5%8F%8A%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[linux基本命令 Ubuntu16.04 跟工作目录相关命令 cd 返回根目录 cd + dirpath 更改工作目录至dirpath cd .. 返回上一级目录 pwd 返回当前工作目录 ls 查看当前目录下的文件 ls -l 查看当前目录下的文件的详细信息 rm 删除文件 rmdir 删除文件夹 rm -rf 强制性删除非空目录 复制文件或目录: cp -r 文件或目录名称 指定目录 开启与关闭真正终端 Ctrl + Alt + T 打开虚拟终端 ctrl + alt + f6 开启真正的终端 ctrl + alt + f7 关闭真正的终端 超级管理员 sudo 即super do 超级管理员 sudo -i 直接进入超级管理员模式 su + username 退出超级管理员模式 nano+filename 在当前文件下新建文件，nano是ubuntu默认的编辑器 1234567$ cd /tmp/ $ nano hello.py # 在tmp/ 目录下创建文件hello.py$ print('hello world') # 向文件内写入一行代码$ ctrl + x # 退出文件$ y # 回复y保存所做的改变$ python hello.py # 运行py文件，并输出结果'hello world' 文件权限：r w x 12345$ cd /tmp/ $ ls -l # 查看文件详细信息-rw------- 1 zsx zsx 0 6月 9 20:34 config-err-pVx0cf-rw-rw-r-- 1 zsx zsx 20 6月 9 20:37 hello.pydrwx------ 3 root root 4096 6月 9 20:33 systemd-private r read 读的权限 w write 写的权限 x 执行的权限 r w x的值分别为4 2 1 rwx=7 r-w=6 r-x=5 w-x=3 以上述的hello.py文件为例说明文件权限及更改方法： 最前边的-代表文件，如果是d则代表是文件夹 最前边的rw 表示该文件或文件所属的用户对该文件的操作权限 中间的rw 表示该文件或文件所属的用户组对该文件的操作权限 最后边的r 表示其他用户或用户组对该文件的操作权限 以值的形式表示上述文件操作权限则是664-更改文件操作权限的命令是chmod123$ chmod 764 hello.py # 增加该文件所述用户对文件的执行权限$ ls -l-rwxrw-r-- 1 zsx zsx 20 6月 9 20:37 hello.py rm remove删除文件 tail -n filename 查看文件内容 1$ tail -10 test.py man 查看帮助 12$ man tail # 查看tail命令的帮助文档$ tail --help # 查看tail命令的帮助文档 从ubuntu终端进入Python和scrapy shell，再退回到终端的快捷键都是：Ctrl + D。 从终端中以窗口形式打开一个文件夹：nautilus dirname LINUX中常用操作命令 LINUX中常用操作命令 10 Basic Linux Commands That Every Linux Ubuntu Unity 桌面快捷键切换窗口技巧： 不同程序之间切换：alt + tab 同一程序不同窗口之间切换：alt + `（tab键上方按键） 长按Super键（Win键）显示键盘快捷键 Ubuntu双系统安装及配置 Ubuntu16.04.2 安装和卸载ubuntu双系统： Win7 U盘安装Ubuntu16.04 双系统详细教程 开始ubuntu安装，重启电脑，按F12而非F2并选择USB KEY启动。 启动器栏转换到桌面底部，只需要在终端如下代码，按下回车即可： 12# 更改代码最后一个表示位置的单词，即可更改启动器位置$ gsettings set com.canonical.Unity.Launcher launcher-position Bottom 双系统下卸载Ubuntu系统 安装软件 蓝色字体表示超链接，链接到软件安装页面 lantern：蓝灯，科学上网，使用谷歌浏览器登录账户同步信息。 chrome：谷歌浏览器，腾讯软件中心下载源，打开蓝灯下载安装登录账户同步信息。 sublime text 3：文本编辑器，可能需要购买许可证 Atom：免费文本编辑器，输入带特效。安装插件代码：1$ apm install &lt;package_name&gt; atom常用插件及快捷键输入关键词搜索，如python，markdown 执行代码：atom-runner，快捷键Alt + R 自动补全代码：autocomplete python，快捷键Ctrl + Alt + G 输入带特效：activate-power-mode 定义跳转：python-tools 自动缩进：python-indent 语法检查：linter-flake8 和 linter-python markdown: markdown-writer，markdown-preview-plus(预览快捷键ctrl-shift-M), language-markdown(语法)]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Guide</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sublime Text 3 快捷键汇总]]></title>
    <url>%2F2018%2F10%2F31%2FSublime-Text-3-%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[本文摘录自Sublime Text 3 快捷键总结（拿走），Sublime Text 3 常用快捷键大概分为四类： 选择 编辑 搜索 显示 选择类Ctrl+D 选中光标所占的文本，继续操作则会选中下一个相同的文本。 Alt+F3 选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。举个栗子：快速选中并更改所有相同的变量名、函数名等。 Ctrl+L 选中整行，继续操作则继续选择下一行，效果和 Shift+↓ 效果一样。 Ctrl+Shift+L 先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。 Ctrl+Shift+M 选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。 Ctrl+M 光标移动至括号内结束或开始的位置。 Ctrl+Enter 在下一行插入新行。举个栗子：即使光标不在行尾，也能快速向下插入一行。 Ctrl+Shift+Enter 在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。 Ctrl+Shift+[ 选中代码，按下快捷键，折叠代码。 Ctrl+Shift+] 选中代码，按下快捷键，展开代码。 Ctrl+K+0 展开所有折叠代码。 Ctrl+← 向左单位性地移动光标，快速移动光标。 Ctrl+→ 向右单位性地移动光标，快速移动光标。 shift+↑ 向上选中多行。 shift+↓ 向下选中多行。 Shift+← 向左选中文本。 Shift+→ 向右选中文本。 Ctrl+Shift+← 向左单位性地选中文本。 Ctrl+Shift+→ 向右单位性地选中文本。 Ctrl+Shift+↑ 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。 Ctrl+Shift+↓ 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。 Ctrl+Alt+↑ 向上添加多行光标，可同时编辑多行。 Ctrl+Alt+↓ 向下添加多行光标，可同时编辑多行。 编辑类Ctrl+J 合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。 Ctrl+Shift+D 复制光标所在整行，插入到下一行。 Tab 向右缩进。 Shift+Tab 向左缩进。 Ctrl+K+K 从光标处开始删除代码至行尾。 Ctrl+Shift+K 删除整行。 Ctrl+/ 注释单行。 Ctrl+Shift+/ 注释多行。 Ctrl+K+U 转换大写。 Ctrl+K+L 转换小写。 Ctrl+Z 撤销。 Ctrl+Y 恢复撤销。 Ctrl+U 软撤销，感觉和 Ctrl+Z 一样。 Ctrl+F2 设置书签 Ctrl+T 左右字母互换。 F6 单词检测拼写 搜索类Ctrl+F 打开底部搜索框，查找关键字。 Ctrl+shift+F 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找，略高端，未研究。 Ctrl+P 打开搜索框。举个栗子：1、输入当前项目中的文件名，快速搜索文件，2、输入@和关键字，查找文件中函数名，3、输入：和数字，跳转到文件中该行代码，4、输入#和关键字，查找变量名。 Ctrl+G 打开搜索框，自动带：，输入数字跳转到该行代码。举个栗子：在页面代码比较长的文件中快速定位。 Ctrl+R 打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。 Ctrl+： 打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。 Ctrl+Shift+P 打开命令框。场景栗子：打开命名框，输入关键字，调用sublime text或插件的功能，例如使用package安装插件。 Esc 退出光标多行选择，退出搜索框，命令框等。 显示类Ctrl+Tab 按文件浏览过的顺序，切换当前窗口的标签页。 Ctrl+PageDown 向左切换当前窗口的标签页。 Ctrl+PageUp 向右切换当前窗口的标签页。 Alt+Shift+1 窗口分屏，恢复默认1屏（非小键盘的数字） Alt+Shift+2 左右分屏-2列 Alt+Shift+3 左右分屏-3列 Alt+Shift+4 左右分屏-4列 Alt+Shift+5 等分4屏 Alt+Shift+8 垂直分屏-2屏 Alt+Shift+9 垂直分屏-3屏 Ctrl+K+B 开启/关闭侧边栏。 F11 全屏模式 Shift+F11 免打扰模式]]></content>
      <categories>
        <category>Guide</category>
      </categories>
      <tags>
        <tag>Sublime</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用DOS命令]]></title>
    <url>%2F2018%2F10%2F31%2F%E5%B8%B8%E7%94%A8DOS%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[本文汇总一些常用的DOS命令，更加全面的DOS命令详见：DOS命令 1234567891011121314151617181920212223242526272829cd // 显示或更改当前目录cd / // 返回根目录cd .. // 返回上一级目录dir // 显示当前目录下的文件信息md // 新建文件夹rd // 删除文件start // 新建窗口查看文件或文件夹type // 显示文件内容ren // 文件重命名del // 删除文件cls // 清屏ctrl + shift + T // 打开命令行net start 服务名称 // 启动某服务net stop 服务名称 // 关闭某服务命令行右击“标记”选定内容，点击enter键即可复制命令行右击“粘贴”把剪切板上内容粘贴到提示符下命令 /? // 查看命令的帮助文档echo 文本内容 &gt; 文件路径 //新建文件并写入内容，示例：echo 百度一下 &gt; c:baidu.txtpydoc &lt;name&gt; // 直接查看python模块函数的帮助文档，而不需要进入python。]]></content>
      <categories>
        <category>Wins</category>
      </categories>
      <tags>
        <tag>DOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用Wins技巧]]></title>
    <url>%2F2018%2F10%2F31%2F%E5%B8%B8%E7%94%A8Wins%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[虫部落：一个神奇的部落，纯粹的搜索经验、技术交流和分享平台，同时为虫友提供众多方便好用的搜索引擎。 本文整理的这些常用Windows技巧均来自于虫部落：你知道Windows上有哪些奇技淫巧吗？（Windows技巧大全） 微软官网：Windows 中的快捷键及MS Word 在 Windows 上的快捷键 Win键相关的常用快捷键 Win + E 打开计算机 Win + D 返回桌面 Win + F 打开系统搜索 Win+数字键（0~9） 快速启动锁定在任务栏中的前10个对应的程序 Win+Home 最小化当前窗口以外的其他所有程序，节约系统资源。 Win+Tab 3D动画挺炫 “Win+方向键” “Win+↑” 最大化 “Win+↓” 最小化 “Win+←” 窗口占左半边屏幕 “Win+→” 窗口占左半边屏幕 Ctrl和Shift键相关的常用快捷键 ctrl + shift + N 新建文件夹 Ctrl + Shift + Esc 任务管理器 Ctrl + Shift + T 立即重启刚刚关闭的页面 CTRL + Z 撤销上一步操作，还可以快速恢复被删除的文件（彻底删除文件无法恢复） 快速复制复制文件或文件夹磁盘路径：按住Shift键，右键点击文件或文件夹，选择“复制为路径”即可。 F系列功能键相关的常用快捷键 F5在记事本程序中一键快速插入当前日期和时间 F11全屏显示网页，一个有意思的网站：航班追踪。 F2批量重命名文件：同时选中多个文件或文件夹，按F2键，重命名其中一个文件或文件夹，其他的都会被重命名，在文件名末尾加上递增的数字。 2345好压 也可以右键批量修改文件名 前后任意添加/删除/替换 其他技巧 取消电脑开机时的倒计时 右键计算机“属性” 打开“高级系统设置”在启动和故障恢复那里点击“设置” 把“显示操作系统列表的时间”前面的钩钩去掉]]></content>
      <categories>
        <category>Wins</category>
      </categories>
      <tags>
        <tag>Guide</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[My Queen]]></title>
    <url>%2F2018%2F10%2F29%2FMy-Queen%2F</url>
    <content type="text"><![CDATA[This Is My Queen!]]></content>
      <categories>
        <category>MyQueen</category>
      </categories>
      <tags>
        <tag>Image</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo配置Next主题搭建炫酷博客主页]]></title>
    <url>%2F2018%2F10%2F29%2FHexo%E9%85%8D%E7%BD%AENext%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E7%82%AB%E9%85%B7%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A1%B5%2F</url>
    <content type="text"><![CDATA[更换NexT主题如果觉得Hexo默认的主题不够炫酷，可以参照NexT官方使用文档，将您的博客主题更换为比较流行的NexT主题，从而打造炫酷博客主页。 需要注意的几点 Hexo插件安装 字数统计：wordcount 访客数、访问量统计：busuanzi 搜索功能：Algolia Search 搜索引擎优化：SEO 博文中插入图片、音乐 Hexo插件安装Hexo插件是功能实现的前提。想要博客实现某个功能，在Hexo和NexT的配置文件中配制完成后，如果该功能并没有实现，首先要确保安装了相应的插件，简单的方法就重新安装一遍。Hexo默认安装了一些插件，但不没有涵盖所有内置功能，可在Hexo官方文档查询所需插件详细信息：Hexo插件，插件安装命令如下：1$ npm install hexo-plugin-name --save //hexo-plugin-name为Hexo插件名称 字数统计：wordcount1$ npm install hexo-wordcount --save //安装字数统计插件 更改主题配置文件之前，确保安装字数统计插件hexo-wordcount。 访客数、访问量统计：busuanzi1234&lt;script async src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;//若使用busuanzi插件统计站点访客数和访问量，需在必须下面文件中添加上面一行代码方可实现。themes/next/layout/_partials/footer.swig 搜索：Algolia Search根据NexT官方文档： Algolia 提示进行配置，一步步操作到“更新Index”时，按照官方给出命令运行后报错，查找得知官方给出的说明有误，正确命令为：12//Search-Only API key为 Algolia网站上获取的相应API key$ export HEXO_ALGOLIA_INDEXING_KEY=Search-Only API key 搜索引擎优化：SEO 搭建一个网站之后，如果没有做一些相关的搜索引擎优化SEO，那么我们的网站是很难获取来自搜索引擎的流量的，用户很难在搜索引擎上搜索到我们网站的内容，所以接下来我们要为Hexo网站做一些简单的搜索优化。 生成sitemapSitemap用于通知搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。 执行以下命令，安装插件hexo-generator-sitemap，用于生成sitemap：1$ npm install hexo-generator-sitemap --save 在站点配置文件 _config.yml中添加如下字段：12sitemap:path: sitemap.xml 然后执行如下命令，可查看在网站根目录下public文件夹中生成 sitemap.xml。1$ hexo g 开启百度自动推送在主题配置文件 _config.yml中，将baidu_push设置为true 1baidu_push: true 使用各大搜索引擎站长工具在搜索引擎搜索框输入site:your.domain可以查看域名是否被该搜索引擎收录。如未收录，可使用该搜索引擎的站长工具提交博客网址。 博文中插入图片 把博客根目录下_config.yml 中的post_asset_folder设置为true 下载安装一个可以上传本地图片的插件hexo-asset-image，安装命令如下：1$ npm install hexo-asset-image --save 博文中插入音乐以网易云音乐为例说明，直接在网页版网易云音乐查找喜欢的音乐，可获取如下的代码，直接贴到文档相应位置即可。1&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=536264928&amp;auto=1&amp;height=66"&gt;&lt;/iframe&gt; 参考资料 NexT官方使用文档 使用hexo+github搭建个人博客(进阶篇)]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo+Git一个小时快速搭建个人博客]]></title>
    <url>%2F2018%2F10%2F27%2FHexo-Git%E4%B8%80%E4%B8%AA%E5%B0%8F%E6%97%B6%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[搭建本地环境：Hexo框架Hexo为何物 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown解析文章，并瞬间利用靓丽的主题生成静态网页。其中，Markdown是一个用于将普通文本转换为HTML的工具，它以易于阅读和编写的纯文本格式进行编写，然后将其转换为的HTML（或XHTML）。 Hexo安装本文是基于Windows7系统安装，如果是其他系统可参见Hexo官方文档。 Hexo安装的前提是电脑预安装Node.js和Git。如果你的电脑已安装Node.js和Git，直接跳到第三步开始安装Hexo；如果未安装则需要先按照前两步提示进行安装，下载安装非常快。 Node.js下载安装，默认安装即可。 Git下载安装，Git官网下载速度非常慢，建议在腾讯软件中心下载Git，默认安装即可。用作将本地的内容提交到GitHub仓库，后续会介绍如何操作。 利用 npm 命令安装Hexo。在任意位置右击鼠标，选择Git Bash输入以下命令即可安装。耗时稍长，安装顺利的话只需要几分钟，如果在安装过程中遇到问题，可重新安装。其中，npm 是 JavaScript 世界的包管理工具,并且是 Node.js 平台的默认包管理工具。1$ npm install -g hexo-cli 成功安装Node.js、Git和Hexo后，可用以下命令查看相应版本，结果如下图：123456789101112131415161718192021222324252627$ node -v //查看node版本v8.12.0$ npm -v //查看npm版本6.4.1$ git --version //查看git版本git version 2.19.1.windows.1$ hexo --version //查看hexo版本hexo: 3.8.0hexo-cli: 1.1.0os: Windows_NT 6.1.7601 win32 x64http_parser: 2.8.0node: 8.12.0v8: 6.2.414.66uv: 1.19.2zlib: 1.2.11ares: 1.10.1-DEVmodules: 57nghttp2: 1.32.0napi: 3openssl: 1.0.2picu: 60.1unicode: 10.0cldr: 32.0tz: 2017c 建站安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。了解目录结构及相关信息可参看Hexo官方文档，稍后配置Hexo时会涉及到。123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 至此博客本地环境已经搭建完毕，并附上Hexo常用命令。下面进行测试一下，发布一篇名为”Test”的博文，结果展示如下图：123$ hexo new "Test" //新建一篇文章，new后面跟的是标题，最好用双引号括起来，特别是标题中有空格$ hexo g //生成静态文件，g是generate的简写$ hexo s //启动服务器。默认情况下，访问网址为： http://localhost:4000/。 搭建GitHub环境 Github注册 新建仓库（new repository）。注意Owner与repository的前半部分必须一致，比如 开启GitHub Pages。进入刚才新建的仓库，点击Settings并将页面拉到底，即可看见GitHub Pages，该主页托管了上述建立的仓库，主页地址如下图所示，即为刚才新建的仓库地址。 关联Hexo与GitHub Pages初次运行 Git 前的配置 初始化Git，创建一个空的Git仓库，或者重新初始化存在的仓库: 1$ git init 设置你的用户名称与邮件地址： 12$ git config --global user.name "John Doe" //GitHub注册用户名$ git config --global user.email johndoe@example.com //GitHub注册邮箱 如果使用了 –global 选项，那么该命令只需要运行一次，因为之后无论你在该系统上做任何事情， Git 都会使用那些信息。 当你想针对特定项目使用不同的用户名称与邮件地址时，可以在那个项目目录下运行没有 –global 选项的命令来配置。 使用SSH连接到GitHub 该部分参考Github帮助文档：Connecting to GitHub with SSH。 查看存在的SSH公/私钥。通常私钥保存在文件id_rsa，私钥保存在文件id_rsa.pub。 1$ ls -al ~/.ssh 生成SSH公/私钥 1234$ ssh-keygen -t rsa -b 4096 -C "your_email@example.com" //替换邮箱为注册邮箱$ Enter a file in which to save the key (/c/Users/you/.ssh/id_rsa): //提示输入公/私钥保存路径，直接回车即可$ Enter passphrase (empty for no passphrase): //输入密码，可以留空，直接回车即可$ Enter same passphrase again: //再次输入密码，可以留空，直接回车即可 将秘钥添加到SSH代理 1234$ eval $(ssh-agent -s) //首先确保SSH代理在运行Agent pid 59566 //显示进程id$ ssh-add ~/.ssh/id_rsa //将秘钥添加到SSH代理 将公钥添加到Github账户 1$ clip &lt; ~/.ssh/id_rsa.pub //复制刚才生成的公钥，如果公钥保存路径不是默认路径则该命令无效 然后点击Github页面右上角的头像，在弹出栏中点击Settings，并在新页面左边栏中点击SSH and GPG keys，在弹出页面点击New SSH key，并将复制的公钥贴过去，title会根据邮箱自动生成。 测试SSH连接12$ ssh -T git@github.com //测试代码，出现下一行提示表示连接成功Hi username! You've successfully authenticated, but GitHub does not provide shell access. 将网站部署到服务器 安装 hexo-deployer-git: 1$ npm install hexo-deployer-git --save 配置Deployment。 1234deploy: type: git repo:git@github.com:githubname/githubname.github.io.git branch: master 找到根目录中_config.yml中Deployment，按照以下代码格式，将其中的githubname更换为你的Github注册用户名即可。 将博客发布到Github123$ hexo clean //清除缓存文件 (db.json) 和已生成的静态文件 (public)。$ hexo generate // 生成静态文件$ hexo deploy // 部署网站 这样就实现了Hexo本地环境与Github的关联，即可通过 http://githubname.github.io 访问你部署在Github上的博客了，如下图所示。 绑定域名 购买域名。阿里云，腾讯云等都有，最便宜的9块钱 域名解析设置。需要设置的参数，如下表所示，其他参数默认即可。 记录类型 主机记录 记录值 CNAME @ githubname.github.io A www IPV4地址1 记录类型选择CNAME，则记录值填写githubname.github.io（GitHub Pages 对应域名）。 记录类型选择A，则记录值填写IPV4地址，通过ping上述GitHub Pages 域名获取IPV4地址，即下表的185.199.108.153，每次ping获取得到的IPV4地址可能都不相同，所以可以不采用这种方式。 主机记录填写@，则直接解析主域名，前边没有www，如aliyun.com，无论你在浏览器地址栏输入的网址是否加www。 主机记录填写www，则解析后的域名含有www，如www.aliyun.com。12$ ping zhaoshengxu.github.io //ping操作正在 Ping zhaoshengxu.github.io [185.199.108.153] 具有 32 字节的数据: //返回结果第1行 在博客根目录下的source文件夹中新建名为CNAME的无后缀文件，并将购买的域名写入（不加www），如下图所示。 将购买的个性化域名绑定到Github Pages。将个性化域名填入Github Pages页面的Custom domain中并保存，上翻Github Pages页面即可看到，该页面已经和你的个性化域名绑定成功。 测试输入个性化域名访问你的博客首页。 恭喜完成博客的初期搭建，起航吧！ 参考资料 Hexo官方文档 Github帮助文档：Connecting to GitHub with SSH HEXO+Git+Github+域名搭建个人博客 hexo+github搭建个人博客(超详细教程)]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>QuickStart</tag>
        <tag>Hexo</tag>
        <tag>Git</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[玩转Sci-Hub]]></title>
    <url>%2F2018%2F10%2F24%2F%E7%8E%A9%E8%BD%ACSci-Hub%2F</url>
    <content type="text"><![CDATA[挣扎许久，终于下定决心给看看英文文献，可是搜了一篇又一篇SCI文献，学校图书馆都没有购买，怎么破？假如你也遇到如此尬境，可以尝试一下SCI免费下载神器：Sci-Hub，如不可用，可尝试以下网址，或前往维基百科查看最新可用网址Sci-hub(维基百科) Sci-Hub可用网址(2018.10.24测试可用) sci-hub.tw 80.82.77.83 80.82.77.84 首先需要说明的是： Sci-Hub只支持精确匹配，不支持模糊匹配。这就意味着，搜索结果只有两种：返回目标文献或搜索结果为空。而不会像度娘或谷歌那样支持模糊匹配，返回多个搜索结果。这就要求查找文献之前，必须要提前知道目标查找文献的下列信息之一： 文献标题(String) 文献地址(URL) 文献DOI(数字对象唯一标识符)： 文献PMID(PubMed唯一标识码，生命科学或医学领域) 以下面这篇文献为例，进行介绍： Kubiak W. Completion time variance minimization on a single machine is difficult [J]. Operations Research Letters, 1993, 14(1):49-59. 使用文献标题搜索Sci-Hub搜索框键入文章标题： Completion time variance minimization on a single machine is difficult 返回结果如下图，即没有搜索到我想要的文献。不过，别急着放弃，再尝试使用文献地址(URL)、DOI、PMID进行搜索。 使用文献地址或DOI搜索首先，用度娘查找文献地址、DOI等信息： 在度娘输入文献标题搜索，并在搜索页面依次进入：百度学术-&gt;爱思唯尔(Elsevier)，即可抵达如下页面 页面最下方即为文献地址：https://doi.org/10.1016/0167-6377(93)90019-D(及文献DOI：10.1016/0167-6377(93)90019-D) 文献在百度学术通常有多个文献来源，通常任意文献来源进入之后都可以找到文献DOI，如下图所示： 然后，在Sci-Hub搜索框输入文献地址(URL)或DOI等信息，开始搜索，返回结果页如下，成功返回我想要的文献。 最后，点击右上角的下载箭头，下载文献即可。 可能涉及科学上网Sci-Hub网站涉及版权问题，某些网址可能无法使用，如遇此情况，可访问sci-hub维基百科词条查看可用网址。 如需科学上网，出门左转访问getlantern(蓝灯)下载安装即可使用。]]></content>
      <categories>
        <category>Guide</category>
      </categories>
      <tags>
        <tag>Sci-Hub</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo+Git搭建博客初具模样]]></title>
    <url>%2F2018%2F10%2F21%2FHexo-Git%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%88%9D%E5%85%B7%E6%A8%A1%E6%A0%B7%2F</url>
    <content type="text"><![CDATA[利用Hexo+Git+GitHub搭建个人博客，博客已经初具模样：]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Image</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F17%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>QuickStart</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
