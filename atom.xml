<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xu&#39;s Blog</title>
  
  <subtitle>Live&amp;Learn</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhaoshengxu.github.io/"/>
  <updated>2020-01-10T15:50:37.555Z</updated>
  <id>https://zhaoshengxu.github.io/</id>
  
  <author>
    <name>ZSX</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2018年工作总结：一半是学业，一半是事业</title>
    <link href="https://zhaoshengxu.github.io/2019/01/29/2018%E5%B9%B4%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93%EF%BC%9A%E4%B8%80%E5%8D%8A%E6%98%AF%E5%AD%A6%E4%B8%9A%EF%BC%8C%E4%B8%80%E5%8D%8A%E6%98%AF%E4%BA%8B%E4%B8%9A/"/>
    <id>https://zhaoshengxu.github.io/2019/01/29/2018年工作总结：一半是学业，一半是事业/</id>
    <published>2019-01-29T14:51:53.000Z</published>
    <updated>2020-01-10T15:50:37.555Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/01/29/2018年工作总结：一半是学业，一半是事业/cosl.jpg" alt="cosl"></p><p>2018年，一半是学业，为顺利毕业，写论文、改论文、答辩；一半是事业，四处奔走，只为一小片立锥之地。</p><h2 id="2018年计划完成情况：工作-论文-入职-培训"><a href="#2018年计划完成情况：工作-论文-入职-培训" class="headerlink" title="2018年计划完成情况：工作|论文|入职|培训"></a>2018年计划完成情况：工作|论文|入职|培训</h2><h3 id="2018上半年学业计划：工作-论文"><a href="#2018上半年学业计划：工作-论文" class="headerlink" title="2018上半年学业计划：工作|论文"></a>2018上半年学业计划：工作|论文</h3><ul><li style="list-style: none"><input type="checkbox" checked> 完成硕士论文，顺利毕业；</li><li style="list-style: none"><input type="checkbox" checked> 谋得1份工作，找到立锥之地；</li><li style="list-style: none"><input type="checkbox" checked> 发表1篇核心论文，为研究生画上句号；</li><li style="list-style: none"><input type="checkbox"> 阅读50本书籍，力争成为一专多能的“T”型人才；</li><li style="list-style: none"><input type="checkbox"> 练习英语听力，输入决定输出，国际化趋势不可逆转。<br>2018下半年工作计划：入职|培训</li><li style="list-style: none"><input type="checkbox" checked> 顺利入职中海油服，快速融入工作环境，完成从高校学生到公司员工的角色转变；</li><li style="list-style: none"><input type="checkbox" checked> 快速学习固井专业知识和实验操作，为顺利通过考核，早日转正做准备。</li></ul><h3 id="2018年完成主要工作：总结-实验-学习-反思"><a href="#2018年完成主要工作：总结-实验-学习-反思" class="headerlink" title="2018年完成主要工作：总结|实验|学习|反思"></a>2018年完成主要工作：总结|实验|学习|反思</h3><h2 id="工作总结：入职培训-产品研发-技术推介"><a href="#工作总结：入职培训-产品研发-技术推介" class="headerlink" title="工作总结：入职培训|产品研发|技术推介"></a>工作总结：入职培训|产品研发|技术推介</h2><ol><li>毕业论文：顺利完成硕士论文及答辩，并发表1篇中文核心论文。 </li><li>入职油服：加入中海油服油化研究院固井研究所，快速完成角色转变。</li><li>安全培训：顺利完成军训、五小证培训及QHSE培训，为实验技能培训做准备。</li><li>投标验标：学习固井知识及实验操作技能，参与缅甸投标与验标工作，实现快速成长。</li><li>技术推介：前往湛江作业基地推广：胶乳、树脂、早强剂、低密度混合材等技术体系。</li><li>产品研发：参与胶乳、纯树脂、树脂水泥、水溶性树脂、铝粉防气窜剂、水泥松散剂、悬浮稳定剂的研发工作</li><li>其他工作：参与多联UCA与微环隙仪的改进、固井手册的修订等工作。</li></ol><h3 id="固井实验：稠化-强度-流变-UCA"><a href="#固井实验：稠化-强度-流变-UCA" class="headerlink" title="固井实验：稠化|强度|流变|UCA"></a>固井实验：稠化|强度|流变|UCA</h3><ul><li>稠化：107组</li><li>模块：79联</li><li>流变：30组</li><li>失水：12组</li><li>UCA：30组</li><li>非常规：<ol><li>树脂流动性：10组</li><li>悬浮稳定剂：6组</li><li>树脂胶结：4组</li><li>膨胀实验：6组</li><li>水泥松散剂：5组</li><li>铝粉防气窜剂：6组</li></ol></li></ul><h3 id="学习交流：阅读-培训-交流-写作"><a href="#学习交流：阅读-培训-交流-写作" class="headerlink" title="学习交流：阅读|培训|交流|写作"></a>学习交流：阅读|培训|交流|写作</h3><ol><li>阅读：书籍|行研|标准|文献<ul><li>专业书籍：《油井注水泥理论与应用》《油气大数据分析利用》《数字油田》等；</li><li>行业研究报告：《2018年BP世界能源展望&amp;世界能源统计年鉴》等；</li><li>固井专业资料：固井手册、国标、行标，树脂及树脂水泥文献等。</li></ul></li><li>交流学习：培训|讲座|会议<ul><li>安全培训：军训，五小证培训，JSA培训，在线安全培训等。</li><li>技能培训：稠化仪，失水仪，UCA，新型测窜仪，膨胀仪等。</li><li>技术讲座：固井技术培训(3次)，蔡司显微技术；功率声波等。</li><li>会议讨论：彭雷总讲党课，高质量生产大讨论，西南石油程老师交流会，中国国际涂料展等。</li></ul></li><li>写作：论文|笔记</li></ol><ul><li>硕士论文：耐温抗盐聚合物溶液流变性在油藏中的动态分布</li><li>发表论文：部分水解聚丙烯酰胺溶液在孔喉模型中机械降解的主控因素</li><li>科研笔记：<ol><li>论文写作注意事项</li><li>聚合物溶液配制流程</li><li>常规岩心驱油实验方案</li><li>岩心驱替实验流程及注意事项</li><li>MCGS组态工程安装及注意事项</li><li>哈克流变仪粘度测量步骤及注意事项</li><li>关于读研：硕士生真的是廉价劳动力吗？</li></ol></li><li>宣传报道：<ol><li>历练使人强大</li><li>专属你的青海湖旅游攻略</li></ol></li></ul><h3 id="自我反思：认知-工作-规划-学习"><a href="#自我反思：认知-工作-规划-学习" class="headerlink" title="自我反思：认知|工作|规划|学习"></a>自我反思：认知|工作|规划|学习</h3><ol><li>认知：知行合一，方得始终<ol><li>不忘初心，方得始终。不能走着走着，就丧失了目标。</li><li>知行合一是关键。知道却做不到，做不到知行合一，即便知道，用处也不大。</li><li>做胜于不做，完成胜于完美。没必要将大量时间花费在无关紧要的小问题上面，每件事都试图尽善尽美，殊不知时间有限，事有轻重缓急，还需区别对待，分清主次。</li></ol></li><li>工作：人生走过的每一步都算数<ol><li>做时间的朋友。无论做什么，时间都是自己的，一旦消逝，就不复回了。</li><li>踏踏实实工作。放平心态，切不可眼高手低，藐视一切。工作以后，没有性别，没有学历，同一起跑线，谁适应快，谁走得最稳。</li><li>在实验中舞出我人生。实验操作是个熟练活儿，如卖油翁所言：无他，唯手熟尔。实验前充分调研，理清思路；实验后及时总结，把握方向，纳入自己的知识体系，只做实验只会成为实验员。</li></ol></li><li>规划：未来有多近，在于你想的有多远<ol><li>缺少大局观，经常陷入细枝末节，而忽视整体，颠倒主次。</li><li>只顾眼前，缺少长远规划。目标不坚定，贪多嚼不烂。目标不明确，总是被带跑偏。选择做，就撇开其他，尽力做。</li><li>心细而不够胆大，穷却没能独善其身。瞻前顾后，犹犹豫豫。认为正确并经过确认的事情，尽快做，不拖延，不迁就，快刀斩乱麻。</li></ol></li><li>学习：少说多做，行胜于言<ol><li>独学而无友，则孤陋而寡闻。沟通是一种乐趣，多与外界沟通分享。</li><li>学而不思则罔，思而不学则殆。学以致用。知行合一。</li><li>找准路子，多尝试。天下武功，唯快不破。</li></ol></li></ol><h2 id="2019年初步工作计划：科研-定岗-出海"><a href="#2019年初步工作计划：科研-定岗-出海" class="headerlink" title="2019年初步工作计划：科研|定岗|出海"></a>2019年初步工作计划：科研|定岗|出海</h2><ol><li>科学研究：站在前辈的肩膀上，登高望远<ol><li>谨记前辈指导，多读文献，追踪前沿；</li><li>多做实验，快速试错，及时调整研究方向；</li><li>至少撰写1篇会议论文、核心论文、或专利；</li></ol></li><li>转正定岗：让自己配得上所定的岗位<ol><li>不断学习固井专业知识，用理论指导实践；</li><li>辅助新产品研发及作业基地推广，实践是检验真理的唯一标准；</li><li>配合投标验标，锻炼应变能力。查理芒格说，想要得到一样东西，最好的办法是让自己配得上它。</li></ol></li><li>出海出国：知己知彼，方能百战不殆<ol><li>去海上平台锻炼，了解现场施工流程，把握海上施工的需求和痛点；</li><li>出国技术支持，拓展国际视野，适应标准更高、要求更严的国际环境。</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2019/01/29/2018年工作总结：一半是学业，一半是事业/cosl.jpg&quot; alt=&quot;cosl&quot;&gt;&lt;/p&gt;
&lt;p&gt;2018年，一半是学业，为顺利毕业，写论文、改论文、答辩；一半是事业，四处奔走，只为一小片立锥之地。&lt;/p&gt;
&lt;h2 id=&quot;2
      
    
    </summary>
    
      <category term="Summary" scheme="https://zhaoshengxu.github.io/categories/Summary/"/>
    
    
      <category term="Work" scheme="https://zhaoshengxu.github.io/tags/Work/"/>
    
  </entry>
  
  <entry>
    <title>2018年终总结：活得更明白，成为更好的自己</title>
    <link href="https://zhaoshengxu.github.io/2019/01/14/2018%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93%EF%BC%9A%E6%B4%BB%E5%BE%97%E6%9B%B4%E6%98%8E%E7%99%BD%EF%BC%8C%E6%88%90%E4%B8%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%E8%87%AA%E5%B7%B1/"/>
    <id>https://zhaoshengxu.github.io/2019/01/14/2018年终总结：活得更明白，成为更好的自己/</id>
    <published>2019-01-14T11:42:54.000Z</published>
    <updated>2020-01-10T15:51:06.897Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/01/14/2018年终总结：活得更明白，成为更好的自己/BeijingOlympicTower.jpg" alt="BeijingOlympicTower.jpg"></p><p>岁末年初，回望过去，总结2018，继往开来，展望2019，愿新年里顺顺利利！<br>记录每一天，让自己活得明明白白，成为更好的自己。</p><blockquote><p>请相信时间的力量，不论是对谁，所有事到最后都会是好事。如果还不是，那它还没到最后。（约翰·列侬）</p></blockquote><h2 id="2018年目标实现情况"><a href="#2018年目标实现情况" class="headerlink" title="2018年目标实现情况"></a>2018年目标实现情况</h2><p><strong>2018上半年目标</strong></p><ul><li style="list-style: none"><input type="checkbox" checked> <strong>完成硕士论文，顺利毕业</strong></li><li style="list-style: none"><input type="checkbox" checked> <strong>谋得1份工作</strong></li><li style="list-style: none"><input type="checkbox" checked> <strong>发表1篇中文核心论文</strong></li><li style="list-style: none"><input type="checkbox" checked> <strong>搭建个人博客</strong></li><li style="list-style: none"><input type="checkbox"> 阅读50本书籍</li><li style="list-style: none"><input type="checkbox"> 着重练习英语听力</li><li style="list-style: none"><input type="checkbox"> 使用Python完成数据分析</li></ul><p><strong>2018下半年目标</strong></p><ul><li style="list-style: none"><input type="checkbox" checked> <strong>顺利入职中海油服</strong></li><li style="list-style: none"><input type="checkbox" checked> <strong>学习大数据，为转行做准备</strong></li><li style="list-style: none"><input type="checkbox"> 入职前熟悉固井知识</li></ul><h2 id="2018年完成主要事项"><a href="#2018年完成主要事项" class="headerlink" title="2018年完成主要事项"></a>2018年完成主要事项</h2><h3 id="工作学习：油服-论文-博客-Java"><a href="#工作学习：油服-论文-博客-Java" class="headerlink" title="工作学习：油服|论文|博客|Java"></a>工作学习：油服|论文|博客|Java</h3><ol><li><strong>中海油服</strong>：顺利入职<a href="http://www.cosl.com.cn/" target="_blank" rel="noopener"><strong>中海油服油化研究院固井研究所</strong></a>，尽快完成角色转变：学习固井知识及实验操作，为明确研究方向做准备。</li><li><strong>论文</strong>：顺利完成硕士论文：<strong>耐温抗盐聚合物溶液流变性在油藏中的动态分布</strong>。并发表1篇科技论文：<a href="http://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&amp;dbname=CJFDTEMP&amp;filename=YQCS201806015&amp;uid=WEEvREcwSlJHSldRa1FhdXNXaEd1ZDNQN3JCMjBWVWJBQ0lWSTJrOGd0MD0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;v=MzE1MzBoMVQzcVRyV00xRnJDVVJMT2ZadWR1Rnl6a1Y3dlBQRHpJZmJHNEg5bk1xWTlFWVlSOGVYMUx1eFlTN0Q=" target="_blank" rel="noopener"><strong>部分水解聚丙烯酰胺溶液在孔喉模型中机械降解的主控因素</strong></a>。4月初投稿，5月初录用，9月初见刊；版面费1200，稿费400。</li><li><strong>博客</strong>：搭建个人博客：<a href="http://zsx-cup.top/" target="_blank" rel="noopener"><strong>Xu’s Blog</strong></a>，目前已发布49篇博文：编程学习笔记(38篇)、科研攻略(6篇)、随笔(5篇)。</li><li><strong>Java</strong>：耗时4.5月(134天)，断断续续学完JavaSE、JavaWEB、SSM(3/13)。</li></ol><h3 id="强身健体：游泳-跑步-羽毛球"><a href="#强身健体：游泳-跑步-羽毛球" class="headerlink" title="强身健体：游泳|跑步|羽毛球"></a>强身健体：游泳|跑步|羽毛球</h3><ol><li><strong>游泳</strong>：22次</li><li><strong>跑步</strong>：3次</li><li><strong>羽毛球</strong>：1次</li></ol><h3 id="阅读交流：石油-编程-机器学习"><a href="#阅读交流：石油-编程-机器学习" class="headerlink" title="阅读交流：石油|编程|机器学习"></a>阅读交流：石油|编程|机器学习</h3><h4 id="阅读：图书-报告-专栏"><a href="#阅读：图书-报告-专栏" class="headerlink" title="阅读：图书|报告|专栏"></a>阅读：图书|报告|专栏</h4><ol><li><strong>书籍专栏</strong>：《数字油田》《油气大数据分析利用》《3D打印：从想象到现实》（部分）《通往财富自由之路》</li><li><strong>行业研究报告</strong>：《2018年BP世界能源展望&amp;世界能源统计年鉴》，《跨境电商报告》，《“分水岭”大时代》</li><li><strong>固井专业资料</strong>：《油井注水泥理论与应用》，固井手册，固井行标、国标，聚合物降解、树脂文献等</li></ol><h4 id="交流学习：讲座-培训-会议"><a href="#交流学习：讲座-培训-会议" class="headerlink" title="交流学习：讲座|培训|会议"></a>交流学习：讲座|培训|会议</h4><ol><li><strong>培训讲座</strong>：功率声波；蔡司显微技术；固井技术培训(3次)</li><li><strong>技能培训</strong>：稠化仪，失水仪，UCA，新型测窜仪，膨胀仪</li><li><strong>安全培训</strong>：五小证，JSA培训，在线安全学习及考试</li><li><strong>交流会议</strong>：彭总讲党课，高质量生产大讨论，西南石油程小伟老师交流会，中国国际涂料展</li><li><strong>大数据小组</strong>：刘帅，许洋，刘凯</li></ol><h4 id="自学编程：Java-Python-机器学习"><a href="#自学编程：Java-Python-机器学习" class="headerlink" title="自学编程：Java|Python|机器学习"></a>自学编程：Java|Python|机器学习</h4><ol><li><strong>Java</strong>：断断续续学完JavaSE、JavaWEB、SSM(3/13)。</li><li><strong>Python</strong>：《老王Python》项目篇，自建博客（简）</li><li><strong>数据分析</strong>：优达学城《描述统计学入门》 </li><li><strong>机器学习</strong>：<a href="http://www.coursera.org" target="_blank" rel="noopener">coursera:机器学习-吴恩达</a></li><li><strong>深度学习</strong>：<a href="http://mooc.study.163.com/smartSpec/detail/1001319001.htm" target="_blank" rel="noopener">《深度学习工程师》</a>(2weeks)</li><li><strong>MATLAB</strong>：<a href="https://matlab.mathworks.com/" target="_blank" rel="noopener">MATLAB 入门|初级</a> </li></ol><h4 id="写作：论文-博客-笔记"><a href="#写作：论文-博客-笔记" class="headerlink" title="写作：论文|博客|笔记"></a>写作：论文|博客|笔记</h4><ol><li><strong>论文</strong>：硕士论文：<strong>耐温抗盐聚合物溶液流变性在油藏中的动态分布</strong>；发表论文：<a href="http://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&amp;dbname=CJFDTEMP&amp;filename=YQCS201806015&amp;uid=WEEvREcwSlJHSldRa1FhdXNXaEd1ZDNQN3JCMjBWVWJBQ0lWSTJrOGd0MD0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;v=MzE1MzBoMVQzcVRyV00xRnJDVVJMT2ZadWR1Rnl6a1Y3dlBQRHpJZmJHNEg5bk1xWTlFWVlSOGVYMUx1eFlTN0Q=" target="_blank" rel="noopener"><strong>部分水解聚丙烯酰胺溶液在孔喉模型中机械降解的主控因素</strong></a>。</li><li><strong>个人博客</strong>：<a href="http://zsx-cup.top/" target="_blank" rel="noopener"><strong>Xu’s Blog</strong></a>，搭建个人博客，并发布49篇博文：编程学习笔记(38篇)、科研攻略(6篇)、随笔(5篇)。</li><li><strong>人工智能</strong>： <strong>机器学习</strong>：学完吴恩达机器学习18周内容，并整理成笔记：<a href="http://zsx-cup.top/2018/11/15/Machine-Learning-Coursera/" target="_blank" rel="noopener">Machine Learning-Coursera</a>。</li><li><strong>科研笔记</strong>：在『<a href="https://press.one/main/p/5fff08474362b1e48d72b083abf18d2360881d5e?p=1&amp;tabType=project" target="_blank" rel="noopener">PRESS.one</a>』发布4篇科研笔记，并根据小论文撰写过程整理：<a href="http://note.youdao.com/noteshare?id=75412b1f8e2d6ff0c72c58d1445bf150&amp;sub=700F1160776C4378AECEE682E89F6BA7" target="_blank" rel="noopener">科技论文写作注意事项</a> </li><li><strong>调研</strong>：<a href="http://note.youdao.com/noteshare?id=8033a44ac71842c4d2600110586fdd4f&amp;sub=8CACC108DD0C4B43BD3034B57E66F679" target="_blank" rel="noopener">开餐馆需要注意的几个关键问题</a>；<a href="http://note.youdao.com/noteshare?id=470fbc368086435b939e0f016fb592ac&amp;sub=4A4DCE3A51DD4634A49EACAE47C3C9C2" target="_blank" rel="noopener">农村发展该何去何从？</a></li><li><strong>回答知乎问题</strong>：<a href="https://www.zhihu.com/question/271076537/answer/371738860" target="_blank" rel="noopener">硕士生真的是廉价劳动力吗？</a></li></ol><h3 id="自我反思：工作-认知-规划"><a href="#自我反思：工作-认知-规划" class="headerlink" title="自我反思：工作|认知|规划"></a>自我反思：工作|认知|规划</h3><h4 id="认知：知行合一，方得始终"><a href="#认知：知行合一，方得始终" class="headerlink" title="认知：知行合一，方得始终"></a>认知：知行合一，方得始终</h4><ol><li>不忘初心，方得始终。不能走着走着，就丧失了目标。</li><li>知行合一是关键。知道却做不到，做不到知行合一，即便知道，用处也不大。</li><li>做胜于不做，完成胜于完美，没必要将大量时间花费在无关紧要的小问题上面。每件事都试图尽善尽美，殊不知时间有限，事有轻重缓急，还需区别对待，分清主次。</li></ol><h4 id="工作：人生走过的每一步都算数"><a href="#工作：人生走过的每一步都算数" class="headerlink" title="工作：人生走过的每一步都算数"></a>工作：人生走过的每一步都算数</h4><ol><li>据说下个月起，降薪20%，不知真假。如果降薪，更应该考虑转行。</li><li>不怕苦，不怕累，只怕很卖力干活，工资依旧那么一点点，年轻还是要多折腾。</li><li>踏踏实实对待工作，放平心态，切不可眼高手低，藐视一切。工作以后，没有性别，没有学历，同一起跑线，谁适应快，谁走得最稳。即便以后转行，当前工作也应认真对待。每一份经历，都应有所收获。</li><li>有些问题在不同工作中是存在共性的，比如加班，培训体系不完善，带你的师傅水平不到位，或师傅过度参与，新人操作不够熟练，老师傅不放心自己上手，缺乏锻炼机会。</li><li>在实验中舞出我人生。实验操作是个熟练活儿，如卖油翁所言：无他，唯手熟尔。试验之后，总结梳理，纳入自己的知识体系，只做实验只会成为实验员。</li><li>战战兢兢，如履薄冰。有人的地方就有江湖，表面上看似风平浪静，实则暗流涌动。公司关系复杂，少说多做，小心谨慎为好。巩固已有关系，寻找潜在志同道合之人。</li></ol><h4 id="规划：未来有多近，在于你想的有多远"><a href="#规划：未来有多近，在于你想的有多远" class="headerlink" title="规划：未来有多近，在于你想的有多远"></a>规划：未来有多近，在于你想的有多远</h4><ol><li>无论做什么，时间都是自己的，一旦消逝，就不复回了。</li><li>缺少大局观，经常陷入细枝末节，而忽视整体，颠倒主次。</li><li>只顾眼前，缺少总结，缺少长远规划，连自己没想清楚，如何让别人追随。</li><li>目标不坚定，贪多嚼不烂。既然选择了远方，便只顾风雨兼程。选择做，就撇开其他，尽力做。</li><li>目标不明确，总是被带跑偏。放假前魂不守舍，上班后仿佛在梦游。</li><li>心细而不够胆大，穷却没能独善其身。瞻前顾后，犹犹豫豫。认为正确并经过确认的事情，直接做，不拖延，不迁就他人，快刀斩乱麻。迁就退让不是问题的最终解决办法，却容易沦为路径依赖。</li><li>缺乏职业规划。高考报志愿，本着优先考虑学校，其次考虑专业的原则，被石油大学环境科学专业录取，大二又转到石油工程，转专业理由，石油工程专业好找工作。高考报志愿及大学转专业，根本不懂什么行业发展前景，只看学校，忽略了专业，现在看来专业非常关键。读研纯粹是因为有保研机会，随大流而读研，仍然是没有考虑学校和专业问题，以及职业发展规划。</li></ol><h4 id="舍得：少说多做，行胜于言"><a href="#舍得：少说多做，行胜于言" class="headerlink" title="舍得：少说多做，行胜于言"></a>舍得：少说多做，行胜于言</h4><ol><li>人的一切痛苦，本质上都源于对自己的无能的愤怒。</li><li>以开放心态，适应新环境。不可盛气凌人，不可咄咄逼人。</li><li>少计较得失，多总结反思，脚踏实地做事。不能跟人发脾气，怼谁都不应该。</li><li>有些人经常站着说话不腰疼，身在其中，却浑然不知，习惯就好，不必计较。</li><li>以自我为中心，忽视他人。跟人聊天时，更多关注自己的事，对于他人的事情有些漫不经心。</li><li>做不到严于律己，宽以待人，反而总对近亲的人有很高的要求。</li><li>不要承诺得太多，以免担子太重。更怕自己承诺没兑现，而对方又很较真。</li><li>主动改变自身行为习惯以适应环境的改变。适时退让，关键时刻坚守本心。</li><li>迁就他人，还是听从内心，难以平衡。道不同不相为谋。不是一路人，不进一家门。</li><li>少说多做，行胜于言。说话应注意分寸，熟人亦是如此，避免无意中惹恼他人。</li><li>独学而无友，则孤陋而寡闻。沟通是一种乐趣，多与外界沟通分享。</li></ol><h4 id="小妹：因材施教，多多引导"><a href="#小妹：因材施教，多多引导" class="headerlink" title="小妹：因材施教，多多引导"></a>小妹：因材施教，多多引导</h4><ol><li>教育问题是一个大大的难题。关于小妹的教育问题，我确实有些盲目，不顾父母亲的反对，只希望尽可能为她创造好的教育条件，满足她的要求。却忽视了个体的差异，没有根据实际条件，量体裁衣，因材施教。</li><li>无法改变过去的选择和决定，不抱怨，着眼改变。无悔于小妹的上学安排，算作是对教育问题的一种探索。</li><li>教育引导小妹，不能总是斥责，小妹年少无知，跟她发脾气大多是无用，多一些包容，想办法帮助其改变现状。</li><li>关于送礼物的事，父亲和我都给小妹浇了一盆冷水。小妹还小，需要引导。</li><li>小妹的上学问题是一块心病，每每提及，无名火生上心头，怒不可遏。</li></ol><h4 id="学习方法：找准路子，多尝试"><a href="#学习方法：找准路子，多尝试" class="headerlink" title="学习方法：找准路子，多尝试"></a>学习方法：找准路子，多尝试</h4><ol><li>学习一个新技术，先去看官方文档（如果有的话），然后再去找其他人的教程。官方文档应是最专业的，个人教程主要针对个人情况。另外，很多时候没必要重复造车轮子，在别人的基础上补充完善即可。</li><li>遇到问题，直接看代码，效率高，但是没有动脑思考；自己考虑，效率低，但开动脑筋。</li><li>先看完所有教学视频，再做练习，这样看似效率高，实则效果差，而且连续看视频会犯困。建议看视频与写代码交替进行。</li><li>集中精力快速学，尽情投入开心玩。中午不睡，下午崩溃。天气冷，也不能躺床上看书学习，非常容易犯困。如果学习中途发困，或是通过短时间聊天、刷一刷朋友圈、微博、快手、抖音等转移注意力，消解困意；或者困了就洗漱早睡，死扛学习效率太低，还是需要重头再学。</li><li>学习大数据的新鲜期已过，开始感觉有些乏味，这应该是完整学习周期的正常反应。</li><li>常常为了节省一点点时间赶得很紧，常常却又松松垮垮浪费大块时间，孰重孰轻？</li></ol><h3 id="固井实验：稠化-模块-失水-UCA"><a href="#固井实验：稠化-模块-失水-UCA" class="headerlink" title="固井实验：稠化|模块|失水|UCA"></a>固井实验：稠化|模块|失水|UCA</h3><ul><li>稠化：107组=54+23+13+12+5</li><li>模块：79联=33+26+8+12</li><li>流变：30组=8+1+7+2+12</li><li>失水：12组=2+4+5+1</li><li>UCA：30组=28+1+1</li><li>非常规:<ul><li>树脂流动性：10组</li><li>悬浮稳定剂：6组</li><li>树脂胶结：4组</li><li>膨胀实验：4组</li><li>水泥松散剂：2组</li><li>Al粉防气窜剂：2组</li></ul></li></ul><h3 id="观影记录：电影-视剧-纪录片"><a href="#观影记录：电影-视剧-纪录片" class="headerlink" title="观影记录：电影|视剧|纪录片"></a>观影记录：电影|视剧|纪录片</h3><blockquote><p>57部电影，94集电视剧，21集纪录片，10集综艺，2场直播</p></blockquote><p><strong>电影</strong></p><ol><li><strong>批判现实</strong>：《盲山》《天注定》《驴得水》《天下无贼》《茶馆》《霸王别姬》《我不是药神》《追龙》《聚焦》《协商》《奸臣》《辩护人》《全民目击》《legal high》《十二公民》《荒蛮故事》《三块广告牌》《监守自盗》《我的个神啊》</li><li><strong>战争题材</strong>：《至暗时刻》《敦刻尔克》《比利林恩中场战事》《窃听风暴》《红海行动》《无问西东》</li><li><strong>剧情</strong>：《人工智能》《记忆大师》《决胜21点》《天才枪手》《无双》《影》《悟空传》《巴霍巴利王》《爱丽丝梦游仙境》《寻梦环游记》《倩女幽魂1》《泰坦尼克号》《理智与情感》《天使爱美丽》</li><li><strong>好莱坞</strong>：《海王》《死侍2》《的士速递5》《复联3》《死侍》《黑豹》《头号玩家》</li><li><strong>喜剧</strong>：《来电狂响》《李茶的姑妈》《西虹市首富》《唐人街探案1》《前任攻略3》《摆渡人》《帕丁顿熊1》</li></ol><p><strong>电视剧</strong>：</p><ol><li><strong>国产剧</strong>：《白鹿原》</li><li><strong>英美剧</strong>：《黑镜》《绿箭侠》《我们这一天》</li></ol><p><strong>纪录片</strong>：</p><ol><li><strong>关于中国</strong>：《中国通史》《创新中国》《中国工厂》《零零后》《我们如何生活》《我是黑客》</li><li><strong>关于国际</strong>：《造物小百科》《世界新能源霸权争夺战》</li></ol><p><strong>综艺</strong>： 《暴走大事件》《暴走看啥片》《万能图书馆》《吐槽大会》</p><p><strong>直播</strong>： 《时间的朋友2018》《锤子发布会》</p><h3 id="APP盘点：B站-支付宝-百度网盘-网易云音乐"><a href="#APP盘点：B站-支付宝-百度网盘-网易云音乐" class="headerlink" title="APP盘点：B站|支付宝|百度网盘|网易云音乐"></a>APP盘点：B站|支付宝|百度网盘|网易云音乐</h3><p><img src="/2019/01/14/2018年终总结：活得更明白，成为更好的自己/BiliBili.jpg" alt="BiliBili.jpg"></p><p><img src="/2019/01/14/2018年终总结：活得更明白，成为更好的自己/CloudMusic.jpg" alt="CloudMusic"></p><p><img src="/2019/01/14/2018年终总结：活得更明白，成为更好的自己/BaiduNetdisk.jpg" alt="BaiduNetdisk"></p><p><img src="/2019/01/14/2018年终总结：活得更明白，成为更好的自己/Alipay.jpg" alt="Alipay"></p><hr><h2 id="2018年各月小结"><a href="#2018年各月小结" class="headerlink" title="2018年各月小结"></a>2018年各月小结</h2><h3 id="12月小结：湛江技术推介-数据处理-SSM"><a href="#12月小结：湛江技术推介-数据处理-SSM" class="headerlink" title="12月小结：湛江技术推介|数据处理|SSM"></a><a href="http://note.youdao.com/noteshare?id=903cd6000d79064eda50db2532f82a49&amp;sub=31AABE09846E48C3A056CE7490FED329" target="_blank" rel="noopener">12月小结</a>：湛江技术推介|数据处理|SSM</h3><ol><li><strong>湛江作业基地技术推介</strong>：胶乳、树脂、早强剂、低密度混合材</li><li><strong>研究院室内实验</strong>：筛选2.4sg胶乳水泥浆用乳化剂；发气型防气窜剂；多联UCA数据处理</li><li><strong>Java三大框架</strong>：Javaweb收尾，SSM伊始，断断续续，仅学完5天内容</li></ol><h3 id="11月小结：胶乳-多联UCA-JavaWEB"><a href="#11月小结：胶乳-多联UCA-JavaWEB" class="headerlink" title="11月小结：胶乳|多联UCA|JavaWEB"></a><a href="http://note.youdao.com/noteshare?id=46e347ebc76deb41ac9a671914bbb13b&amp;sub=441420E631CC463E93F6E0E3D0395DF9" target="_blank" rel="noopener">11月小结</a>：胶乳|多联UCA|JavaWEB</h3><ol><li><strong>评价优选胶乳及乳化剂</strong>：完善胶乳水泥浆体系，为湛江作业基地技术推介做准备</li><li><strong>多联UCA评价早强剂F-Sed</strong>，<strong>纯树脂及树脂水泥</strong>，水溶性树脂，水泥松散剂，悬浮稳定剂</li><li><strong>JavaWEB</strong>：学完Javaweb前11天内容，并发布31篇学习笔记：<a href="http://zsx-cup.top/archives/" target="_blank" rel="noopener">Xu’s Blog|博文列表</a></li></ol><h3 id="10月小结：室内实验-JavaSE-搭建博客"><a href="#10月小结：室内实验-JavaSE-搭建博客" class="headerlink" title="10月小结：室内实验|JavaSE|搭建博客"></a><a href="http://note.youdao.com/noteshare?id=e5e3a999236ca75eea8d9d6649473e3d&amp;sub=E2A218A1372B4C7EBB2E9C5059DC5100" target="_blank" rel="noopener">10月小结</a>：室内实验|JavaSE|搭建博客</h3><ol><li><strong>室内实验</strong>：<ul><li><strong>验标</strong>：打下手，做失水实验，加班至22:40</li><li><strong>投标</strong>：被借调辅助实验，加班至23:00</li><li><strong>树脂水泥</strong>，<strong>膨胀实验</strong></li></ul></li><li><strong>JavaSE</strong>：学习最后3天新内容；复习JavaSE学习内容</li><li><strong><a href="http://zsx-cup.top/" target="_blank" rel="noopener">搭建博客|Xu’s Blog</a></strong>：孔宁推荐，自己搭建，并根据搭建过程撰写博客搭建教程，并成功帮迪姐搭建博客。</li></ol><h3 id="9月小结：实验操作-固井手册-JavaSE"><a href="#9月小结：实验操作-固井手册-JavaSE" class="headerlink" title="9月小结：实验操作|固井手册|JavaSE"></a><a href="http://note.youdao.com/noteshare?id=113379ec3f88bb4941d83157247b401b&amp;sub=DDB823A6393643F69CDE2BC93221FF9B" target="_blank" rel="noopener">9月小结</a>：实验操作|固井手册|JavaSE</h3><ol><li><strong>固井实验操作</strong>：跟方老大学习实验操作；</li><li><strong>固井专业知识</strong>：固井手册，行业标准，稠化仪、失水仪、养护及抗压强度；</li><li><strong>JavaSE</strong>：学完JavaSE的10天内容</li></ol><h3 id="8月小结：五小证-QHSE-JavaSE"><a href="#8月小结：五小证-QHSE-JavaSE" class="headerlink" title="8月小结：五小证|QHSE|JavaSE"></a><a href="http://note.youdao.com/noteshare?id=dd7bc66c83c1ece1ecc37b506cbd43c5&amp;sub=D719541BD6154683A30A4BBD9DF2F545" target="_blank" rel="noopener">8月小结</a>：五小证|QHSE|JavaSE</h3><ol><li><strong>五小证培训</strong>：硫化氢防护，海上消防、求生、跳水，直升机水下逃生</li><li><strong>事业部QHSE培训</strong>，<strong>学习实验操作，固井专业知识</strong></li><li><strong>JavaSE</strong>：学完JavaSE前8天内容</li></ol><h3 id="7月小结：军训-五小证-读书学习"><a href="#7月小结：军训-五小证-读书学习" class="headerlink" title="7月小结：军训|五小证|读书学习"></a><a href="http://note.youdao.com/noteshare?id=8ac9b8e6d6cc80e8f390dcee1fc53f4e&amp;sub=617BD9F215284CB58E558C3D360695D1" target="_blank" rel="noopener">7月小结</a>：军训|五小证|读书学习</h3><ol><li><strong>军训</strong>：停止间转法，齐步和跑步的行进与立定，军体拳</li><li><strong>五小证培训</strong>：直升机水下逃生，救生艇，应急急救</li><li><strong>读书学习</strong>：<a href="http://mooc.study.163.com/smartSpec/detail/1001319001.htm" target="_blank" rel="noopener">《深度学习工程师》</a>(2周)|《通往财富自由之路》|《油气大数据分析利用》</li></ol><h3 id="6月小结：小妹-农活-机器学习"><a href="#6月小结：小妹-农活-机器学习" class="headerlink" title="6月小结：小妹|农活|机器学习"></a><a href="http://note.youdao.com/noteshare?id=03cba0b9969d617e7de613b14e4b0112&amp;sub=725DF5DB984A45B69861DDEFFA67624E" target="_blank" rel="noopener">6月小结</a>：小妹|农活|机器学习</h3><ol><li><strong>辅导绪珍学习</strong>，<strong>准备入职材料</strong></li><li><strong>帮父母分担农活</strong>：晒麦，卖麦，花生地浇水，麦地里套的花生追肥</li><li><strong>机器学习</strong>：学完吴恩达机器学习后10周内容，并整理成笔记：<a href="http://zsx-cup.top/2018/11/15/Machine-Learning-Coursera/" target="_blank" rel="noopener">Machine Learning-Coursera</a></li></ol><h3 id="5月小结：小妹-答辩-机器学习"><a href="#5月小结：小妹-答辩-机器学习" class="headerlink" title="5月小结：小妹|答辩|机器学习"></a><a href="http://note.youdao.com/noteshare?id=cfb276a00936ef94344b26b449c1f5dc&amp;sub=F378E66BF912421F8373485FD35331A0" target="_blank" rel="noopener">5月小结</a>：小妹|答辩|机器学习</h3><ol><li><strong>回家辅导妹妹学习</strong></li><li><strong>毕业答辩</strong>，<strong>修改发表小论文</strong></li><li><strong>机器学习</strong>：<a href="http://www.coursera.org" target="_blank" rel="noopener">coursera:机器学习-吴恩达</a>|week4-week9</li></ol><h3 id="4月小结：论文-编程-迪姐"><a href="#4月小结：论文-编程-迪姐" class="headerlink" title="4月小结：论文|编程|迪姐"></a><a href="http://note.youdao.com/noteshare?id=e60a7447259ffb873ac112243bcafa26&amp;sub=6D0FDFD288CF4A6AA6D3787BCA3F238B" target="_blank" rel="noopener">4月小结</a>：论文|编程|迪姐</h3><ol><li><strong>论文</strong>：小论文修改投稿，硕士论文修改</li><li><strong>编程</strong>：学习老王Python和吴恩达机器学习</li><li><strong>迪姐</strong>：迪姐给我买衣服，去兰州看迪姐，陪迪姐面试</li></ol><h3 id="3月小结：大论文-小论文-迪姐"><a href="#3月小结：大论文-小论文-迪姐" class="headerlink" title="3月小结：大论文|小论文|迪姐"></a><a href="http://note.youdao.com/noteshare?id=ea9cbcd99a096cb9f209e4bc7e9676a1&amp;sub=ED5791B69DB54D1CB94144BD80D84341" target="_blank" rel="noopener">3月小结</a>：大论文|小论文|迪姐</h3><ol><li><strong>小论文初稿</strong>；</li><li><strong>硕士毕业论文初稿</strong>；</li><li><strong>迪姐送生日礼物、来校看望</strong>。</li></ol><h3 id="2月小结：走亲访友-小论文-编程"><a href="#2月小结：走亲访友-小论文-编程" class="headerlink" title="2月小结：走亲访友|小论文|编程"></a><a href="http://note.youdao.com/noteshare?id=0326759d1e73f82590388909b0fa5e1b&amp;sub=3C6544E84EEC419BBCD0C7C39BF4BF00" target="_blank" rel="noopener">2月小结</a>：走亲访友|小论文|编程</h3><ol><li><strong>走亲访友</strong>：陪父母、走亲戚、看老师、同学聚会、家庭聚会</li><li><strong>小论文</strong>：毕业论文实验收尾及跟导师讨论小论文提纲</li><li><strong>编程</strong>：自建个人博客（简版），学习统计学</li></ol><h3 id="1月小结：总结-大论文-小论文"><a href="#1月小结：总结-大论文-小论文" class="headerlink" title="1月小结：总结|大论文|小论文"></a><a href="http://note.youdao.com/noteshare?id=3e2d01484c034f8f761caaf6d1dbc639&amp;sub=55609FC894824850931170B6D379CCDE" target="_blank" rel="noopener">1月小结</a>：总结|大论文|小论文</h3><ol><li><strong>总结2017年，开启2018年</strong>：<a href="http://note.youdao.com/noteshare?id=582d67c38b274ba48cd9b15bb108a058&amp;sub=A59C063D7271486C9CB952EB4B1EF5AF" target="_blank" rel="noopener">2017年终总结：回望过去，继往开来</a>；</li><li><strong>着手硕士论文初稿</strong>：完成第2章框架，第3章主体内容，开启第4章；</li><li><strong>准备小论文提纲</strong>：与导师交流修改。</li></ol><h2 id="2019年上半年计划"><a href="#2019年上半年计划" class="headerlink" title="2019年上半年计划"></a>2019年上半年计划</h2><ul><li style="list-style: none"><input type="checkbox"> 婚姻：春节见家长</li><li style="list-style: none"><input type="checkbox"> 科研：至少写1项专利或1篇中文核心；</li><li style="list-style: none"><input type="checkbox"> 定岗：推动新产品研发推广，学习固井知识，为转正定岗T13做准备；</li><li style="list-style: none"><input type="checkbox"> 出海：去海上平台锻炼，了解现场施工流程，掌握平台现场施工关键点</li><li style="list-style: none"><input type="checkbox"> 大数据：学完教程，完成项目，学习笔记发博客；</li><li style="list-style: none"><input type="checkbox"> 转行：顺应智能化浪潮，转行大数据</li><li style="list-style: none"><input type="checkbox"> 阅读：每天半小时，力争不间断|微信，得到；</li><li style="list-style: none"><input type="checkbox"> 口语：每天半小时，实现简单交流|流利说；</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2019/01/14/2018年终总结：活得更明白，成为更好的自己/BeijingOlympicTower.jpg&quot; alt=&quot;BeijingOlympicTower.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;岁末年初，回望过去，总结2018，继往开来，展望2019，
      
    
    </summary>
    
      <category term="Summary" scheme="https://zhaoshengxu.github.io/categories/Summary/"/>
    
    
      <category term="Life" scheme="https://zhaoshengxu.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 快速入门(二)</title>
    <link href="https://zhaoshengxu.github.io/2018/12/28/Spring-MVC-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-%E4%BA%8C/"/>
    <id>https://zhaoshengxu.github.io/2018/12/28/Spring-MVC-快速入门-二/</id>
    <published>2018-12-28T15:53:14.000Z</published>
    <updated>2020-01-10T16:11:16.211Z</updated>
    
    <content type="html"><![CDATA[<p>该部分主要内容：</p><ol><li>Spring MVC整合mybatis；</li><li>Spring MVC参数绑定方式。</li></ol><p>将Spring MVC和MyBatis进行整合，控制层采用Spring MVC，持久层使用MyBatis实现。</p><h2 id="工程搭建"><a href="#工程搭建" class="headerlink" title="工程搭建"></a>工程搭建</h2><p>需求：实现商品查询列表，从mysql数据库查询商品信息。</p><h3 id="整合思路"><a href="#整合思路" class="headerlink" title="整合思路"></a>整合思路</h3><ol><li>导入jar包：springmvc（包括spring）、mybatis、jsp等。</li><li>Dao层：引入mybatis，并修改其配置文件。</li><li>Service层：建立接口包及其实现类包。</li><li>控制层：引入的springmvc框架，建立controller包，配制springmvc.xml及web.xml文件</li></ol><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="Dao层"><a href="#Dao层" class="headerlink" title="Dao层"></a>Dao层</h4><p>接口：Mapper.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Product&gt; <span class="title">productList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>映射文件：Mapper.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.cosl.sm.dao.ProductMapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"productList"</span> <span class="attr">resultMap</span>=<span class="string">"BaseResultMap"</span>&gt;</span></span><br><span class="line">        select * from product</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="Service层"><a href="#Service层" class="headerlink" title="Service层"></a>Service层</h4><p>service接口及其实现类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">productList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductServiceImpl</span> <span class="keyword">implements</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">productList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession session = MybatisUtil.factory.openSession();</span><br><span class="line">        ProductMapper productMapper = session.getMapper(ProductMapper.class);</span><br><span class="line">        <span class="keyword">return</span> productMapper.productList();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="Controller层"><a href="#Controller层" class="headerlink" title="Controller层"></a>Controller层</h4><p>采用注解开发Controller类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/productList.shtml"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">productList</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        ProductService ps = <span class="keyword">new</span> ProductServiceImpl();</span><br><span class="line">        List&lt;Product&gt; productList = ps.productList();</span><br><span class="line">        request.setAttribute(<span class="string">"list"</span>, productList);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"products"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>SpringMVC及MyBatis的配置文件如下图所示，配置内容与前文基本相同。</p><p><img src="/2018/12/28/Spring-MVC-快速入门-二/config.jpg" alt="config.jpg"></p><h2 id="Spring-MVC参数绑定方式"><a href="#Spring-MVC参数绑定方式" class="headerlink" title="Spring MVC参数绑定方式"></a>Spring MVC参数绑定方式</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;该部分主要内容：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Spring MVC整合mybatis；&lt;/li&gt;
&lt;li&gt;Spring MVC参数绑定方式。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;将Spring MVC和MyBatis进行整合，控制层采用Spring MVC，持久层使用MyBatis实
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC 快速入门(一)</title>
    <link href="https://zhaoshengxu.github.io/2018/12/27/SpringMVC%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <id>https://zhaoshengxu.github.io/2018/12/27/SpringMVC快速入门/</id>
    <published>2018-12-27T12:37:36.000Z</published>
    <updated>2020-01-10T16:08:46.923Z</updated>
    
    <content type="html"><![CDATA[<p>Spring MVC 是一个封装sevlet层的框架。<br>有了这个框架，写JAVAEE程序时，就不再需要自己去写sevlet，<br>springmvc提供了一个总的sevlet：dispatcherServlet，<br>只需要写普通的类和方法即可。</p><p>Spring Web MVC和Struts2都属于表现层的框架，它是Spring框架的一部分，我们可以从Spring的整体结构中看得出来：</p><p><img src="/2018/12/27/SpringMVC快速入门/Spring.png" alt="Spring"></p><h2 id="SpringMVC入门程序"><a href="#SpringMVC入门程序" class="headerlink" title="SpringMVC入门程序"></a>SpringMVC入门程序</h2><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><ul><li>Jdk：jdk1.8</li><li>Eclipse：Neon.3 Release (4.6.3)，2017</li><li>Tomcat：apache-tomcat-8.0</li></ul><h3 id="开发步骤"><a href="#开发步骤" class="headerlink" title="开发步骤"></a>开发步骤</h3><ol><li>创建Dynamic Web Project</li><li>导入jar包</li><li><p>创建index.jsp，在body标签内写一段话即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">springmvc web project</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>创建Controller，普通java类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstController</span> <span class="keyword">implements</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">handleRequest</span><span class="params">(HttpServletRequest arg0, HttpServletResponse arg1)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ModelAndView view = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        view.setViewName(<span class="string">"/index.jsp"</span>);</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建springmvc.xml，新建config源文件夹，并该目录创建springmvc1.xml。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"/first.shtml"</span> <span class="attr">class</span>=<span class="string">"controller.FirstController"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span>         </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置前端控制器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 类名查找：Web App Libraries/spring-webmvc/ org.springframework.web.servlet/ </span></span><br><span class="line"><span class="comment">            DispatcherServlet.class --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc1.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.shtml<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="入门程序处理流程"><a href="#入门程序处理流程" class="headerlink" title="入门程序处理流程"></a>入门程序处理流程</h3><p><img src="/2018/12/27/SpringMVC快速入门/flowmap.jpg" alt="flowmap.jpg"></p><h2 id="Springmvc架构"><a href="#Springmvc架构" class="headerlink" title="Springmvc架构"></a>Springmvc架构</h2><h3 id="SpringMVC处理流程"><a href="#SpringMVC处理流程" class="headerlink" title="SpringMVC处理流程"></a>SpringMVC处理流程</h3><p>SpringMVC简化处理流程：</p><p><img src="/2018/12/27/SpringMVC快速入门/flowmap2.png" alt="flowmap2"></p><p>SpringMVC完整处理流程：</p><p><img src="/2018/12/27/SpringMVC快速入门/flowmap3.jpg" alt="flowmap.jpg"></p><h3 id="组件说明"><a href="#组件说明" class="headerlink" title="组件说明"></a>组件说明</h3><p>以下组件通常使用框架提供实现：</p><h4 id="DispatcherServlet：前端控制器"><a href="#DispatcherServlet：前端控制器" class="headerlink" title="DispatcherServlet：前端控制器"></a>DispatcherServlet：前端控制器</h4><p>用户请求到达前端控制器，它就相当于mvc模式中的c，dispatcherServlet是整个流程控制的中心，由它调用其它组件处理用户的请求，dispatcherServlet的存在降低了组件之间的耦合性。</p><h4 id="HandlerMapping：处理器映射器"><a href="#HandlerMapping：处理器映射器" class="headerlink" title="HandlerMapping：处理器映射器"></a>HandlerMapping：处理器映射器</h4><p>HandlerMapping负责根据用户请求找到Handler即处理器，springmvc提供了不同的映射器实现不同的映射方式，例如：配置文件方式，实现接口方式，注解方式等。</p><h4 id="Handler：处理器"><a href="#Handler：处理器" class="headerlink" title="Handler：处理器"></a>Handler：处理器</h4><p>Handler 是继DispatcherServlet前端控制器的后端控制器，在DispatcherServlet的控制下Handler对具体的用户请求进行处理。</p><blockquote><p>由于Handler涉及到具体的用户业务请求，所以一般情况需要程序员根据业务需求开发Handler。</p></blockquote><h4 id="HandlAdapter：处理器适配器"><a href="#HandlAdapter：处理器适配器" class="headerlink" title="HandlAdapter：处理器适配器"></a>HandlAdapter：处理器适配器</h4><p>通过HandlerAdapter对处理器进行执行，这是适配器模式的应用，通过扩展适配器可以对更多类型的处理器进行执行。</p><h4 id="View-Resolver：视图解析器"><a href="#View-Resolver：视图解析器" class="headerlink" title="View Resolver：视图解析器"></a>View Resolver：视图解析器</h4><p>View Resolver负责将处理结果生成View视图，View Resolver首先根据逻辑视图名解析成物理视图名即具体的页面地址，再生成View视图对象，最后对View进行渲染将处理结果通过页面展示给用户。 </p><h4 id="View：视图"><a href="#View：视图" class="headerlink" title="View：视图"></a>View：视图</h4><p>springmvc框架提供了很多的View视图类型的支持，包括：jstlView、freemarkerView、pdfView等。我们最常用的视图就是jsp。</p><blockquote><p>一般情况下需要通过页面标签或页面模版技术将模型数据通过页面展示给用户，需要由程序员根据业务需求开发具体的页面。</p></blockquote><blockquote><p>在springmvc的各个组件中，处理器映射器、处理器适配器、视图解析器称为springmvc的三大组件。<br>需要用户开发的组件有handler、view。</p></blockquote><h3 id="非注解开发"><a href="#非注解开发" class="headerlink" title="非注解开发"></a>非注解开发</h3><p>上述入门程序配置了dispatchServlet和Controller，其余采用的是默认配置。根据SpringMVC完整处理流程可知，需要配置部分为：总控制器dispatchServlet、处理器Handler、处理器映射器handlerMapping、处理器适配器handlerAdapter、视图解析器viewResolver。</p><p>下面采用非注解开发方式，在springmvc.xml中，对其他进行配置：处理器映射器、处理器适配器、视图解析器。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 非注解开发 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 默认配置：Web App Libraries/spring-webmvc/ org.springframework.web.servlet/ </span></span><br><span class="line"><span class="comment">    DispatcherServlet.properties --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 非注解处理器映射器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 非注解处理器适配器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 非注解控制器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"/first.shtml"</span> <span class="attr">class</span>=<span class="string">"controller.FirstController"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 非注解视图解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="注解开发"><a href="#注解开发" class="headerlink" title="注解开发"></a>注解开发</h3><p>非注解开发方式并不常用，用的比较多的是注解开发。</p><ol><li><p>创建Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/second.shtml"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">second</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        request.setAttribute(<span class="string">"str"</span>, <span class="string">"这是注解开发的 "</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"/index.jsp"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建springmvc.xml，配置处理器映射器、处理器适配器、控制器。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注解开发 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 注解驱动包含了注解的处理器映射器和处理器适配器的配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 组件扫描会扫描指定路径下的含有controller注解的类 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"controller"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>其他配置文件同上，只需做相应的修改。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Spring MVC 是一个封装sevlet层的框架。&lt;br&gt;有了这个框架，写JAVAEE程序时，就不再需要自己去写sevlet，&lt;br&gt;springmvc提供了一个总的sevlet：dispatcherServlet，&lt;br&gt;只需要写普通的类和方法即可。&lt;/p&gt;
&lt;p&gt;S
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis快速入门(三)</title>
    <link href="https://zhaoshengxu.github.io/2018/12/24/MyBatis%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-%E7%AC%AC3%E9%83%A8%E5%88%86/"/>
    <id>https://zhaoshengxu.github.io/2018/12/24/MyBatis快速入门-第3部分/</id>
    <published>2018-12-24T05:03:23.000Z</published>
    <updated>2020-01-10T16:08:41.075Z</updated>
    
    <content type="html"><![CDATA[<p>MyBatis快速入门的第三部分内容：</p><ol><li>输入映射和输出映射：parameterType，resultMap；</li><li>动态sql：if,where,foreach,sql,include；</li><li>关联查询：一对一，一对多；</li><li>Mybatis的逆向工程。</li></ol><h2 id="输入映射和输出映射"><a href="#输入映射和输出映射" class="headerlink" title="输入映射和输出映射"></a>输入映射和输出映射</h2><p>Mapper.xml映射文件中定义了操作数据库的sql，每个sql是一个statement，映射文件是mybatis的核心。</p><h3 id="parameterType-输入类型"><a href="#parameterType-输入类型" class="headerlink" title="parameterType(输入类型)"></a>parameterType(输入类型)</h3><h4 id="传递简单类型"><a href="#传递简单类型" class="headerlink" title="传递简单类型"></a>传递简单类型</h4><p>简单类型如：int,string,double,float,date等。</p><h4 id="传递pojo对象"><a href="#传递pojo对象" class="headerlink" title="传递pojo对象"></a>传递pojo对象</h4><p>Mybatis使用ognl表达式解析对象字段的值，#{}或者${}括号中的值为pojo属性名称。</p><h4 id="传递pojo包装对象"><a href="#传递pojo包装对象" class="headerlink" title="传递pojo包装对象"></a>传递pojo包装对象</h4><p>开发中通过pojo传递查询条件，查询条件是综合的查询条件，不仅包括用户查询条件还包括其它的查询条件（比如将用户购买商品信息也作为查询条件），这时可以使用包装对象传递输入参数。即Pojo类中包含pojo。</p><p>需求：根据用户名查询用户信息，查询条件放到QueryVo的user属性中。</p><ol><li><p>pojo包装对象: QueryVo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryVo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user = user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>映射文件：UserDao</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用包装类型查询用户 使用ognl从对象中取属性值，如果是包装对象可以使用.操作符来取内容部的属性--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.cosl.mybatis.dao.UserDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUserByQueryVo"</span> <span class="attr">parameterType</span>=<span class="string">"queryvo"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">resultType</span>=<span class="string">"user"</span>&gt;</span></span><br><span class="line">        select * from user where name like "%$&#123;user.name&#125;%"</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findUserByQueryVo</span><span class="params">(QueryVo queryvo)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>service层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findUserByQueryVo</span><span class="params">(QueryVo queryvo)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findUserByQueryVo</span><span class="params">(QueryVo queryvo)</span> </span>&#123;</span><br><span class="line">        SqlSession session = MybatisUtil.factory.openSession();</span><br><span class="line">        UserDao userDao = session.getMapper(UserDao.class);</span><br><span class="line">        List&lt;User&gt; list = userDao.findUserByQueryVo(queryvo);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        UserService us = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        QueryVo queryvo = <span class="keyword">new</span> QueryVo();</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setName(<span class="string">"张"</span>);</span><br><span class="line">        queryvo.setUser(user);</span><br><span class="line">        List&lt;User&gt; list = us.findUserByQueryVo(queryvo);</span><br><span class="line">        <span class="keyword">for</span> (User user2 : list) &#123;</span><br><span class="line">            System.out.println(user2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="resultType-输出类型"><a href="#resultType-输出类型" class="headerlink" title="resultType(输出类型)"></a>resultType(输出类型)</h3><h4 id="输出简单类型"><a href="#输出简单类型" class="headerlink" title="输出简单类型"></a>输出简单类型</h4><p>输出简单类型必须查询出来的结果集有一条记录，最终将第一个字段的值转换为输出类型。<br>使用session的selectOne可查询单条记录。</p><ol><li><p>Mapper.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.cosl.mybatis.dao.UserDao"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 计算用户数量 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"countUserNumber"</span> <span class="attr">resultType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        select count(1) from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countUserNumber</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>service层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countUserNumber</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countUserNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession session = MybatisUtil.factory.openSession();</span><br><span class="line">        UserDao userDao = session.getMapper(UserDao.class);</span><br><span class="line">        <span class="keyword">int</span> count = userDao.countUserNumber();</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCountUserNumber</span><span class="params">()</span></span>&#123;</span><br><span class="line">    UserService us = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">    <span class="keyword">int</span> count = us.countUserNumber();</span><br><span class="line">    System.out.println(count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="输出pojo对象及列表"><a href="#输出pojo对象及列表" class="headerlink" title="输出pojo对象及列表"></a>输出pojo对象及列表</h4><p>参见之前内容。</p><h3 id="resultMap"><a href="#resultMap" class="headerlink" title="resultMap"></a>resultMap</h3><p>resultType可以指定pojo将查询结果映射为pojo，但需要pojo的属性名和sql查询的列名一致方可映射成功。</p><p>如果sql查询字段名和pojo的属性名不一致，可以通过resultMap将字段名和属性名作一个对应关系 ，resultMap实质上还需要将查询结果映射到pojo对象中。</p><p>resultMap可以实现将查询结果映射为复杂类型的pojo，比如在查询结果映射对象中包括pojo和list实现一对一查询和一对多查询。</p><h4 id="orders表及orders对象"><a href="#orders表及orders对象" class="headerlink" title="orders表及orders对象"></a>orders表及orders对象</h4><p>字段user_name如下，注意字段user_name，存在下划线。<br><img src="/2018/12/24/MyBatis快速入门-第3部分/orders.jpg" alt="orders"></p><p>orders对象，属性userName是与orders表中的user_name字段对应，但是两者并不一致，所以采用resultType无法进行结果映射，解决办法有两种：1. sql语句中采用别名；2. 使用resultMap。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Orders</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> money;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> uid;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="sql语句中采用别名"><a href="#sql语句中采用别名" class="headerlink" title="sql语句中采用别名"></a>sql语句中采用别名</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findOrderList"</span> <span class="attr">resultType</span>=<span class="string">"orders"</span>&gt;</span></span><br><span class="line">    select id,money,address,uid,user_name userName from orders</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="resultMap使用"><a href="#resultMap使用" class="headerlink" title="resultMap使用"></a>resultMap使用</h4><ol><li><p>映射文件: OrdersDao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.cosl.mybatis.dao.OrdersDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">"orders"</span> <span class="attr">id</span>=<span class="string">"ordersResultMap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"userName"</span> <span class="attr">column</span>=<span class="string">"user_name"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findOrderList"</span> <span class="attr">resultMap</span>=<span class="string">"ordersResultMap"</span>&gt;</span></span><br><span class="line">        select * from orders</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrdersDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Orders&gt; <span class="title">findOrderList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>service层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrdersService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Orders&gt; <span class="title">findOrderList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrdersServiceImpl</span> <span class="keyword">implements</span> <span class="title">OrdersService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Orders&gt; <span class="title">findOrderList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession session = MybatisUtil.factory.openSession();</span><br><span class="line">        OrdersDao ordersDao = session.getMapper(OrdersDao.class);</span><br><span class="line">        List&lt;Orders&gt; list = ordersDao.findOrderList();</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testfindOrderList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OrdersService ordersService = <span class="keyword">new</span> OrdersServiceImpl();</span><br><span class="line">    List&lt;Orders&gt; list = ordersService.findOrderList();</span><br><span class="line">    <span class="keyword">for</span> (Orders orders : list) &#123;</span><br><span class="line">        System.out.println(orders);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="动态sql"><a href="#动态sql" class="headerlink" title="动态sql"></a>动态sql</h2><p>通过mybatis提供的各种标签方法实现动态拼接sql。</p><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><p>注意进行空字符串校验。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 根据id或name查找用户列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUserList"</span> <span class="attr">parameterType</span>=<span class="string">"user"</span> <span class="attr">resultType</span>=<span class="string">"user"</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line">    <span class="comment">&lt;!-- 不明白，先这样用 --&gt;</span></span><br><span class="line">    where 1=1</span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"uid!=null and uid!=''"</span>&gt;</span></span><br><span class="line">    and uid=#&#123;uid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name!=null and name!=''"</span>&gt;</span></span><br><span class="line">    and name like "%$&#123;name&#125;%"</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="where"><a href="#where" class="headerlink" title="where"></a>where</h3><p>上边的sql也可以改为如下，其中<where>标签会自动处理多余的and。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 根据id或name查找用户列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUserList"</span> <span class="attr">parameterType</span>=<span class="string">"user"</span> <span class="attr">resultType</span>=<span class="string">"user"</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"uid!=null and uid!=''"</span>&gt;</span></span><br><span class="line">            and uid=#&#123;uid&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name!=null and name!=''"</span>&gt;</span></span><br><span class="line">            and name like "%$&#123;name&#125;%"</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></where></p><h3 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h3><p>向sql传递数组或List，mybatis使用foreach解析，代码如下：</p><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><p>传入多个id及用户名查询用户信息，可以同用下边两个sql实现：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> <span class="keyword">name</span> <span class="keyword">LIKE</span> <span class="string">'%张%'</span> <span class="keyword">AND</span> (<span class="keyword">id</span> =<span class="number">5</span> <span class="keyword">OR</span> <span class="keyword">id</span> =<span class="number">7</span> <span class="keyword">OR</span> <span class="keyword">id</span>=<span class="number">9</span>);</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> <span class="keyword">name</span> <span class="keyword">LIKE</span> <span class="string">'%张%'</span> <span class="keyword">AND</span> <span class="keyword">id</span> <span class="keyword">IN</span> (<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>);</span><br></pre></td></tr></table></figure></p><h4 id="定义QueryVo对象"><a href="#定义QueryVo对象" class="headerlink" title="定义QueryVo对象"></a>定义QueryVo对象</h4><p>在pojo中定义int数组ids存储多个用户id，并添加getter/setter方法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryVo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] ids;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="映射文件"><a href="#映射文件" class="headerlink" title="映射文件"></a>映射文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 根据id或name查找用户列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUserList2"</span> <span class="attr">parameterType</span>=<span class="string">"queryvo"</span> <span class="attr">resultType</span>=<span class="string">"user"</span>&gt;</span></span><br><span class="line">    select * from user</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"ids!=null"</span>&gt;</span></span><br><span class="line">            and uid in</span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"ids"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">separator</span>=<span class="string">","</span></span></span><br><span class="line"><span class="tag">                <span class="attr">close</span>=<span class="string">")"</span>&gt;</span></span><br><span class="line">                #&#123;id&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"user.name!=null and user.name!=''"</span>&gt;</span></span><br><span class="line">            and name like "%$&#123;user.name&#125;%"</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindUserList2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    UserService us = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">    QueryVo queryvo = <span class="keyword">new</span> QueryVo();</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setName(<span class="string">"张"</span>);</span><br><span class="line">    queryvo.setUser(user);</span><br><span class="line">    <span class="keyword">int</span>[] ids = &#123;<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>&#125;;</span><br><span class="line">    queryvo.setIds(ids);</span><br><span class="line">    List&lt;User&gt; list = us.findUserList2(queryvo);</span><br><span class="line">    <span class="keyword">for</span> (User user2 : list) &#123;</span><br><span class="line">        System.out.println(user2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="sql和inculde"><a href="#sql和inculde" class="headerlink" title="sql和inculde"></a>sql和inculde</h3><p>借助sql和include标签，将Sql中可重复使用的部分用sql标签提取出来，然后用include标签引用，从而达到sql重用的目的。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--用sql标签将where条件抽取出来--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"queryUserByIdAndName"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"ids!=null"</span>&gt;</span></span><br><span class="line">                and uid in</span><br><span class="line">                <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"ids"</span> <span class="attr">item</span>=<span class="string">"id"</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">separator</span>=<span class="string">","</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">close</span>=<span class="string">")"</span>&gt;</span></span><br><span class="line">                    #&#123;id&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"user.name!=null and user.name!=''"</span>&gt;</span></span><br><span class="line">                and name like "%$&#123;user.name&#125;%"</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 根据id或name查找用户列表 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUserList2"</span> <span class="attr">parameterType</span>=<span class="string">"queryvo"</span> <span class="attr">resultType</span>=<span class="string">"user"</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">        <span class="comment">&lt;!-- 引用sql片段 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"queryUserByIdAndName"</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：如果引用其它映射文件mapper.xml的sql片段，则在引用时需要加上namespace，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"namespace.引用的sql片段"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="关联查询"><a href="#关联查询" class="headerlink" title="关联查询"></a>关联查询</h2><p>订单与用户是一对一查询，用户与订单则是一对多查询。<br>因为一个订单信息只会是一个人下的订单，所以从查询订单信息出发关联查询用户信息为一对一查询。如果从用户信息出发查询用户下的订单信息则为一对多查询，因为一个用户可以下多个订单。</p><h3 id="一对一查询"><a href="#一对一查询" class="headerlink" title="一对一查询"></a>一对一查询</h3><p>需求：查询所有订单信息，关联查询下单用户信息。通常有两种方法：</p><ol><li>使用resultType，定义订单信息po类，此po类中包括了订单信息和用户信息。此方法相对而言，较为简单。</li><li>使用resultMap，定义专门的resultMap用于映射一对一查询结果。下面进行重点介绍。</li></ol><h4 id="orders类"><a href="#orders类" class="headerlink" title="orders类"></a>orders类</h4><p>在Orders类中加入user属性，user属性中用于存储关联查询的用户信息，因为订单关联查询用户是一对一关系，所以这里使用单个User对象存储关联查询的用户信息。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Orders</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> money;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="映射文件：OrdersDao-xml"><a href="#映射文件：OrdersDao-xml" class="headerlink" title="映射文件：OrdersDao.xml"></a>映射文件：OrdersDao.xml</h4><p>使用association完成关联查询，将关联查询信息映射到pojo对象中。</p><ul><li>association：表示进行关联查询单条记录;</li><li>property：表示关联查询的结果存储在Orders的user属性；</li><li>javaType：表示关联查询的结果类型。<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"ordersMap"</span> <span class="attr">type</span>=<span class="string">"orders"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"money"</span> <span class="attr">column</span>=<span class="string">"money"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"address"</span> <span class="attr">column</span>=<span class="string">"address"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"userName"</span> <span class="attr">column</span>=<span class="string">"user_name"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 用association标签把orders中的user属性与user一对一关联起来 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"user"</span> <span class="attr">javaType</span>=<span class="string">"user"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"uid"</span> <span class="attr">column</span>=<span class="string">"uid"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"money"</span> <span class="attr">column</span>=<span class="string">"money"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findOrderAndUser"</span> <span class="attr">resultMap</span>=<span class="string">"ordersMap"</span>&gt;</span></span><br><span class="line">    select * from orders,user where orders.uid=user.uid</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="接口及测试类"><a href="#接口及测试类" class="headerlink" title="接口及测试类"></a>接口及测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OrdersDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Orders&gt; <span class="title">findOrderAndUser</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindOrderAndUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    OrdersService ordersService = <span class="keyword">new</span> OrdersServiceImpl();</span><br><span class="line">    List&lt;Orders&gt; list = ordersService.findOrderAndUser();</span><br><span class="line">    <span class="keyword">for</span> (Orders orders : list) &#123;</span><br><span class="line">        System.out.println(orders);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一对多查询"><a href="#一对多查询" class="headerlink" title="一对多查询"></a>一对多查询</h3><p>需求：查询所有用户信息及用户关联的订单信息。用户信息和订单信息为一对多关系。</p><h4 id="User类"><a href="#User类" class="headerlink" title="User类"></a>User类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> uid;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> money;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Orders&gt; orderList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="映射文件：UserDao-xml"><a href="#映射文件：UserDao-xml" class="headerlink" title="映射文件：UserDao.xml"></a>映射文件：UserDao.xml</h4><ul><li>collection部分定义了用户关联的订单信息。表示关联查询结果集。</li><li>property：关联查询的结果集存储在User对象的上orderList属性。</li><li>ofType：指定关联查询的结果集中的对象类型即orderList中的对象类型orders。<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 查询用户信息，一对多关联查询订单信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUserAndOrders"</span> <span class="attr">resultMap</span>=<span class="string">"userMap"</span>&gt;</span></span><br><span class="line">    SELECT * FROM</span><br><span class="line">    user,orders WHERE user.uid=orders.uid</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">"user"</span> <span class="attr">id</span>=<span class="string">"userMap"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"uid"</span> <span class="attr">column</span>=<span class="string">"uid"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"money"</span> <span class="attr">column</span>=<span class="string">"money"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用collection标签实现一对多关联查询，将多个订单信息映射给一个用户--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"orderList"</span> <span class="attr">ofType</span>=<span class="string">"orders"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"money"</span> <span class="attr">column</span>=<span class="string">"money"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"address"</span> <span class="attr">column</span>=<span class="string">"address"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"userName"</span> <span class="attr">column</span>=<span class="string">"user_name"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="接口、service层及测试类"><a href="#接口、service层及测试类" class="headerlink" title="接口、service层及测试类"></a>接口、service层及测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findUserAndOrders</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//service实现类</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findUserAndOrders</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession session = MybatisUtil.factory.openSession();</span><br><span class="line">    UserDao userDao = session.getMapper(UserDao.class);</span><br><span class="line">    <span class="keyword">return</span> userDao.findUserAndOrders();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindUserAndOrders</span><span class="params">()</span></span>&#123;</span><br><span class="line">    UserService us = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">    List&lt;User&gt; list = us.findUserAndOrders();</span><br><span class="line">    <span class="keyword">for</span> (User user : list) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mybatis的逆向工程"><a href="#Mybatis的逆向工程" class="headerlink" title="Mybatis的逆向工程"></a>Mybatis的逆向工程</h2><p>只需修改生成器配置文件generatorConfig.xml中的以下信息即可：</p><ol><li>数据库连接的信息：驱动类、连接地址、用户名、密码。</li><li>targetProject:生成model javabean类的位置。</li><li>targetProject:mapper映射文件生成的位置。</li><li>targetPackage：mapper接口生成的位置。</li><li>指定需要生成相应的代码的表名。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;MyBatis快速入门的第三部分内容：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输入映射和输出映射：parameterType，resultMap；&lt;/li&gt;
&lt;li&gt;动态sql：if,where,foreach,sql,include；&lt;/li&gt;
&lt;li&gt;关联查询：一对一，一对多；&lt;/
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis快速入门(二)</title>
    <link href="https://zhaoshengxu.github.io/2018/12/23/MyBatis%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-%E7%AC%AC2%E9%83%A8%E5%88%86/"/>
    <id>https://zhaoshengxu.github.io/2018/12/23/MyBatis快速入门-第2部分/</id>
    <published>2018-12-23T15:37:21.000Z</published>
    <updated>2020-01-10T16:08:06.931Z</updated>
    
    <content type="html"><![CDATA[<p>MyBatis快速入门的第二部分内容：</p><ol><li>SqlMapConfig.xml配置文件：包括定义别名，引入映射文件等。</li><li>Dao开发方法：原始Dao开发方式和Mapper动态代理开发方式。</li></ol><h2 id="SqlMapConfig-xml配置文件"><a href="#SqlMapConfig-xml配置文件" class="headerlink" title="SqlMapConfig.xml配置文件"></a>SqlMapConfig.xml配置文件</h2><h3 id="主要配置内容"><a href="#主要配置内容" class="headerlink" title="主要配置内容"></a>主要配置内容</h3><p>SqlMapConfig.xml中的主要配置的内容及顺序如下：</p><ul><li>properties（属性）</li><li>settings（全局配置参数）</li><li>typeAliases（类型别名）</li><li>environments（环境集合属性对象）</li><li>environment（环境子属性对象）</li><li>transactionManager（事务管理）</li><li>dataSource（数据源）</li><li>mappers（映射器）</li></ul><p>SqlMapConfig.xml引用如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 根标签 配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 环境(数据源信息) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 使用jdbc事务管理，事务控制由mybatis --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 数据库连接池，由mybatis管理 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.DriverClassName&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="properties（属性）"><a href="#properties（属性）" class="headerlink" title="properties（属性）"></a>properties（属性）</h3><p>SqlMapConfig.xml引用java属性文件(properties)中的配置信息如下，MyBatis 将按照下面的顺序来加载属性：</p><ul><li>首先，读取在 properties 元素体内定义的属性。</li><li>然后，读取properties 元素中resource或 url 加载的属性，它会覆盖已读取的同名属性。</li></ul><p>其中，在src下的config源码文件夹中定义jdbc.properties文件，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.DriverClassName=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql://127.0.0.1:3306/mydb?characterEncoding=utf8</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=zsx</span><br></pre></td></tr></table></figure></p><h3 id="typeAliases（类型别名）"><a href="#typeAliases（类型别名）" class="headerlink" title="typeAliases（类型别名）"></a>typeAliases（类型别名）</h3><h4 id="mybatis支持的别名"><a href="#mybatis支持的别名" class="headerlink" title="mybatis支持的别名"></a>mybatis支持的别名</h4><p>mybatis支持的常用别名如下：<br>别名 | 映射的类型<br>—|—<br>string | String<br>byte  |  Byte<br>long  |  Long<br>short |  Short<br>int  |   Integer<br>integer  |   Integer<br>double | Double<br>float  | Float<br>boolean  |   Boolean<br>date  |  Date<br>decimal  |   BigDecimal<br>bigdecimal | BigDecimal<br>map | Map</p><h4 id="自定义别名"><a href="#自定义别名" class="headerlink" title="自定义别名"></a>自定义别名</h4><p>在SqlMapConfig.xml中配置如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 定义别名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 定义单个别名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">alias</span>=<span class="string">"product"</span> <span class="attr">type</span>=<span class="string">"com.cosl.mybatis.model.Product"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 批量定义别名，扫描整个包下面的类，别名为类名，不区分大小写 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.cosl.mybatis.model"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="mappers（映射器）"><a href="#mappers（映射器）" class="headerlink" title="mappers（映射器）"></a>mappers（映射器）</h3><p>Mapper配置的2种方法：</p><ol><li><p><mapper resource=" "><br>使用相对于类路径的资源，如：<mapper resource="product.xml"></mapper></mapper></p></li><li><p><package name=""><br>当工程越来越大，各种Mapper接口和Mapper.xml越来越多，用第1种方式加载的话，需要写很多行。此时可以采用另一种更加方便的办法来加载sql映射文件——自动扫包，具体做法如下。需要注意的是：此种方法要求mapper接口名称和mapper映射文件名称相同，且放在同一个目录中。</package></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入的sql的映射文件的路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入单个映射文件 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"product.xml"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 批量引入映射文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.cosl.mybatis.dao"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="Dao开发方法"><a href="#Dao开发方法" class="headerlink" title="Dao开发方法"></a>Dao开发方法</h2><p>使用Mybatis开发Dao，通常有两个方法，即原始Dao开发方法和Mapper接口开发方法。</p><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><ol><li>根据用户id查询一个用户信息</li><li>根据用户名称模糊查询用户信息列表</li><li>添加用户信息</li></ol><h3 id="SqlSession的使用范围"><a href="#SqlSession的使用范围" class="headerlink" title="SqlSession的使用范围"></a>SqlSession的使用范围</h3><p>SqlSession中封装了对数据库的操作，如：增删改查等。<br>通过SqlSessionFactory创建SqlSession，而SqlSessionFactory是通过SqlSessionFactoryBuilder进行创建。</p><h4 id="SqlSessionFactoryBuilder"><a href="#SqlSessionFactoryBuilder" class="headerlink" title="SqlSessionFactoryBuilder"></a>SqlSessionFactoryBuilder</h4><p>SqlSessionFactoryBuilder用于创建SqlSessionFactory，SqlSessionFactory一旦创建完成就不需要SqlSessionFactoryBuilder了，因为SqlSession是通过SqlSessionFactory生产，所以可以将SqlSessionFactoryBuilder当成一个工具类使用，最佳使用范围是方法范围即方法体内局部变量。</p><h4 id="SqlSessionFactory"><a href="#SqlSessionFactory" class="headerlink" title="SqlSessionFactory"></a>SqlSessionFactory</h4><p>SqlSessionFactory是一个接口，接口中定义了openSession的不同重载方法，SqlSessionFactory的最佳使用范围是整个应用运行期间，一旦创建后可以重复使用，通常以单例模式管理SqlSessionFactory。</p><h4 id="SqlSession"><a href="#SqlSession" class="headerlink" title="SqlSession"></a>SqlSession</h4><p>SqlSession是一个面向用户的接口，sqlSession中定义了数据库操作方法。每个线程都应该有它自己的SqlSession实例。SqlSession的实例不能共享使用，它也是线程不安全的。因此最佳的范围是请求或方法范围。绝对不能将SqlSession实例的引用放在一个类的静态字段或实例字段中。<br>打开一个 SqlSession，使用完毕就要关闭它。通常把这个关闭操作放到 finally 块中以确保每次都能执行关闭。如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SqlSession session = sqlSessionFactory.openSession();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">     <span class="comment">// do work</span></span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    session.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="原始Dao开发方式"><a href="#原始Dao开发方式" class="headerlink" title="原始Dao开发方式"></a>原始Dao开发方式</h3><p>原始Dao开发方法需要程序员编写Dao接口和Dao实现类。</p><ol><li><p>映射文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findProductById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"model.Product"</span>&gt;</span></span><br><span class="line">        select * from product where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findProductByName"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">resultType</span>=<span class="string">"model.Product"</span>&gt;</span></span><br><span class="line">        select * from product where name like "%$&#123;value&#125;%"</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insertProduct"</span> <span class="attr">parameterType</span>=<span class="string">"model.Product"</span>&gt;</span></span><br><span class="line">        insert into product (name,price) values (#&#123;name&#125;,#&#123;price&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Dao接口及其实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Product <span class="title">findProductById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">findProductByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductDaoImpl</span> <span class="keyword">implements</span> <span class="title">ProductDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Product <span class="title">findProductById</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        SqlSession session = MybatisUtil.factory.openSession();</span><br><span class="line">        Product product = session.selectOne(<span class="string">"product.findProductById"</span>, id);</span><br><span class="line">        <span class="keyword">return</span> product;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">findProductByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        SqlSession session = MybatisUtil.factory.openSession();</span><br><span class="line">        List&lt;Product&gt; list = session.selectList(<span class="string">"product.findProductByName"</span>, name);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>工具类MybatisUtil</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 声明一个静态的会话工厂变量，可通过类名直接调用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSessionFactory factory;</span><br><span class="line">    <span class="comment">// 静态代码块加载mybatis核心配置文件</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 加载mybatis的核心配置文件SqlMapConfig.xml</span></span><br><span class="line">            InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line">            <span class="comment">// 给静态的会话工厂变量赋值</span></span><br><span class="line">            factory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Dao测试<br>创建一个JUnit的测试类，对Dao进行测试。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ProductDao pd = <span class="keyword">new</span> ProductDaoImpl();</span><br><span class="line">        Product product = pd.findProductById(<span class="number">15</span>);</span><br><span class="line">        System.out.println(product);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ProductDao pd = <span class="keyword">new</span> ProductDaoImpl();</span><br><span class="line">        List&lt;Product&gt; list = pd.findProductByName(<span class="string">"phone"</span>);</span><br><span class="line">        <span class="keyword">for</span> (Product product : list) &#123;</span><br><span class="line">            System.out.println(product);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>原始Dao开发中存在的问题</p></li></ol><ul><li>Dao方法体存在重复代码：通过SqlSessionFactory创建SqlSession，调用SqlSession的数据库操作方法。</li><li>调用sqlSession的数据库操作方法需要指定statement的id，存在硬编码，不利于开发维护。</li></ul><h3 id="Mapper动态代理方式"><a href="#Mapper动态代理方式" class="headerlink" title="Mapper动态代理方式"></a>Mapper动态代理方式</h3><h4 id="开发规范"><a href="#开发规范" class="headerlink" title="开发规范"></a>开发规范</h4><p>Mapper接口开发方法只需要程序员编写Mapper接口（相当于Dao接口），<br>由Mybatis框架根据接口定义，创建接口的动态代理对象，代理对象的方法体同上边Dao接口实现类方法。<br>Mapper接口开发需要遵循以下规范：</p><ol><li>Mapper.xml文件中的namespace与mapper接口的类路径相同。</li><li>Mapper接口方法名和Mapper.xml中定义的每个sql的id相同 </li><li>Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql 的parameterType的类型相同</li><li>Mapper接口方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型相同</li></ol><h4 id="Mapper-xml-映射文件"><a href="#Mapper-xml-映射文件" class="headerlink" title="Mapper.xml(映射文件)"></a>Mapper.xml(映射文件)</h4><p>定义mapper映射文件Mapper.xml，需要修改namespace的值为Mapper接口路径。将Mapper.xml放在跟mapper接口的相同目录下。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.cosl.mybatis.dao.ProductDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findProductById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">        select * from product where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findProductByName"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">resultType</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">        select * from product where name like "%$&#123;value&#125;%"</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insertProduct"</span> <span class="attr">parameterType</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">        insert into product (name,price,pnum) values (#&#123;name&#125;,#&#123;price&#125;,#&#123;pnum&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="Mapper-java-接口文件"><a href="#Mapper-java-接口文件" class="headerlink" title="Mapper.java(接口文件)"></a>Mapper.java(接口文件)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Product <span class="title">findProductById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">findProductByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertProduct</span><span class="params">(Product product)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口定义有如下特点：</p><ol><li>Mapper接口方法名和Mapper.xml中定义的statement的id相同。</li><li>Mapper接口方法的输入参数类型和mapper.xml中statement的parameterType的类型相同</li><li>Mapper接口方法的输出参数类型和mapper.xml中statement的resultType的类型相同</li></ol><h4 id="加载Mapper-xml文件"><a href="#加载Mapper-xml文件" class="headerlink" title="加载Mapper.xml文件"></a>加载Mapper.xml文件</h4><p>修改SqlMapConfig.xml文件：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入的sql的映射文件的路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入单个映射文件 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;mapper resource="product.xml" /&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 批量引入映射文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.cosl.mybatis.dao"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="service层"><a href="#service层" class="headerlink" title="service层"></a>service层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Product <span class="title">findProductById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">findProductByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertProduct</span><span class="params">(Product product)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductServiceImpl</span> <span class="keyword">implements</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Product <span class="title">findProductById</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        SqlSession session = MybatisUtil.factory.openSession();</span><br><span class="line">        ProductDao productDao = session.getMapper(ProductDao.class);</span><br><span class="line">        <span class="keyword">return</span> productDao.findProductById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">findProductByName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        SqlSession session = MybatisUtil.factory.openSession();</span><br><span class="line">        ProductDao productDao = session.getMapper(ProductDao.class);</span><br><span class="line">        <span class="keyword">return</span> productDao.findProductByName(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertProduct</span><span class="params">(Product product)</span> </span>&#123;</span><br><span class="line">        SqlSession session = MybatisUtil.factory.openSession();</span><br><span class="line">        ProductDao productDao = session.getMapper(ProductDao.class);</span><br><span class="line">        productDao.insertProduct(product);</span><br><span class="line">        session.commit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindProductById</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ProductService ps = <span class="keyword">new</span> ProductServiceImpl();</span><br><span class="line">        Product product = ps.findProductById(<span class="number">15</span>);</span><br><span class="line">        System.out.println(product);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindProductByName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ProductService ps = <span class="keyword">new</span> ProductServiceImpl();</span><br><span class="line">        List&lt;Product&gt; list = ps.findProductByName(<span class="string">"phone"</span>);</span><br><span class="line">        <span class="keyword">for</span> (Product product : list) &#123;</span><br><span class="line">            System.out.println(product);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testInsertProduct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ProductService ps = <span class="keyword">new</span> ProductServiceImpl();</span><br><span class="line">        Product product = <span class="keyword">new</span> Product();</span><br><span class="line">        product.setName(<span class="string">"honor"</span>);</span><br><span class="line">        product.setPrice(<span class="number">1399.00</span>);</span><br><span class="line">        product.setPnum(<span class="number">12</span>);</span><br><span class="line">        ps.insertProduct(product);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><ul><li>关于selectOne和selectList：<br>动态代理对象调用selectOne()或selectList()是由mapper接口方法的返回值决定，如果返回list则调用selectList方法，如果返回单个对象则调用selectOne方法。</li><li>关于namespace：<br>mybatis官方推荐使用mapper动态代理方法开发mapper接口，程序员不用编写mapper接口实现类，使用mapper代理方法时，输入参数可以使用pojo包装对象或map对象，保证dao的通用性。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;MyBatis快速入门的第二部分内容：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SqlMapConfig.xml配置文件：包括定义别名，引入映射文件等。&lt;/li&gt;
&lt;li&gt;Dao开发方法：原始Dao开发方式和Mapper动态代理开发方式。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;SqlMa
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>历练使人强大</title>
    <link href="https://zhaoshengxu.github.io/2018/12/15/%E5%8E%86%E7%BB%83%E4%BD%BF%E4%BA%BA%E5%BC%BA%E5%A4%A7/"/>
    <id>https://zhaoshengxu.github.io/2018/12/15/历练使人强大/</id>
    <published>2018-12-14T17:11:38.000Z</published>
    <updated>2020-01-10T15:51:37.650Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/12/15/历练使人强大/Olympic.jpg" alt="Olympic"></p><p>有人说，七年是一辈子。七年前，我听着石油工业之歌《我为祖国献石油》进入中国石油大学（北京）就读本科。七年后的今天，我入职中海油服，石油工业之歌那嘹亮的歌声犹在耳边回响，“我为祖国献石油，哪里有石油，哪里就是我的家……”，她描绘出石油人不一样的工作场景，唱出了一代又一代石油人的心声。</p><p>作为刚刚入职中海油服油化研究院的新员工，我们是机动人员，扮演着不同的角色。我们如同一块砖，哪里需要，往哪里搬；既可以敲门，亦可以用来盖房、铺路。</p><p>我们扮演着学生的角色，顺利完成为期两周的安全培训，系统学习QHSE2.0体系，为实现“人员零伤害、环境零损害、财产零损失、质量零缺陷”的目标奠定基础。</p><p>别人的征程是星辰大海，我的征程是固井试验。告别了安全培训，又踏上实验技能培训的征程，以学徒身份，在方工的耐心指导下，一步步学习固井试验操作技能。从称量、搅拌、配浆到上稠化仪；从测密度、测流变到测量稠化时间和沉降稳定性；从在旁边看到亲自上手操作；从蹒跚学步到独立操作。由于硕士期间学习的是提高采收率与采油化学方向，所以面对固井这个陌生的面孔，内心还是有些慌乱。专业知识欠缺，研究方向不确定，都是面临的问题，所以接下来要走的路还很长，需要学习的东西还很多。</p><p>作为刚刚入职的新员工，院长特意安排我们旁听了油化事业部2018年中工作会议，希望我们借助这次机会对研究院的工作有一个宏观上的认识。另外，有幸作为新员工代表上台谈谈入职以来的感受，尽管明知自己上台会非常紧张，准备也并不充分，但还是希望能够抓住这样的机会锻炼自己，加速成长，所以在大家的相互推让下，我选择了走上前去，只因为这是一次很好的锻炼机会。</p><p>总有一种力量让人泪流满面，总有一种精神令人荡气回肠。工作之余，有幸作为观众参加屈长龙同志先进事迹宣讲报告会，屈长龙是中国LNG事业的先驱者，他不辞辛劳，不分昼夜，为我国LNG事业的发展鞠躬尽瘁，奉献终生。他是时代的楷模，是海油人的榜样，如同黑暗中的灯塔，照亮我们的前程。</p><p>还扮演过固井学组的会务成员角色，给近百位参会人员打电话确认是否收到会议通知邮件。也是“我是党员我带头”活动的参与者，和大家一起打扫库房，清理货架。</p><p>历练使人强大，珍惜每一次机会，积极参与，向内修炼，向外建设。天道酬勤，唯有努力和奋斗从来未曾被辜负。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2018/12/15/历练使人强大/Olympic.jpg&quot; alt=&quot;Olympic&quot;&gt;&lt;/p&gt;
&lt;p&gt;有人说，七年是一辈子。七年前，我听着石油工业之歌《我为祖国献石油》进入中国石油大学（北京）就读本科。七年后的今天，我入职中海油服，石油工业之歌那嘹
      
    
    </summary>
    
      <category term="Summary" scheme="https://zhaoshengxu.github.io/categories/Summary/"/>
    
    
      <category term="Work" scheme="https://zhaoshengxu.github.io/tags/Work/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis快速入门(一)</title>
    <link href="https://zhaoshengxu.github.io/2018/12/11/MyBatis%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-%E7%AC%AC1%E9%83%A8%E5%88%86/"/>
    <id>https://zhaoshengxu.github.io/2018/12/11/MyBatis快速入门-第1部分/</id>
    <published>2018-12-11T14:47:47.000Z</published>
    <updated>2020-01-10T16:06:49.835Z</updated>
    
    <content type="html"><![CDATA[<p>JAVAEE开发的三大框架：ssm、ssh（前几年常用）。</p><ul><li>Spring MVC：用来封装servlet编程的一个框架（struts2）；</li><li>Spring：体系整合框架，其他框架的粘合剂；</li><li>Mybatis：封装jdbc访问代码的一个框架（hibernate），ORM对象关系映射</li></ul><h2 id="框架及其优点："><a href="#框架及其优点：" class="headerlink" title="框架及其优点："></a>框架及其优点：</h2><p>框架（Framework）是整个或部分系统的可重用设计，表现为一组抽象构件及构件实例间交互的方法; 另一种定义认为，框架是可被应用开发者定制的应用骨架。是用框架可以提高程序复用性和系统的可扩充性，以缩短大型应用软件系统的开发周期，提高开发质量。框架的优点表现在：</p><ol><li>灵活可配置：将程序中写死的代码（硬编码）可以写到配置文件中。</li><li>代码复用性高：将程序中反复要写的代码（套路代码）进行抽取封装，提高代码的复用性。</li><li>简化开发：框架将底层复杂的细节进行了封装，并提供了方便调用的API，使得开发人员将工作的重点转移到实际业务中，大大提高了项目的开发效率。</li></ol><h2 id="MyBatis框架"><a href="#MyBatis框架" class="headerlink" title="MyBatis框架"></a>MyBatis框架</h2><blockquote><p>MyBatis 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis 。2013年11月迁移到Github。    MyBatis是一个优秀的持久层(DAO)框架，它对jdbc的操作数据库的过程进行封装，使开发者只需要关注 SQL 本身，而不需要花费精力去处理例如注册驱动、创建connection、创建statement、手动设置参数、结果集检索等jdbc繁杂的过程代码。</p></blockquote><p>Mybatis通过xml或注解的方式将要执行的各种statement（statement、preparedStatemnt、CallableStatement）配置起来，并通过java对象和statement中的sql进行映射生成最终执行的sql语句，最后由mybatis框架执行sql并将结果映射成java对象并返回。</p><h2 id="回顾JDBC编程"><a href="#回顾JDBC编程" class="headerlink" title="回顾JDBC编程"></a>回顾JDBC编程</h2><h3 id="jdbc编程步骤："><a href="#jdbc编程步骤：" class="headerlink" title="jdbc编程步骤："></a>jdbc编程步骤：</h3><ol><li>注册驱动；</li><li>创建并获取数据库链接；</li><li>创建jdbc statement对象；</li><li>设置sql语句及其参数(使用preparedStatement)；</li><li>通过statement执行sql并获取结果；</li><li>对sql执行结果进行解析处理；</li><li>释放资源(resultSet、preparedstatement、connection)。</li></ol><h3 id="jdbc存在的问题"><a href="#jdbc存在的问题" class="headerlink" title="jdbc存在的问题"></a>jdbc存在的问题</h3><ol><li>数据库连接创建、释放频繁造成系统资源浪费从而影响系统性能，如果使用数据库连接池可解决此问题。</li><li>Sql语句在代码中硬编码，造成代码不易维护，实际应用sql变化的可能较大，sql变动需要改变java代码。</li><li>使用preparedStatement向占位符号传参数存在硬编码，因为sql语句的where条件不一定，可能多也可能少，修改sql还要修改代码，系统不易维护。<br>对结果集解析存在硬编码（查询列名），sql变化导致解析代码变化，系统不易维护，如果能将数据库记录封装成pojo对象解析比较方便。</li></ol><h2 id="MyBatis架构"><a href="#MyBatis架构" class="headerlink" title="MyBatis架构"></a>MyBatis架构</h2><p>MyBatis架构如下图所示：</p><p><img src="/2018/12/11/MyBatis快速入门-第1部分/mybatis2.jpg" alt="mybatis2"></p><ol><li>mybatis配置：<br>SqlMapConfig.xml，此文件作为mybatis的全局配置文件，配置了mybatis的运行环境等信息。<br>mapper.xml文件即sql映射文件，文件中配置了操作数据库的sql语句。此文件需要在SqlMapConfig.xml中加载。</li><li>通过mybatis环境等配置信息构造SqlSessionFactory即会话工厂（单例）</li><li>由会话工厂创建sqlSession即会话，操作数据库需要通过sqlSession进行。</li><li>mybatis底层自定义了Executor执行器接口操作数据库，Executor接口有两个实现：一个是基本执行器、一个是缓存执行器。</li><li>Mapped Statement也是mybatis一个底层封装对象，它包装了mybatis配置信息及sql映射信息等。mapper.xml文件中一个sql对应一个Mapped Statement对象，sql的id即是Mapped statement的id。</li><li>Mapped Statement对sql执行输入参数进行定义，包括HashMap、基本类型、pojo，Executor通过Mapped Statement在执行sql前将输入的java对象映射至sql中，输入参数映射就是jdbc编程中对preparedStatement设置参数。</li><li>Mapped Statement对sql执行输出结果进行定义，包括HashMap、基本类型、pojo，Executor通过Mapped Statement在执行sql后将输出结果映射至java对象中，输出结果映射过程相当于jdbc编程中对结果的解析处理过程。</li></ol><h2 id="MyBatis入门程序"><a href="#MyBatis入门程序" class="headerlink" title="MyBatis入门程序"></a>MyBatis入门程序</h2><p>mybaits的代码由github.com管理，下载链接：<a href="https://github.com/mybatis/mybatis-3/releases" target="_blank" rel="noopener">mybatis-3</a>。</p><h3 id="工程搭建流程"><a href="#工程搭建流程" class="headerlink" title="工程搭建流程"></a>工程搭建流程</h3><ol><li>创建java工程：<br>使用eclipse创建java工程，jdk使用1.8。</li><li>加入jar包：<br>在src下新建普通文件夹lib，并加入mybatis核心包、依赖包、数据驱动包。</li><li><p>log4j.properties&lt;可选&gt;：<br>加log4j的配置文件是为了调试观察方便，mybatis默认使用log4j作为输出日志信息。在工程的src下创建源码文件夹config，并新建log4j.properties文件，内容如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Global logging configuration</span><br><span class="line">log4j.rootLogger=DEBUG, stdout</span><br><span class="line"># Console output...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%<span class="number">5</span>p [%t] - %m%n</span><br></pre></td></tr></table></figure></li><li><p>创建SqlMapConfig.xml，它是mybatis核心配置文件，文件的配置内容为数据源、事务管理。代码如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 根标签 配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"jdbc.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 环境(数据源信息) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 使用jdbc事务管理，事务由mybatis控制 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 数据库连接池，由mybatis管理 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.DriverClassName&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入的sql的映射文件的路径 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"product.xml"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 其中，DTD约束的本地文件加载配置流程如下：</p><ul><li>在eclipse中，Window/Preferences/XML Catalog/Add</li><li>Location：mybatis-3-config.dtd文件的路径</li><li>Key：-//mybatis.org//DTD Config 3.0//EN</li></ul></li><li><p>Product类：<br>Product类作为mybatis进行sql映射使用，Product类通常与数据库表对应，Product.java如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> price;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pnum;</span><br><span class="line">    <span class="keyword">private</span> String category;</span><br><span class="line">    </span><br><span class="line">    get/set/toString...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>sql映射文件：<br>在src下的config目录中创建sql映射文件Product.xml，代码如下：</p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- namespace代表的是该mapper文件的唯一标示 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"product"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mybatis进行输入映射使用parameterType指定参数的类型，resultType指定结果映射类型 #&#123;&#125;代表着一个占位符，如果是简单类型(int|string|float|double|date)的参数,可用id、value等来标示变量名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findProductById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"model.Product"</span>&gt;</span></span><br><span class="line">        select * from product where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 如果sql需要进行字符串拼接，则用$&#123;&#125;代表字符串拼接，#&#123;&#125;代表占位符?--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findProductByName"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.String"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">resultType</span>=<span class="string">"model.Product"</span>&gt;</span></span><br><span class="line">        select * from product where name like "%$&#123;value&#125;%"</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- mybatis进行输入参数映射时，能且只能传进一个参数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateProduct"</span> <span class="attr">parameterType</span>=<span class="string">"model.Product"</span>&gt;</span></span><br><span class="line">        update product set name=#&#123;name&#125; where name="miphone"</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insertProduct"</span> <span class="attr">parameterType</span>=<span class="string">"model.Product"</span>&gt;</span></span><br><span class="line">        insert into product (name,price) values (#&#123;name&#125;,#&#123;price&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteProduct"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>&gt;</span></span><br><span class="line">        delete from product where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中，namespace为命名空间，用于隔离sql语句，后面会讲另一层非常重要的作用。</p><ol start="7"><li>在核心配置文件中加载sql映射文件：<br>mybatis框架需要加载映射文件，将Product.xml添加在SqlMapConfig.xml，代码如下：</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入的sql的映射文件的路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"product.xml"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="需求及其代码实现"><a href="#需求及其代码实现" class="headerlink" title="需求及其代码实现"></a>需求及其代码实现</h3><ol><li><p>需求：</p><ul><li>根据id查询商品信息</li><li>根据名称模糊查询商品信息列表</li><li>添加商品</li><li>更新商品</li><li>删除商品</li></ul></li><li><p>实现代码：</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1：加载mybatis的核心配置文件SqlMapConfig.xml</span></span><br><span class="line">InputStream in = Resources.getResourceAsStream(<span class="string">"SqlMapConfig.xml"</span>);</span><br><span class="line"><span class="comment">// 2:创建会话工厂sqlSessionFactory(理解成连接池)</span></span><br><span class="line">SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line"><span class="comment">// 3:获取会话(相当于connection连接)</span></span><br><span class="line">SqlSession session = sqlSessionFactory.openSession();</span><br><span class="line"><span class="comment">// 4:操作数据库</span></span><br><span class="line"><span class="comment">// 4.1 根据id查询商品</span></span><br><span class="line"><span class="comment">// Product product = session.selectOne("product.findProductById", 15);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.2 根据名称模糊查询商品</span></span><br><span class="line"><span class="comment">// List&lt;Product&gt; list = session.selectList("product.findProductByName","phone");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//注意：mybatis的事务是非自动提交的，所以需要修改数据库中数据的增删改</span></span><br><span class="line"><span class="comment">//必须手动提交事务，否则数据修改不成功。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*// 4.3 更新商品名称</span></span><br><span class="line"><span class="comment"> * Product p = new Product(); p.setName("xiaomi");</span></span><br><span class="line"><span class="comment"> * session.update("product.updateProduct", p);</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*// 4.4 插入商品</span></span><br><span class="line"><span class="comment"> * Product p = new Product(); </span></span><br><span class="line"><span class="comment"> * p.setName("oppo");</span></span><br><span class="line"><span class="comment"> * p.setPrice(2399);</span></span><br><span class="line"><span class="comment"> * session.insert("product.insertProduct", p);</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.5 删除商品</span></span><br><span class="line">session.delete(<span class="string">"product.deleteProduct"</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增删改需手动提交事务，查询无需修改数据库则不需要提交事务</span></span><br><span class="line">session.commit();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5：输出结果</span></span><br><span class="line"><span class="comment">// System.out.println(list);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 6:释放资源</span></span><br><span class="line">session.close();</span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><h4 id="和"><a href="#和" class="headerlink" title="{}和${}"></a>{}和${}</h4><ul><li>#{} 表示一个占位符号，通过#{}可以实现preparedStatement向占位符中设置值，自动进行java类型和jdbc类型转换，#{}可以有效防止sql注入。 #{}可以接收简单类型值或pojo属性值。 如果parameterType传输单个简单类型值，#{}括号中可以是value或其它名称。</li><li>${} 表示拼接sql串，通过${}可以将parameterType 传入的内容拼接在sql中且不进行jdbc类型转换， ${}可以接收简单类型值或pojo属性值，如果parameterType传输单个简单类型值，${}括号中只能是value。</li></ul><h4 id="parameterType和resultType"><a href="#parameterType和resultType" class="headerlink" title="parameterType和resultType"></a>parameterType和resultType</h4><ul><li>parameterType：指定输入参数类型，mybatis通过ognl从输入对象中获取参数值拼接在sql中。</li><li>resultType：指定输出结果类型，mybatis将sql查询结果的一行记录映射为resultType指定类型的对象。</li></ul><h4 id="selectOne和selectList"><a href="#selectOne和selectList" class="headerlink" title="selectOne和selectList"></a>selectOne和selectList</h4><ul><li>selectOne查询一条记录，如果使用selectOne查询多条记录则抛出异常。</li><li>selectList可以查询一条或多条记录。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;JAVAEE开发的三大框架：ssm、ssh（前几年常用）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spring MVC：用来封装servlet编程的一个框架（struts2）；&lt;/li&gt;
&lt;li&gt;Spring：体系整合框架，其他框架的粘合剂；&lt;/li&gt;
&lt;li&gt;Mybatis：封装jd
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>MySQL多表操作</title>
    <link href="https://zhaoshengxu.github.io/2018/12/09/MySQL%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/"/>
    <id>https://zhaoshengxu.github.io/2018/12/09/MySQL多表操作/</id>
    <published>2018-12-09T15:51:55.000Z</published>
    <updated>2020-01-10T16:07:01.107Z</updated>
    
    <content type="html"><![CDATA[<h2 id="交叉连接"><a href="#交叉连接" class="headerlink" title="交叉连接"></a>交叉连接</h2><p>交叉连接(cross join)，又称笛卡尔连接(cartesian join)或叉乘(Product)，它是所有类型内连接的基础。它把表看作是行记录的集合，交叉连接即返回这两个集合的笛卡尔积。这其实等价于内连接的连接条件始终为”真”，或连接条件不存在。</p><p>笛卡尔积引用自数学，在数学中，两个集合X和Y的笛卡尔积（Cartesian product），又称直积。假设集合X={a,b}，集合Y={0,1,2}，则两个集合的笛卡尔积为{(a,0),(a,1),(a,2),(b,0),(b,1),(b,2)}。可以扩展到多个集合的情况。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--交叉连接</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">CROSS</span> <span class="keyword">JOIN</span> orders</span><br></pre></td></tr></table></figure><p><img src="/2018/12/09/MySQL多表操作/cross_join.jpg" alt="cross_join"></p><h2 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h2><h3 id="inner-join-on"><a href="#inner-join-on" class="headerlink" title="inner join on"></a>inner join on</h3><p>通过on后面的条件，将两张表中的数据过滤。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--inner join on</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">INNER</span> <span class="keyword">JOIN</span> orders <span class="keyword">ON</span> user.uid=orders.uid</span><br></pre></td></tr></table></figure></p><p><img src="/2018/12/09/MySQL多表操作/inner_join_on.jpg" alt="inner_join_on"></p><h3 id="inner-join-using："><a href="#inner-join-using：" class="headerlink" title="inner join using："></a>inner join using：</h3><p>通过指定两张表中比较的字段来进行等式消除迪卡尔积<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--inner join using</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">INNER</span> <span class="keyword">JOIN</span> orders <span class="keyword">USING</span>(uid)</span><br></pre></td></tr></table></figure></p><p><img src="/2018/12/09/MySQL多表操作/inner_join_using.jpg" alt="inner_join_using"></p><p>在inner join on和inner join using中，可以将inner省略，因为join默认就是内连接(inner join)，省略inner后的查询语句如下，效果与有inner是一样的。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--省略inner</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span>  <span class="keyword">JOIN</span> orders <span class="keyword">ON</span> user.uid=orders.uid;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span>  <span class="keyword">JOIN</span> orders <span class="keyword">USING</span>(uid);</span><br></pre></td></tr></table></figure></p><h3 id="隐式内连接"><a href="#隐式内连接" class="headerlink" title="隐式内连接"></a>隐式内连接</h3><p>在实际开发中，使用最多的一种内连接叫做隐式内连接，其实就是将inner join省略，也不在使用on进行条件过滤，而是直接使用where进行过滤，查询语句如下，结果与inner join on一样。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--隐式内连接</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span>,orders <span class="keyword">WHERE</span> user.uid=orders.uid;</span><br></pre></td></tr></table></figure></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>cross join 只是将两个表连接起来，产生笛卡尔积。</li><li>natural join 使用表中主外键关联来消除迪卡尔积。</li><li>inner join using 可省略inner，在using后直接书写比较的字段名称，注意要加括号。</li><li>inner join on 可省略inner,在on后面直接书写比较条件，通过条件来消除迪卡尔积。</li><li>隐式内连接，在开发应用比较多，可以省略inner join，表与表之间用逗号分开，通过where条件来消除迪卡尔积。</li></ul><h2 id="外链接"><a href="#外链接" class="headerlink" title="外链接"></a>外链接</h2><p>内连接只是将两个或多个表中有关联的数据集查询出来，而没有关联的数据（只有一个表中有，而另外一个表中没有的数据）则无法查询出来。如果在开发中需要将所有用户及其订单查询出来，如果用户没有订单，也要查询出用户信息。那么，使用内连接显然是做不到的，这时就需要使用外连接。</p><p>外连接并不要求连接的两表的每一条记录在对方表中都一条匹配的记录。连接表保留所有记录，甚至某条记录没有匹配的记录也要保留.，外连接可依据连接表保留左表、右表或全部表的行而进一步分为左外连接、右外连接和全连接。注意：mysql只支持左外连接与右外连接，而不支持全连接。</p><ul><li>左外连接：left outer join on 注意 outer 可以省略</li><li>右外连接：right outer join on 注意 outer可以省略</li></ul><p>执行下面sql语句查询结果如下:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> orders <span class="keyword">ON</span> user.uid=orders.uid;</span><br></pre></td></tr></table></figure></p><p><img src="/2018/12/09/MySQL多表操作/left_outer_join_on.jpg" alt="left_outer_join_on.jpg"></p><p>可以看出，即便mike和marry没有订单，其orders表中的数据以null显示出来。</p><p>上述sql语句使用的是左外连接，也就是说以user表为准，保留user表中所有数据，右表orders中没有关联的数据，以null关联显示出来。右外连接也是同理，执行下面sql语句查询结果如下:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> orders <span class="keyword">RIGHT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> <span class="keyword">user</span> <span class="keyword">ON</span> orders.uid=user.uid</span><br></pre></td></tr></table></figure></p><p><img src="/2018/12/09/MySQL多表操作/right_outer_join_on.jpg" alt="right_outer_join_on.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;交叉连接&quot;&gt;&lt;a href=&quot;#交叉连接&quot; class=&quot;headerlink&quot; title=&quot;交叉连接&quot;&gt;&lt;/a&gt;交叉连接&lt;/h2&gt;&lt;p&gt;交叉连接(cross join)，又称笛卡尔连接(cartesian join)或叉乘(Product)，它是所有类型内连接
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="MySQL" scheme="https://zhaoshengxu.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb小结</title>
    <link href="https://zhaoshengxu.github.io/2018/12/02/JavaWeb%E5%B0%8F%E7%BB%93/"/>
    <id>https://zhaoshengxu.github.io/2018/12/02/JavaWeb小结/</id>
    <published>2018-12-02T09:40:55.000Z</published>
    <updated>2020-01-10T16:07:20.788Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML：HTML快速入门"><a href="#HTML：HTML快速入门" class="headerlink" title="HTML：HTML快速入门"></a>HTML：<a href="http://zsx-cup.top/2018/11/01/HTML%E5%85%A5%E9%97%A8/" target="_blank" rel="noopener">HTML快速入门</a></h2><ul><li>HTML的定义及作用</li><li>HTML的基本标签及其属性</li><li>form表单，Get和Post请求的区别</li><li>元素的概念理解</li><li>布局标签（能看懂）</li><li>相对路径与绝对路径、内部资源和外部资源</li></ul><h2 id="CSS：CSS快速入门"><a href="#CSS：CSS快速入门" class="headerlink" title="CSS：CSS快速入门"></a>CSS：<a href="http://zsx-cup.top/2018/11/04/CSS%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/" target="_blank" rel="noopener">CSS快速入门</a></h2><ul><li>Css的定义及作用</li><li>Css的选择器</li><li>Css和HTML结合的三种方式，即CSS引入方式</li><li>Css的 常用样式</li><li>Css+div 基本布局</li></ul><h2 id="Javascript：JavaScript快速入门"><a href="#Javascript：JavaScript快速入门" class="headerlink" title="Javascript：JavaScript快速入门"></a>Javascript：<a href="http://zsx-cup.top/2018/11/06/JavaScript%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/" target="_blank" rel="noopener">JavaScript快速入门</a></h2><ul><li>Js的定义、作用及特点</li><li>Js和html结合的两种方式：外部使用与内部使用</li><li>Js的数据类型：原始数据类型和引用数据类型</li><li>Js的常用对象：Date、RegExp等</li><li>Js的流程控制：if，for</li><li>Js的方法声明、参数、返回值、调用</li><li>常用事件及其与方法的结合方式(重要)</li><li>Dom对象的常用方法</li><li>表单校验(重要)</li><li>二级级联(重要)</li></ul><h2 id="jQuery：jQuery快速入门-AJAX快速入门-动态代理"><a href="#jQuery：jQuery快速入门-AJAX快速入门-动态代理" class="headerlink" title="jQuery：jQuery快速入门|AJAX快速入门|动态代理"></a>jQuery：<a href="http://zsx-cup.top/2018/11/11/jQuery%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/" target="_blank" rel="noopener">jQuery快速入门</a>|<a href="http://zsx-cup.top/2018/11/29/AJAX%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/" target="_blank" rel="noopener">AJAX快速入门</a>|<a href="http://zsx-cup.top/2018/11/30/%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/" target="_blank" rel="noopener">动态代理</a></h2><ul><li>什么是JQuery</li><li>JQuery的页面加载</li><li>JQuery的常用选择器</li><li>JQuery的效果</li><li>JQuery的事件及事件绑定(重要)</li><li>JQuery的文档操作</li><li>JQuery的遍历</li><li>全局加载函数</li><li>页面加载函数</li><li>JQuery的Ajax(重要)</li><li>Jquery元素的对象(重要)</li></ul><h2 id="Bootstrap：Bootstrap快速入门"><a href="#Bootstrap：Bootstrap快速入门" class="headerlink" title="Bootstrap：Bootstrap快速入门"></a>Bootstrap：<a href="http://zsx-cup.top/2018/11/12/Bootstrap%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/" target="_blank" rel="noopener">Bootstrap快速入门</a></h2><ul><li>容器</li><li>栅格系统</li><li>会用，能看懂</li></ul><h2 id="数据库：MySQL数据库"><a href="#数据库：MySQL数据库" class="headerlink" title="数据库：MySQL数据库"></a>数据库：<a href="http://zsx-cup.top/2018/11/13/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93/" target="_blank" rel="noopener">MySQL数据库</a></h2><ul><li>数据库的增删改查(重要)</li><li>表的增删改查(重要)</li><li>表数据的增删改查(重要)</li><li>多表基本操作(重要)</li></ul><h2 id="JDBC：JDBC快速入门-数据库连接池-C3p0及事务"><a href="#JDBC：JDBC快速入门-数据库连接池-C3p0及事务" class="headerlink" title="JDBC：JDBC快速入门|数据库连接池|C3p0及事务"></a><strong>JDBC</strong>：<a href="http://zsx-cup.top/2018/11/17/JDBC%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/" target="_blank" rel="noopener">JDBC快速入门</a>|<a href="http://zsx-cup.top/2018/11/19/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/" target="_blank" rel="noopener">数据库连接池</a>|<a href="http://zsx-cup.top/2018/11/20/c3p0%E5%8F%8A%E4%BA%8B%E5%8A%A1/" target="_blank" rel="noopener">C3p0及事务</a></h2><ul><li>Jdbc定义及作用</li><li>Jdbc的开发步骤（重要）</li><li>配置文件配置jdbc的参数</li><li>读取配置文件</li><li>数据库连接池及其优点、原理</li><li>Dbcp数据库连接池的基本使用</li><li>C3p0数据库连接池的基本使用</li><li>阿帕奇的dbUtils的基本使用</li><li>阿帕奇的beanUtils的基本使用</li><li>事务的作用及其基本特性</li><li>Jdbc简单操作事务</li><li>事务不考虑隔离级别出现的问题</li><li>【注意依赖的jar包】</li></ul><h2 id="Tomcat：Tomcat"><a href="#Tomcat：Tomcat" class="headerlink" title="Tomcat：Tomcat"></a>Tomcat：<a href="http://zsx-cup.top/2018/11/21/Tomcat/" target="_blank" rel="noopener">Tomcat</a></h2><ul><li>什么是服务器，及常见的服务器</li><li>tomcat的目录结构（未掌握）</li><li>Tomcat和eclipse结合，基本配置</li><li>使用Tomcat创建项目，发布项目，访问资源</li><li>知道自己发布项目的具体位置</li></ul><h2 id="Servlet：Servlet-Servlet应用小案例-Xml解析及会话技术"><a href="#Servlet：Servlet-Servlet应用小案例-Xml解析及会话技术" class="headerlink" title="Servlet：Servlet|Servlet应用小案例|Xml解析及会话技术"></a>Servlet：<a href="http://zsx-cup.top/2018/11/22/Servlet/" target="_blank" rel="noopener">Servlet</a>|<a href="http://zsx-cup.top/2018/11/24/Servlet%E5%BA%94%E7%94%A8%E5%B0%8F%E6%A1%88%E4%BE%8B/" target="_blank" rel="noopener">Servlet应用小案例</a>|<a href="http://zsx-cup.top/2018/11/25/Xml%E8%A7%A3%E6%9E%90%E5%8F%8A%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF/" target="_blank" rel="noopener">Xml解析及会话技术</a></h2><ul><li>ServletConfig对象</li><li>ServletContext对象</li><li>HttpServletRequest对象</li><li>HttpServletResponse对象</li><li>HttpSession对象</li><li>Cookie对象</li><li>Filter（未学）</li><li>Listener（未学）</li></ul><p>【掌握页面传递参数到指定的servlet，servlet会接收页面的所有参数并操作数据库，将数据展示到指定页面】</p><h2 id="JSP：JSP快速入门-借助JSP实现注册-登录-查询-JSON快速入门"><a href="#JSP：JSP快速入门-借助JSP实现注册-登录-查询-JSON快速入门" class="headerlink" title="JSP：JSP快速入门|借助JSP实现注册|登录|查询|JSON快速入门"></a>JSP：<a href="http://zsx-cup.top/2018/11/26/JSP%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/" target="_blank" rel="noopener">JSP快速入门</a>|<a href="http://zsx-cup.top/2018/11/27/%E5%80%9F%E5%8A%A9JSP%E5%AE%9E%E7%8E%B0%E6%B3%A8%E5%86%8C-%E7%99%BB%E5%BD%95-%E6%9F%A5%E8%AF%A2/" target="_blank" rel="noopener">借助JSP实现注册|登录|查询</a>|<a href="http://zsx-cup.top/2018/11/28/JSON%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/" target="_blank" rel="noopener">JSON快速入门</a></h2><ul><li>JSP概述及其作用</li><li>基本语法</li><li>三大指令</li><li>JSP的九大内置对象</li><li>Web阶段的四大作用域</li><li>EL表达式、作用及其使用</li><li>EL的11个隐式对象</li><li>JSTL的两个标签：c:if; c:foreach</li></ul><h2 id="JavaWeb综合应用：商品管理"><a href="#JavaWeb综合应用：商品管理" class="headerlink" title="JavaWeb综合应用：商品管理"></a><a href="http://zsx-cup.top/2018/12/01/JavaWeb%E7%BB%BC%E5%90%88%E5%BA%94%E7%94%A8%EF%BC%9A%E5%95%86%E5%93%81%E7%AE%A1%E7%90%86/" target="_blank" rel="noopener">JavaWeb综合应用：商品管理</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HTML：HTML快速入门&quot;&gt;&lt;a href=&quot;#HTML：HTML快速入门&quot; class=&quot;headerlink&quot; title=&quot;HTML：HTML快速入门&quot;&gt;&lt;/a&gt;HTML：&lt;a href=&quot;http://zsx-cup.top/2018/11/01/HTM
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb综合应用：商品管理</title>
    <link href="https://zhaoshengxu.github.io/2018/12/01/JavaWeb%E7%BB%BC%E5%90%88%E5%BA%94%E7%94%A8%EF%BC%9A%E5%95%86%E5%93%81%E7%AE%A1%E7%90%86/"/>
    <id>https://zhaoshengxu.github.io/2018/12/01/JavaWeb综合应用：商品管理/</id>
    <published>2018-12-01T06:49:13.000Z</published>
    <updated>2020-01-10T16:07:05.427Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/12/01/JavaWeb综合应用：商品管理/JavaWeb.jpg" alt="JavaWeb"></p><p>基于一个商品信息展示页面，实现以下商品管理功能：</p><ol><li>查询所有商品；</li><li>根据商品名称模糊查询；</li><li>添加商品；</li><li>删除单个或多个商品；</li><li>修改商品；</li></ol><p>主要代码如下：</p><h3 id="主页面"><a href="#主页面" class="headerlink" title="主页面"></a>主页面</h3><h4 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-home"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"nav-label"</span>&gt;</span>商品管理<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fa arrow"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-second-level"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"J_menuItem"</span> <span class="attr">href</span>=<span class="string">"products.jsp"</span> <span class="attr">data-index</span>=<span class="string">"0"</span>&gt;</span>查询商品<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"J_menuItem"</span> <span class="attr">href</span>=<span class="string">"add.jsp"</span>&gt;</span>添加商品<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"J_menuItem"</span> <span class="attr">href</span>=<span class="string">"edit.jsp"</span>&gt;</span>修改商品<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="products-jsp"><a href="#products-jsp" class="headerlink" title="products.jsp"></a>products.jsp</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--商品模糊查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/webday12/searchProductByName"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入商品名"</span> <span class="attr">name</span>=<span class="string">"name"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-btn"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--商品模糊查询--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered"</span> <span class="attr">id</span>=<span class="string">"prodctId"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>商品名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>商品价格<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>商品类目<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>商品数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>商品描述<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/webday12/DeleteMore"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">"list"</span> <span class="attr">items</span>=<span class="string">"$&#123;productList &#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"$&#123;list.id &#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;list.name &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;list.price &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;list.category &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;list.pnum &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;list.description &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"Delete?id=$&#123;list.id &#125;"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span>|<span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">href</span>=<span class="string">"ShowEdit?id=$&#123;list.id &#125;"</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>删除多个<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    &amp;nbsp;</span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/webday12/Search"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>显示所有商品<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="add-jsp"><a href="#add-jsp" class="headerlink" title="add.jsp"></a>add.jsp</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal m-t"</span> <span class="attr">action</span>=<span class="string">"/webday12/AddProduct"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">id</span>=<span class="string">"signupForm"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-3 control-label"</span>&gt;</span>商品名称：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-3 control-label"</span>&gt;</span>商品价格：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"price"</span> <span class="attr">name</span>=<span class="string">"price"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-3 control-label"</span>&gt;</span>类目：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"category"</span> <span class="attr">name</span>=<span class="string">"category"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-3 control-label"</span>&gt;</span>数量：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"pnum"</span> <span class="attr">name</span>=<span class="string">"pnum"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-3 control-label"</span>&gt;</span>描述：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"description"</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-8 col-sm-offset-3"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-save"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> &amp;nbsp;&amp;nbsp;添加&amp;nbsp;&amp;nbsp; <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="edit-jsp"><a href="#edit-jsp" class="headerlink" title="edit.jsp"></a>edit.jsp</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal m-t"</span> <span class="attr">id</span>=<span class="string">"signupForm"</span>   <span class="attr">action</span>=<span class="string">"/webday12/DoEdit"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"$&#123;product.id &#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-3 control-label"</span>&gt;</span>商品名称：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"name"</span>   <span class="attr">value</span>=<span class="string">"$&#123;product.name &#125;"</span>  <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-3 control-label"</span>&gt;</span>商品价格：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"price"</span> <span class="attr">name</span>=<span class="string">"price"</span> <span class="attr">value</span>=<span class="string">"$&#123;product.price &#125;"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-3 control-label"</span>&gt;</span>类目：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"cate"</span> <span class="attr">name</span>=<span class="string">"category"</span> <span class="attr">value</span>=<span class="string">"$&#123;product.category &#125;"</span>  <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-3 control-label"</span>&gt;</span>数量：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"num"</span> <span class="attr">name</span>=<span class="string">"pnum"</span>  <span class="attr">value</span>=<span class="string">"$&#123;product.pnum &#125;"</span><span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-3 control-label"</span>&gt;</span>描述：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"desc"</span> <span class="attr">name</span>=<span class="string">"description"</span>  <span class="attr">value</span>=<span class="string">"$&#123;product.description &#125;"</span><span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-8 col-sm-offset-3"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-save"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> &amp;nbsp;&amp;nbsp;提交修改&amp;nbsp;&amp;nbsp; <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h3><h4 id="Search-java"><a href="#Search-java" class="headerlink" title="Search.java"></a>Search.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ProductService ps = <span class="keyword">new</span> ProductServiceImpl();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//查询所有商品</span></span><br><span class="line">    List&lt;Product&gt; productList = ps.searchProduct();</span><br><span class="line">    <span class="comment">//将查询结果保存到request域中</span></span><br><span class="line">    request.setAttribute(<span class="string">"productList"</span>, productList);</span><br><span class="line">    <span class="comment">//转发</span></span><br><span class="line">    request.getRequestDispatcher(<span class="string">"products.jsp"</span>).forward(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="searchProductByName-java"><a href="#searchProductByName-java" class="headerlink" title="searchProductByName.java"></a>searchProductByName.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ProductService ps = <span class="keyword">new</span> ProductServiceImpl();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//接收页面参数</span></span><br><span class="line">    String name = request.getParameter(<span class="string">"name"</span>);</span><br><span class="line">    <span class="comment">//查询所有商品</span></span><br><span class="line">    List&lt;Product&gt; productList = ps.searchProductByName(name);</span><br><span class="line">    <span class="comment">//将查询结果保存到request域中</span></span><br><span class="line">    request.setAttribute(<span class="string">"productList"</span>, productList);</span><br><span class="line">    <span class="comment">//转发</span></span><br><span class="line">    request.getRequestDispatcher(<span class="string">"products.jsp"</span>).forward(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="AddProduct-java"><a href="#AddProduct-java" class="headerlink" title="AddProduct.java"></a>AddProduct.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Product product = <span class="keyword">new</span> Product();</span><br><span class="line">ProductService ps = <span class="keyword">new</span> ProductServiceImpl();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 接收页面参数</span></span><br><span class="line">    Map&lt;String, String[]&gt; map = request.getParameterMap();</span><br><span class="line">    BeanUtils.populate(product, map);</span><br><span class="line">    <span class="comment">// 调用service</span></span><br><span class="line">    <span class="keyword">int</span> i = ps.addProduct(product);</span><br><span class="line">    <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;<span class="comment">// 添加成功，重定向至查询界面</span></span><br><span class="line">        response.sendRedirect(<span class="string">"/webday12/Search"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;<span class="comment">// 转发至商品添加页面</span></span><br><span class="line">        request.setAttribute(<span class="string">"product"</span>, product);</span><br><span class="line">        request.getRequestDispatcher(<span class="string">"add.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Delete-java"><a href="#Delete-java" class="headerlink" title="Delete.java"></a>Delete.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ProductService ps = <span class="keyword">new</span> ProductServiceImpl();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    String param = request.getParameter(<span class="string">"id"</span>);</span><br><span class="line">    <span class="keyword">int</span> i = ps.deleteProduct(param);</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;<span class="comment">//删除成功则重定向至商品查询展示页面</span></span><br><span class="line">        response.sendRedirect(<span class="string">"/webday12/Search"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="DeleteMore-java"><a href="#DeleteMore-java" class="headerlink" title="DeleteMore.java"></a>DeleteMore.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ProductService ps = <span class="keyword">new</span> ProductServiceImpl();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 接收页面参数</span></span><br><span class="line">    String[] ids = request.getParameterValues(<span class="string">"id"</span>);</span><br><span class="line">    <span class="comment">// 调用service删除数</span></span><br><span class="line">    <span class="keyword">int</span> i = ps.deleteMoreProduct(ids);</span><br><span class="line">    <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;<span class="comment">// 删除状态提示</span></span><br><span class="line">        response.getWriter().write(<span class="string">"删除成功，页面跳转中。。。"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        response.getWriter().write(<span class="string">"删除失败，，页面跳转中。。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 页面重定向至查询所有商品页面</span></span><br><span class="line">    response.sendRedirect(<span class="string">"/webday12/Search"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ShowEdit-java"><a href="#ShowEdit-java" class="headerlink" title="ShowEdit.java"></a>ShowEdit.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ProductService ps = <span class="keyword">new</span> ProductServiceImpl();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 接收页面参数</span></span><br><span class="line">    String id = request.getParameter(<span class="string">"id"</span>);</span><br><span class="line">    <span class="comment">// 调用service先根据id查询需要修改的商品</span></span><br><span class="line">    Product product = ps.getProductById(id);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != product) &#123;<span class="comment">// 查到商品，则保存到域中，并转发至修改商品信息页面</span></span><br><span class="line">        request.setAttribute(<span class="string">"product"</span>, product);</span><br><span class="line">        request.getRequestDispatcher(<span class="string">"edit.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="DoEdit-java"><a href="#DoEdit-java" class="headerlink" title="DoEdit.java"></a>DoEdit.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Product product = <span class="keyword">new</span> Product();</span><br><span class="line">ProductService ps = <span class="keyword">new</span> ProductServiceImpl();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 接收页面参数</span></span><br><span class="line">    Map&lt;String, String[]&gt; map = request.getParameterMap();</span><br><span class="line">    BeanUtils.populate(product, map);</span><br><span class="line">    <span class="comment">//调用service，修改商品信息</span></span><br><span class="line">    <span class="keyword">int</span> i = ps.editProduct(product);</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;<span class="comment">//如果修改成功，重定向至查询商品页面</span></span><br><span class="line">        response.sendRedirect(<span class="string">"/webday12/Search"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;<span class="comment">//如果修改失败，将重定向至查询商品页面</span></span><br><span class="line">        request.setAttribute(<span class="string">"product"</span>, product);</span><br><span class="line">        request.getRequestDispatcher(<span class="string">"edit.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><h4 id="ProductService-java"><a href="#ProductService-java" class="headerlink" title="ProductService.java"></a>ProductService.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//删除单个商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteProduct</span><span class="params">(String id)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">    <span class="comment">//删除多个商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteMoreProduct</span><span class="params">(String[] ids)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">    <span class="comment">//查询单个商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Product <span class="title">getProductById</span><span class="params">(String id)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">    <span class="comment">//修改商品信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">editProduct</span><span class="params">(Product product)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">    <span class="comment">//添加商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addProduct</span><span class="params">(Product product)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">    <span class="comment">//查询所有商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">searchProduct</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">    <span class="comment">//根据商品名称模糊查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">searchProductByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ProductServiceImpl-java"><a href="#ProductServiceImpl-java" class="headerlink" title="ProductServiceImpl.java"></a>ProductServiceImpl.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductServiceImpl</span> <span class="keyword">implements</span> <span class="title">ProductService</span> </span>&#123;</span><br><span class="line">    ProductDao pd = <span class="keyword">new</span> ProductDaoImpl();</span><br><span class="line">    <span class="comment">//删除单个商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteProduct</span><span class="params">(String id)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pd.deleteProduct(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询单个商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Product <span class="title">getProductById</span><span class="params">(String id)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pd.getProductById(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//修改商品信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">editProduct</span><span class="params">(Product product)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pd.editProduct(product);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//删除多个商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteMoreProduct</span><span class="params">(String[] ids)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pd.deleteMoreProduct(ids);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//添加商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addProduct</span><span class="params">(Product product)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pd.addProduct(product);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询所有商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">searchProduct</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pd.searchProduct();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//根据商品名称模糊查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">searchProductByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pd.searchProductByName(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Dao"><a href="#Dao" class="headerlink" title="Dao"></a>Dao</h3><h4 id="ProductDao-java"><a href="#ProductDao-java" class="headerlink" title="ProductDao.java"></a>ProductDao.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ProductDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 查询所有商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">searchProduct</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">    <span class="comment">// 根据商品名称模糊查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">searchProductByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">    <span class="comment">//根据id查询商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Product <span class="title">getProductById</span><span class="params">(String id)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">    <span class="comment">// 根据id删除单个商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteProduct</span><span class="params">(String id)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">    <span class="comment">// 根据id删除多个商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteMoreProduct</span><span class="params">(String[] ids)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">    <span class="comment">// 修改商品信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">editProduct</span><span class="params">(Product product)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">    <span class="comment">//添加商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addProduct</span><span class="params">(Product product)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ProductDaoImpl-java"><a href="#ProductDaoImpl-java" class="headerlink" title="ProductDaoImpl.java"></a>ProductDaoImpl.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductDaoImpl</span> <span class="keyword">implements</span> <span class="title">ProductDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 根据id删除单个商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteProduct</span><span class="params">(String id)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"delete from product where id=?"</span>;</span><br><span class="line">        <span class="keyword">int</span> i = runner.update(sql, id);</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//根据id查询商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Product <span class="title">getProductById</span><span class="params">(String id)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"select * from product where id=?"</span>;</span><br><span class="line">        Product product = runner.query(sql, <span class="keyword">new</span> BeanHandler&lt;Product&gt;(Product.class), id);</span><br><span class="line">        <span class="keyword">return</span> product;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 修改商品信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">editProduct</span><span class="params">(Product product)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"update product set name=?,price=?,pnum=?,category=?,description=? where id=?"</span>;</span><br><span class="line">        <span class="keyword">int</span> i = runner.update(sql, product.getName(), product.getPrice(), product.getPnum(), product.getCategory(),</span><br><span class="line">                product.getDescription(), product.getId());</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 根据id删除多个商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteMoreProduct</span><span class="params">(String[] ids)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"delete from product where id=?"</span>;</span><br><span class="line">        <span class="keyword">for</span> (String id : ids) &#123;</span><br><span class="line">            <span class="keyword">int</span> i = runner.update(sql, id);</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//添加商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addProduct</span><span class="params">(Product product)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"insert into product values(null,?,?,?,?,?)"</span>;</span><br><span class="line">        <span class="keyword">int</span> i = runner.update(sql, product.getName(), product.getPrice(), product.getCategory(), product.getPnum(),</span><br><span class="line">                product.getDescription());</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 查询所有商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">searchProduct</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"select * from product"</span>;</span><br><span class="line">        List&lt;Product&gt; productList = runner.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Product&gt;(Product.class));</span><br><span class="line">        <span class="keyword">return</span> productList;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 根据商品名称模糊查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">searchProductByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"select * from product where name like ?"</span>;</span><br><span class="line">        String nname = <span class="string">"%"</span> + name + <span class="string">"%"</span>;</span><br><span class="line">        List&lt;Product&gt; productList = runner.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Product&gt;(Product.class), nname);</span><br><span class="line">        <span class="keyword">return</span> productList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Product对象"><a href="#Product对象" class="headerlink" title="Product对象"></a>Product对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> price;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pnum;</span><br><span class="line">    <span class="keyword">private</span> String category;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> String <span class="title">getDescription</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">setDescription</span><span class="params">(String description)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.description = description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">double</span> <span class="title">getPrice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">setPrice</span><span class="params">(<span class="keyword">double</span> price)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">getPnum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pnum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">setPnum</span><span class="params">(<span class="keyword">int</span> pnum)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pnum = pnum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> String <span class="title">getCategory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> category;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">setCategory</span><span class="params">(String category)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.category = category;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Product [id="</span> + id + <span class="string">", name="</span> + name + <span class="string">", description="</span> + description + <span class="string">", price="</span> + price + <span class="string">", pnum="</span></span><br><span class="line">                + pnum + <span class="string">", category="</span> + category + <span class="string">"]"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2018/12/01/JavaWeb综合应用：商品管理/JavaWeb.jpg&quot; alt=&quot;JavaWeb&quot;&gt;&lt;/p&gt;
&lt;p&gt;基于一个商品信息展示页面，实现以下商品管理功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;查询所有商品；&lt;/li&gt;
&lt;li&gt;根据商品名称模糊
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>动态代理</title>
    <link href="https://zhaoshengxu.github.io/2018/11/30/%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/"/>
    <id>https://zhaoshengxu.github.io/2018/11/30/动态代理/</id>
    <published>2018-11-29T16:39:56.000Z</published>
    <updated>2020-01-10T16:05:15.571Z</updated>
    
    <content type="html"><![CDATA[<h2 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h2><p>动态代理的目的只有一个，即对类的方法进行增强。</p><h3 id="装饰模式"><a href="#装饰模式" class="headerlink" title="装饰模式"></a>装饰模式</h3><blockquote><p>是你，还有你，一切拜托你。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Inter</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要增强的类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Monkey</span> <span class="keyword">implements</span> <span class="title">Inter</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"play"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增强后的类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EnMonkey</span> <span class="keyword">implements</span> <span class="title">Inter</span> </span>&#123;</span><br><span class="line">    Monkey monkey;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EnMonkey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EnMonkey</span><span class="params">(Monkey monkey)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.monkey = monkey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"eat"</span>);</span><br><span class="line">        monkey.play();</span><br><span class="line">        System.out.println(<span class="string">"sleep"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//有你(Monkey)，还有你(EnMonkey)，一切拜托你(monkey)</span></span><br><span class="line">        EnMonkey monkey = <span class="keyword">new</span> EnMonkey(<span class="keyword">new</span> Monkey());</span><br><span class="line">        monkey.play();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="动态代理模式"><a href="#动态代理模式" class="headerlink" title="动态代理模式"></a>动态代理模式</h3><p>动态代理，即对一个类进行动态的增强。</p><ol><li>被代理的类必须实现接口；</li><li>创建一个实现InvocationHandler接口的实现类；</li><li>重写方法。使用Method对象调用invoke(代理对象的实例)方法，要增强的功能 在invoke方法 的前后；</li><li>创建代理对象，Proxy.newProxyInstance()，并传入三个参数：<ul><li>类加载器</li><li>代理类的接口</li><li>实现InvocationHandler接口的实现类</li></ul></li></ol><h4 id="动态代理代码示例"><a href="#动态代理代码示例" class="headerlink" title="动态代理代码示例"></a>动态代理代码示例</h4><p>【被代理的对象，即想要增强的类】<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类实现的接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updata</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//被代理的对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"调用jdbc操作数据库  add"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updata</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"调用jdbc操作数据库  update"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>【代理对象，即增强后的类】<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicProxy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//被代理对象，即目标对象</span></span><br><span class="line">        UserDaoImpl userDaoImpl = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">        <span class="comment">// 生成动态代理</span></span><br><span class="line">        UserDao userDao = (UserDao)Proxy.newProxyInstance(DynamicProxy.class.getClassLoader(), UserDaoImpl.class.getInterfaces(), <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"开启事务"</span>);</span><br><span class="line">                Object obj = method.invoke(userDaoImpl, args);</span><br><span class="line">                System.out.println(<span class="string">"关闭事务"</span>);</span><br><span class="line">                <span class="keyword">return</span> obj;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//调用方法，测试</span></span><br><span class="line">        userDao.add();</span><br><span class="line">        System.out.println(<span class="string">"-----------"</span>);</span><br><span class="line">        userDao.updata();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="动态代理代码改造"><a href="#动态代理代码改造" class="headerlink" title="动态代理代码改造"></a>动态代理代码改造</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyFactory</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line">    Transfer trans = <span class="keyword">new</span> Transfer();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//被增强的类</span></span><br><span class="line">    Object obj;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ProxyFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ProxyFactory</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.obj = obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于增强方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        <span class="comment">//prefix();</span></span><br><span class="line">        trans.open();</span><br><span class="line">        Object object = method.invoke(obj, args);</span><br><span class="line">        <span class="comment">//suffix();</span></span><br><span class="line">        trans.close();</span><br><span class="line">        <span class="keyword">return</span> object;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成代理对象</span></span><br><span class="line"><span class="comment">     * 参数:</span></span><br><span class="line"><span class="comment">     * 1.类加载器</span></span><br><span class="line"><span class="comment">     * 2.被代理对象实现的接口，必须实现接口</span></span><br><span class="line"><span class="comment">     * 3.实现InvocationHandler接口的实现类，当前类已实现</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 代理对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getProxy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Proxy.newProxyInstance(ProxyFactory.class.getClassLoader(), obj.getClass().getInterfaces(), <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">prefix</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"方法执行前。。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">suffix</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"方法执行后。。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用于方法增强的类Transfer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Transfer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"开启事务"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"关闭事务"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 被代理对象，目标对象</span></span><br><span class="line">        ProxyFactory proxyFactory = <span class="keyword">new</span> ProxyFactory(<span class="keyword">new</span> UserDaoImpl());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成代理对象</span></span><br><span class="line">        UserDao userDao = (UserDao) proxyFactory.getProxy();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用方法</span></span><br><span class="line">        userDao.add();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;动态代理&quot;&gt;&lt;a href=&quot;#动态代理&quot; class=&quot;headerlink&quot; title=&quot;动态代理&quot;&gt;&lt;/a&gt;动态代理&lt;/h2&gt;&lt;p&gt;动态代理的目的只有一个，即对类的方法进行增强。&lt;/p&gt;
&lt;h3 id=&quot;装饰模式&quot;&gt;&lt;a href=&quot;#装饰模式&quot; clas
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>AJAX快速入门</title>
    <link href="https://zhaoshengxu.github.io/2018/11/29/AJAX%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <id>https://zhaoshengxu.github.io/2018/11/29/AJAX快速入门/</id>
    <published>2018-11-29T11:39:41.000Z</published>
    <updated>2020-01-10T16:05:01.668Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AJAX快速入门"><a href="#AJAX快速入门" class="headerlink" title="AJAX快速入门"></a>AJAX快速入门</h2><blockquote><p>Ajax 即“Asynchronous Javascript And XML”（异步 JavaScript 和 XML），是指一种创建交互式网页应用的网页开发技术。<br>Ajax 用于创建快速动态网页，通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新，即在无需重新加载整个网页的情况下，能够更新部分网页。</p></blockquote><h3 id="同步与异步"><a href="#同步与异步" class="headerlink" title="同步与异步"></a>同步与异步</h3><ul><li>同步现象：客户端发送请求到服务器端，当服务器返回响应之前，客户端都处于等待，即卡死状态；</li><li>异步现象：客户端发送请求到服务器端，无论服务器是否返回响应，客户端都可以随意做其他事情，不会被卡死。</li></ul><h3 id="Ajax原理"><a href="#Ajax原理" class="headerlink" title="Ajax原理"></a>Ajax原理</h3><p>页面发起请求，会将请求发送给浏览器内核中的Ajax引擎，Ajax引擎会提交请求到    服务器端，在这段时间里，客户端可以任意进行任意操作，直到服务器端将数据返回   给Ajax引擎后，会触发你设置的事件，从而执行自定义的js逻辑代码完成某种页面功能。</p><p>jQuery对js原生的ajax进行了封装，封装后的ajax的操作方法更简洁，功能更强大。</p><h3 id="get-url-data-callback-type"><a href="#get-url-data-callback-type" class="headerlink" title="$.get(url, [data], [callback], [type])"></a>$.get(url, [data], [callback], [type])</h3><p>$.get()和$.post()所需的4个参数均为：</p><ol><li>URL，请求的地址</li><li>携带的数据，json格式</li><li>请求成功时的回调函数，参数是请求成功返回的数据</li><li>接收数据的解析方式，如text、json、html</li></ol><p>需要注意的是，ajax不接收畸形json字符串：</p><ol><li>畸形json字符串：”{‘name’:’畸形json字符串’}”</li><li>标准的json字符串：<ul><li>“{\”name\”:\”标准的json字符串\”}”，\为转义符号）</li><li>‘{“name”:”标准的json字符串”}’， java不允许单引号</li></ul></li></ol><p>html页面代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        Name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"acc"</span> <span class="attr">name</span>=<span class="string">"account"</span> <span class="attr">onblur</span>=<span class="string">"checkName()"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.8.3.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function checkName() &#123;</span></span><br><span class="line"><span class="undefined">        $.get(</span></span><br><span class="line"><span class="undefined">        //1.url</span></span><br><span class="line"><span class="undefined">        "http://localhost:8080/webday11/Register",</span></span><br><span class="line"><span class="undefined">        //2. 请求携带的参数 ，json格式</span></span><br><span class="line"><span class="undefined">        &#123;</span></span><br><span class="line"><span class="undefined">            "name" : $("#acc").val()</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        //3.请求成功时的回调函数，参数是请求成功返回的数据</span></span><br><span class="line"><span class="undefined">        function(data) &#123;</span></span><br><span class="line"><span class="undefined">            //var json = eval('(' + data + ')') //当格式是"text"时使用</span></span><br><span class="line"><span class="undefined">            alert(data.name);</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        //4. 告诉浏览器处理数据的格式：text、json、html</span></span><br><span class="line"><span class="undefined">        //"text"</span></span><br><span class="line"><span class="undefined">        "json")</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>servlet代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接收页面参数</span></span><br><span class="line">String name = request.getParameter(<span class="string">"name"</span>);</span><br><span class="line">System.out.println(name);</span><br><span class="line"><span class="comment">//创建User对象</span></span><br><span class="line">User user = <span class="keyword">new</span> User(name,<span class="string">"123"</span>);</span><br><span class="line"><span class="comment">//将User对象转换为json字符串</span></span><br><span class="line">String str = JSON.toJSONString(user);</span><br><span class="line"><span class="comment">//向页面响应json字符串</span></span><br><span class="line">response.getWriter().println(<span class="string">"&#123;\"name\":\"标准的json字符串\"&#125;"</span>);</span><br></pre></td></tr></table></figure></p><h3 id="post-url-data-callback-type"><a href="#post-url-data-callback-type" class="headerlink" title="$.post(url, [data], [callback], [type])"></a>$.post(url, [data], [callback], [type])</h3><p>代码示例：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        Name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"acc"</span> <span class="attr">name</span>=<span class="string">"account"</span> <span class="attr">onblur</span>=<span class="string">"checkName()"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.8.3.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function checkName() &#123;</span></span><br><span class="line"><span class="undefined">        $.post(</span></span><br><span class="line"><span class="undefined">        //1.url</span></span><br><span class="line"><span class="undefined">        "http://localhost:8080/webday11/Register",</span></span><br><span class="line"><span class="undefined">        //2. 请求携带的参数 ，json格式</span></span><br><span class="line"><span class="undefined">        &#123;</span></span><br><span class="line"><span class="undefined">            "name" : $("#acc").val()</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        //3.请求成功时的回调函数，参数是请求成功返回的数据</span></span><br><span class="line"><span class="undefined">        function(data) &#123;</span></span><br><span class="line"><span class="undefined">            //var json = eval('(' + data + ')') //当格式是"text"时使用</span></span><br><span class="line"><span class="undefined">            alert(data.name);</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        //4. 告诉浏览器处理数据的格式：text、json、html</span></span><br><span class="line"><span class="undefined">        //"text"</span></span><br><span class="line"><span class="undefined">        "json")</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="ajax-url-val1-data-val2-type-val3…"><a href="#ajax-url-val1-data-val2-type-val3…" class="headerlink" title="$.ajax({url:val1,data:val2,type:val3…})"></a>$.ajax({url:val1,data:val2,type:val3…})</h3><p>$.ajax()常用的参数为：</p><ol><li>url：请求的地址</li><li>data：请求携带的数据，json</li><li>type：请求类型，”get”、”post”</li><li>success：请求成功时的回调函数，参数是请求成功返回的数据</li><li>error：请求失败时的回调函数，参数是请求失败返回的数据</li><li>dataType：返回数据的解析方式</li></ol><p>代码示例：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.8.3.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function checkName() &#123;    </span></span><br><span class="line"><span class="undefined">        $.ajax(&#123;</span></span><br><span class="line"><span class="undefined">        url:"http://localhost:8080/webday11/Register",</span></span><br><span class="line"><span class="undefined">        data:&#123;"name": $("#acc").val()&#125;,</span></span><br><span class="line"><span class="undefined">        type:"post",</span></span><br><span class="line"><span class="undefined">        success:function(data)&#123;</span></span><br><span class="line"><span class="undefined">            alert(data.name);</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        error:function(data)&#123;</span></span><br><span class="line"><span class="undefined">            alert("error");</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        dataType:"json"</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="ajax应用：判断用户名是否存在"><a href="#ajax应用：判断用户名是否存在" class="headerlink" title="ajax应用：判断用户名是否存在"></a>ajax应用：判断用户名是否存在</h3><p>步骤分析：</p><ol><li>HTML页面：发送ajax，携带数据</li><li>servlet：接收页面参数，调用service</li><li>service：调用dao</li><li>dao：操作数据库</li></ol><p>代码示例：</p><ol><li><p>html页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        Name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"acc"</span> <span class="attr">name</span>=<span class="string">"account"</span> <span class="attr">onblur</span>=<span class="string">"checkName()"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"span"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.8.3.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function checkName() &#123;</span></span><br><span class="line"><span class="undefined">        $.ajax(&#123;</span></span><br><span class="line"><span class="undefined">        url:"http://localhost:8080/webday11/Register",</span></span><br><span class="line"><span class="undefined">        data:&#123;"name": $("#acc").val()&#125;,</span></span><br><span class="line"><span class="undefined">        type:"post",</span></span><br><span class="line"><span class="undefined">        success:function(data)&#123;</span></span><br><span class="line"><span class="undefined">            //alert(data.name);</span></span><br><span class="line"><span class="undefined">            $("#span").html(data);</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        error:function(data)&#123;</span></span><br><span class="line"><span class="undefined">            alert("error");</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        //dataType:"json"</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>servlet：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 接收页面参数</span></span><br><span class="line">    String name = request.getParameter(<span class="string">"name"</span>);</span><br><span class="line">    <span class="comment">// 调用service</span></span><br><span class="line">    User user = service.getUserByName(name);</span><br><span class="line">    <span class="comment">// 处理返回结果</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == user) &#123;</span><br><span class="line">        response.getWriter().write(<span class="string">"此用户名可用"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        response.getWriter().write(<span class="string">"此用户名不可用"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>service接口及实现类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//service接口及实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUserByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//service实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    UserDao dao = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUserByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.getUserByName(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>dao接口及实现类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dao接口及实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUserByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//dao实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUserByName</span><span class="params">(String name)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"select * from user2 where name=?"</span>;</span><br><span class="line">        User user = runner.query(sql, <span class="keyword">new</span> BeanHandler&lt;User&gt;(User.class), name);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="请求后台并传递参数的三种方式"><a href="#请求后台并传递参数的三种方式" class="headerlink" title="请求后台并传递参数的三种方式"></a>请求后台并传递参数的三种方式</h3><p>请求后台并传递参数的三种方式：</p><ol><li>form表单</li><li>超链接</li><li>ajax<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- form表单 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/webday11/Param"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 超链接 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://localhost:8080/webday11/Param?name=linda"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- ajax --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">id</span>=<span class="string">"ajax"</span>&gt;</span>Ajax<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.8.3.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    $(function() &#123;</span></span><br><span class="line"><span class="undefined">        $("#ajax").click(function()&#123;</span></span><br><span class="line"><span class="undefined">            $.post(</span></span><br><span class="line"><span class="undefined">                    "/webday11/Param",</span></span><br><span class="line"><span class="undefined">                    &#123;"name":"mike"&#125;,</span></span><br><span class="line"><span class="undefined">            )</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;AJAX快速入门&quot;&gt;&lt;a href=&quot;#AJAX快速入门&quot; class=&quot;headerlink&quot; title=&quot;AJAX快速入门&quot;&gt;&lt;/a&gt;AJAX快速入门&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Ajax 即“Asynchronous Javascript An
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>JSON快速入门</title>
    <link href="https://zhaoshengxu.github.io/2018/11/28/JSON%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <id>https://zhaoshengxu.github.io/2018/11/28/JSON快速入门/</id>
    <published>2018-11-28T05:02:27.000Z</published>
    <updated>2020-01-10T16:07:30.038Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>JSON(JavaScript Object Notation, JS 对象简谱) 是一种轻量级的数据交换格式。它基于 ECMAScript (欧洲计算机协会制定的js规范)的一个子集，采用完全独立于编程语言的文本格式来存储和表示数据。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。</p></blockquote><h3 id="json数据格式"><a href="#json数据格式" class="headerlink" title="json数据格式"></a>json数据格式</h3><p>json有两种格式：</p><ol><li>对象格式：{“key1”:obj,”key2”:obj,”key3”:obj…}</li><li>数组/集合格式：[obj,obj,obj…]</li></ol><p>代码示例：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    //1. 对象格式</span></span><br><span class="line"><span class="undefined">    var j1 = &#123;"name": "linda1", "password" : "123"&#125;;</span></span><br><span class="line"><span class="undefined">    //alert(j1.name+"---"+j1.password);</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">    //2. list集合格式</span></span><br><span class="line"><span class="undefined">    var j2 = [ &#123;"name" : "linda1","password" : "123"&#125;, </span></span><br><span class="line"><span class="undefined">               &#123;"name" : "linda2","password" : "123"&#125;, </span></span><br><span class="line"><span class="undefined">               &#123;"name" : "linda3","password" : "123"&#125;</span></span><br><span class="line"><span class="undefined">               ]</span></span><br><span class="line"><span class="undefined">    //alert(j2[0].name);</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">    //3. map集合格式</span></span><br><span class="line"><span class="undefined">    var j3 = &#123; "name":"linda",</span></span><br><span class="line"><span class="undefined">                "user1": &#123;"name" : "linda1","password" : "123"&#125;, </span></span><br><span class="line"><span class="undefined">                "user2":[&#123;"name" : "mike1","password" : "123"&#125;,</span></span><br><span class="line"><span class="undefined">                        &#123;"name" : "mike2","password" : "123"&#125;]</span></span><br><span class="line"><span class="undefined">                &#125;;</span></span><br><span class="line"><span class="undefined">    //alert(j3.name);</span></span><br><span class="line"><span class="undefined">    //alert(j3.user1.name);</span></span><br><span class="line"><span class="undefined">    //alert(j3.user2[0].name);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="Json数据解析"><a href="#Json数据解析" class="headerlink" title="Json数据解析"></a>Json数据解析</h3><ol><li>json对象转换为json字符串：Eval()函数，JSON.parse(obj)；</li><li>json字符串转换为json对象：JSON.toJSONString(obj)。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">scrip</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.8.3.min.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    //jason字符串转json对象：Eval()函数js原生函数</span></span><br><span class="line"><span class="undefined">    var str = "&#123;'name':'lisa'&#125;";</span></span><br><span class="line"><span class="undefined">    var j4 = eval('(' + str + ')');</span></span><br><span class="line"><span class="undefined">    //alert(j4.name);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//jason字符串转json对象：JSON.parse(obj)</span></span><br><span class="line">String str = <span class="string">"&#123;'name':'lisa'&#125;"</span>;</span><br><span class="line">Object j5 = JSON.parse(str);</span><br><span class="line">System.out.println(j5);</span><br><span class="line"></span><br><span class="line"><span class="comment">//json对象转换为json字符串：JSON.toJSONString(obj)</span></span><br><span class="line">String str2 = JSON.toJSONString(j5);</span><br><span class="line">System.out.println(str2);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;JSON(JavaScript Object Notation, JS 对象简谱) 是一种轻量级的数据交换格式。它基于 ECMAScript (欧洲计算机协会制定的js规范)的一个子集，采用完全独立于编程语言的文本格式来存储和表示数据。简洁和清晰的
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>借助JSP实现注册|登录|查询</title>
    <link href="https://zhaoshengxu.github.io/2018/11/27/%E5%80%9F%E5%8A%A9JSP%E5%AE%9E%E7%8E%B0%E6%B3%A8%E5%86%8C-%E7%99%BB%E5%BD%95-%E6%9F%A5%E8%AF%A2/"/>
    <id>https://zhaoshengxu.github.io/2018/11/27/借助JSP实现注册-登录-查询/</id>
    <published>2018-11-27T15:46:39.000Z</published>
    <updated>2020-01-10T16:07:36.298Z</updated>
    
    <content type="html"><![CDATA[<p>需求：实现登录、注册、商品的查询、退出登录<br>要求：三层代码分离（web/service/dao）, mvc, jsp</p><h3 id="实现注册功能"><a href="#实现注册功能" class="headerlink" title="实现注册功能"></a>实现注册功能</h3><p>servlet代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">UserService service = <span class="keyword">new</span> UserService();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 接收页面参数</span></span><br><span class="line">    String name = request.getParameter(<span class="string">"name"</span>);</span><br><span class="line">    String password = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">    User user = <span class="keyword">new</span> User(name, password);</span><br><span class="line">    <span class="comment">// 注册返回结果</span></span><br><span class="line">    <span class="keyword">int</span> register = service.register(user);</span><br><span class="line">    <span class="comment">// 将返回结果存放至request域中</span></span><br><span class="line">    request.setAttribute(<span class="string">"register"</span>, register);</span><br><span class="line">    <span class="keyword">if</span> (register == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 转发</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"login.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        response.getWriter().println(<span class="string">"服务器开小车喽，请客官稍后重试。。。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>jsp代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"/webday10/RegisterServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;Name:&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type="text" name="name"&gt;&lt;/td&gt;&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;Password:&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type="password" name="password"&gt;&lt;/td&gt;&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &lt;button type="submit"&gt;Submit&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><h3 id="实现登录功能"><a href="#实现登录功能" class="headerlink" title="实现登录功能"></a>实现登录功能</h3><p>servlet代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">UserService service = <span class="keyword">new</span> UserService();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//接收页面参数</span></span><br><span class="line">    String name = request.getParameter(<span class="string">"name"</span>);</span><br><span class="line">    String password = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">    User user = <span class="keyword">new</span> User(name, password);</span><br><span class="line">    <span class="comment">//登录返回结果</span></span><br><span class="line">    User login = service.login(user);</span><br><span class="line">    <span class="comment">// 将返回结果存放至request域中</span></span><br><span class="line">    request.setAttribute(<span class="string">"login"</span>, login);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">null</span>==login)&#123;</span><br><span class="line">        <span class="comment">//转发至注册页面</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"register.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//转发至查询页面</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"search.jsp"</span>).forward(request, response);</span><br><span class="line">    &#125;   </span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>jsp代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"/webday10/LoginServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;Name:&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type="text" name="name"&gt;&lt;/td&gt;&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;Password:&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type="password" name="password"&gt;&lt;/td&gt;&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &lt;button type="submit"&gt;Submit&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><h3 id="实现查询功能"><a href="#实现查询功能" class="headerlink" title="实现查询功能"></a>实现查询功能</h3><p>servlet代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">UserService service = <span class="keyword">new</span> UserService();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 接收页面参数</span></span><br><span class="line">    String keyword = request.getParameter(<span class="string">"keyword"</span>);</span><br><span class="line">    <span class="comment">// 商品查询数据</span></span><br><span class="line">    List&lt;Product&gt; plist;</span><br><span class="line">    plist = service.searchProduct(keyword);</span><br><span class="line">    <span class="comment">// 将返回结果存放至request域中</span></span><br><span class="line">    request.setAttribute(<span class="string">"plist"</span>, plist);</span><br><span class="line">    <span class="comment">// 转发</span></span><br><span class="line">    request.getRequestDispatcher(<span class="string">"search.jsp"</span>).forward(request, response);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>jsp代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=<span class="string">"1px"</span> cellspacing=<span class="string">"0"</span> width=<span class="string">"500px"</span> align=<span class="string">"center"</span>&gt;</span><br><span class="line">    &lt;caption&gt;Product List&lt;/caption&gt;</span><br><span class="line">    &lt;tr align=<span class="string">"center"</span>&gt;</span><br><span class="line">        &lt;th&gt;Name&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;Description&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;c:forEach items=<span class="string">"$&#123;plist &#125;"</span> <span class="keyword">var</span>=<span class="string">"product"</span>&gt;</span><br><span class="line">        &lt;tr align=<span class="string">"center"</span>&gt;</span><br><span class="line">            &lt;td&gt;$&#123;product.name &#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;product.description &#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure></p><h3 id="Service和Dao代码"><a href="#Service和Dao代码" class="headerlink" title="Service和Dao代码"></a>Service和Dao代码</h3><p>Service代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    UserDao dao = <span class="keyword">new</span> UserDao();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 新用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 注册状态，成功返回1，失败返回0</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">register</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.register(user);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 登录用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 登录状态，返回登录用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.login(user);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商品信息查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keyword 关键词</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 商品信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">searchProduct</span><span class="params">(String keyword)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.searchProduct(keyword);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Dao代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 新用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 注册状态，成功返回1，失败返回0</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">register</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"insert into user2 values(null,? ,?)"</span>;</span><br><span class="line">        <span class="keyword">int</span> i = runner.update(sql,user.getName(),user.getPassword());</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;   </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 登录用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 登录状态，返回登录用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"select * from user2 where name=? and password=?"</span>;</span><br><span class="line">        User user2 = runner.query(sql, <span class="keyword">new</span> BeanHandler&lt;User&gt;(User.class), user.getName(), user.getPassword());</span><br><span class="line">        <span class="keyword">return</span> user2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商品信息查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keyword 关键词</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 商品信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">searchProduct</span><span class="params">(String keyword)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"select * from product where name like ?"</span>;</span><br><span class="line">        String keyword2 = <span class="string">"%"</span> + keyword + <span class="string">"%"</span>;</span><br><span class="line">        List&lt;Product&gt; plist = runner.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Product&gt;(Product.class), keyword2);</span><br><span class="line">        <span class="keyword">return</span> plist;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;需求：实现登录、注册、商品的查询、退出登录&lt;br&gt;要求：三层代码分离（web/service/dao）, mvc, jsp&lt;/p&gt;
&lt;h3 id=&quot;实现注册功能&quot;&gt;&lt;a href=&quot;#实现注册功能&quot; class=&quot;headerlink&quot; title=&quot;实现注册功能&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>JSP快速入门</title>
    <link href="https://zhaoshengxu.github.io/2018/11/26/JSP%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <id>https://zhaoshengxu.github.io/2018/11/26/JSP快速入门/</id>
    <published>2018-11-26T11:02:46.000Z</published>
    <updated>2020-01-10T16:04:42.619Z</updated>
    
    <content type="html"><![CDATA[<p>JSP(Java Server Pages)，实质上就是servlet，用于开发动态web资源。JSP其实就是在html中写Java代码，即JSP = JAVA+HTML。</p><p>JSP动态页面技术的执行过程（原理）：</p><pre><code>JSP--&gt;翻译成servlet（.Java）--&gt;编译成（.class）--&gt;初始化--&gt;实例化--&gt;服务--&gt;销毁所以第一次访问JSP时可能会比较慢。</code></pre><h2 id="JSP快速入门"><a href="#JSP快速入门" class="headerlink" title="JSP快速入门"></a>JSP快速入门</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"Java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!-- 导包 --&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.*"</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;my jsp&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 写的都方法体的内容 --&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="comment">//获取当前时间</span></span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        String date2 = date.toLocaleString();</span><br><span class="line">        <span class="comment">//response.getWriter().println(date2);</span></span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;%=date2%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- <span class="keyword">for</span>循环 --&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h1&gt;winter is coming!&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%</span><br><span class="line">        &#125;</span><br><span class="line">    %&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="JSP的基本语法"><a href="#JSP的基本语法" class="headerlink" title="JSP的基本语法"></a>JSP的基本语法</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ol><li><p>html的注释</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- html的注释 --&gt;</span><br></pre></td></tr></table></figure></li><li><p>jsp注释</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- &lt;%</span><br><span class="line"><span class="comment">//java注释</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">2</span>;</span><br><span class="line">%&gt; --%&gt;</span><br></pre></td></tr></table></figure></li><li><p>jsp小脚本可使用java注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//java单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">java多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="jsp小脚本"><a href="#jsp小脚本" class="headerlink" title="jsp小脚本"></a>jsp小脚本</h3><ol><li>&lt;% 此处写java代码 %&gt;</li><li>&lt;%=要输出的内容%&gt;</li><li>&lt;% 声明局部变量 %&gt;</li><li>&lt;%! 声明全局变量%&gt;</li></ol><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- java小脚本 --&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String str = <span class="string">"声明局部变量"</span>;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%!String str2=<span class="string">"声明全局变量"</span>; %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%=str+<span class="string">" 输出内容"</span> %&gt;</span><br></pre></td></tr></table></figure><h2 id="三大指令"><a href="#三大指令" class="headerlink" title="三大指令"></a>三大指令</h2><h3 id="Page指令"><a href="#Page指令" class="headerlink" title="Page指令"></a>Page指令</h3><p>Page指令，作用在整个页面上。语法： &lt;%@ 指令名(page) 属性 %&gt;</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 设置语言、编码方式等 --&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">"Java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 导包 --&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">"java.util.*"</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 指定出错跳转页面 --&gt;</span><br><span class="line">&lt;%@ page errorPage=<span class="string">"error.jsp"</span> %&gt;</span><br></pre></td></tr></table></figure><h3 id="Include指令"><a href="#Include指令" class="headerlink" title="Include指令"></a>Include指令</h3><p>Include指令，用于静态包含，将另一个jsp静态页面包含在此jsp页面中。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"Java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%@ include file=<span class="string">"header.jsp"</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Include&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;This is a include page&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">&lt;%@ include file=<span class="string">"footer.jsp"</span>%&gt;</span><br></pre></td></tr></table></figure><h3 id="Taglib指令"><a href="#Taglib指令" class="headerlink" title="Taglib指令"></a>Taglib指令</h3><p>Taglib指令，用于引入一些jsp的标签库。需要jar包：jstl.jar、standard.jar。语法：</p><pre><code>&lt;%@taglib prefix=&quot;&quot; uri=&quot;&quot; %&gt;uri  标签文件的URI地址prefix  标签组的命名空间前缀</code></pre><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@taglib</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span> %&gt;</span><br></pre></td></tr></table></figure><h2 id="EL表达式"><a href="#EL表达式" class="headerlink" title="EL表达式"></a>EL表达式</h2><p>EL表达式（Expression Language）是jsp的内置表达式语言，用来取代jsp中的Java代码，主要作用是获取域中的数据。 其作用为： </p><ol><li>获取域中数据<br>EL表达式主要用于替换JSP页面中的脚本表达式，以从各种类型的web域 中检索java对象、获取数据。(访问javabean属性、list集合、map集合等)</li><li>执行算数运算</li><li>获取web对象</li><li>调用Java方法</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%@ page language=<span class="string">"Java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span> <span class="keyword">import</span>=<span class="string">"com.bean.User, java.util.*"</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;my jsp&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 获取域中数据和算数运算 --&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        request.setAttribute(<span class="string">"name"</span>, <span class="string">"linda"</span>);</span><br><span class="line"></span><br><span class="line">        User user1 = <span class="keyword">new</span> User(<span class="string">"linda1"</span>, <span class="string">"linda1"</span>);</span><br><span class="line">        User user2 = <span class="keyword">new</span> User(<span class="string">"linda2"</span>, <span class="string">"linda2"</span>);</span><br><span class="line">        User user3 = <span class="keyword">new</span> User(<span class="string">"linda3"</span>, <span class="string">"linda3"</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        users.add(user1);</span><br><span class="line">        users.add(user2);</span><br><span class="line">        users.add(user3);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, User&gt; maps = <span class="keyword">new</span> HashMap();</span><br><span class="line">        maps.put(<span class="string">"user1"</span>, user1);</span><br><span class="line">        maps.put(<span class="string">"user2"</span>, user2);</span><br><span class="line">        maps.put(<span class="string">"user3"</span>, user3);</span><br><span class="line"></span><br><span class="line">        session.setAttribute(<span class="string">"user1"</span>, user1);</span><br><span class="line">        session.setAttribute(<span class="string">"list"</span>, users);</span><br><span class="line">        session.setAttribute(<span class="string">"map"</span>, maps);</span><br><span class="line">    %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 获取域中的字符串 --&gt;</span><br><span class="line">    $&#123;name&#125;</span><br><span class="line">    &lt;!-- 获取域中的实体bean属性 --&gt;</span><br><span class="line">    $&#123;user1.name&#125;</span><br><span class="line">    &lt;!-- 获取域中的list集合 --&gt;</span><br><span class="line">    $&#123;list[<span class="number">0</span>].name &#125;</span><br><span class="line">    &lt;!-- 获取域中的map集合 --&gt;</span><br><span class="line">    $&#123;map.user1.name &#125;</span><br><span class="line">    &lt;!-- 算数运算 --&gt;</span><br><span class="line">    $&#123;<span class="number">1</span>+<span class="number">2</span>-<span class="number">3</span>*<span class="number">4</span>/<span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="JSTL标准标签库"><a href="#JSTL标准标签库" class="headerlink" title="JSTL标准标签库"></a>JSTL标准标签库</h2><blockquote><p>JSTL(JSP Standard Tag Library，jsp标准标签库)是Apache对EL表达式的扩展，也就是说JSTL依赖EL表达式。JSTL是标签语言，使用起来非常方便。但是它不是jsp内置的标签，所以用的时候需要我们自己导包，以及指定标签库。</p></blockquote><pre><code>&lt;c:if  test=&quot;&quot;&gt;取代页面中if条件语句&lt;c:forEach items var begin varStatus&gt;取代页面中for循环</code></pre><p>代码示例：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"Java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span> <span class="keyword">import</span>=<span class="string">"com.bean.User,java.util.*"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> prefix=<span class="string">"c"</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;my jsp&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        User user1 = <span class="keyword">new</span> User(<span class="string">"linda1"</span>, <span class="string">"linda1"</span>);</span><br><span class="line">        User user2 = <span class="keyword">new</span> User(<span class="string">"linda2"</span>, <span class="string">"linda2"</span>);</span><br><span class="line">        User user3 = <span class="keyword">new</span> User(<span class="string">"linda3"</span>, <span class="string">"linda3"</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; users = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        users.add(user1);</span><br><span class="line">        users.add(user2);</span><br><span class="line">        users.add(user3);</span><br><span class="line">        Map&lt;String, User&gt; maps = <span class="keyword">new</span> HashMap();</span><br><span class="line">        session.setAttribute(<span class="string">"list"</span>, users);</span><br><span class="line">    %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;!empty list &#125;"</span>&gt;</span><br><span class="line">    $&#123;list &#125;</span><br><span class="line">    &lt;/c:if&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line"></span><br><span class="line">    &lt;c:forEach items=<span class="string">"$&#123;list &#125;"</span> <span class="keyword">var</span>=<span class="string">"user"</span> begin=<span class="string">"0"</span> varStatus=<span class="string">"stu"</span>&gt;</span><br><span class="line">    $&#123;stu.index &#125;</span><br><span class="line">    $&#123;stu.count &#125;</span><br><span class="line">    $&#123;user &#125; &lt;br&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- </span><br><span class="line"> items 属性  ： 结合el表达式从域中获取要遍历的集合</span><br><span class="line"> <span class="keyword">var</span>   属性  ： 每遍历一次 获取的实体User的接收者 ，</span><br><span class="line"> begin      ：开始遍历的角标     从<span class="number">0</span> 开始计数</span><br><span class="line"> varStatus 遍历者当前的状态      index 从<span class="number">0</span>开始</span><br><span class="line">                                count 计数</span><br><span class="line">  --&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;JSP(Java Server Pages)，实质上就是servlet，用于开发动态web资源。JSP其实就是在html中写Java代码，即JSP = JAVA+HTML。&lt;/p&gt;
&lt;p&gt;JSP动态页面技术的执行过程（原理）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;JSP--&amp;gt
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Xml解析及会话技术</title>
    <link href="https://zhaoshengxu.github.io/2018/11/25/Xml%E8%A7%A3%E6%9E%90%E5%8F%8A%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF/"/>
    <id>https://zhaoshengxu.github.io/2018/11/25/Xml解析及会话技术/</id>
    <published>2018-11-25T08:58:05.000Z</published>
    <updated>2020-01-10T16:03:06.791Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>XML 指可扩展标记语言（EXtensible Markup Language），类似 HTML。<br>XML 的设计宗旨是传输数据，而非显示数据。<br>XML 标签没有被预定义，您需要自行定义标签。<br>XML 广泛应用于框架的配置文件，如ssm。<br>XML 不是 HTML 的替代，XML 和 HTML 为不同的目的而设计：<br>    XML 被设计为传输和存储数据，其焦点是数据的内容；<br>    HTML 被设计用来显示数据，其焦点是数据的外观。</p></blockquote><h2 id="XML解析"><a href="#XML解析" class="headerlink" title="XML解析"></a>XML解析</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--xml文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">books</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">book</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">author</span>&gt;</span>钱钟书<span class="tag">&lt;/<span class="name">author</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span> <span class="attr">id</span>=<span class="string">"qzs"</span>&gt;</span>围城<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">content</span>&gt;</span>人生是一座围城，城里的人想出去，城外的人想进来，工作生活莫不是如此。<span class="tag">&lt;/<span class="name">content</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">price</span>&gt;</span>30<span class="tag">&lt;/<span class="name">price</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">book</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">books</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//xml解析</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> DocumentException </span>&#123;</span><br><span class="line">    <span class="comment">// 创建一个解析器</span></span><br><span class="line">    SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">    <span class="comment">// 获取代表文件的对象</span></span><br><span class="line">    Document document = reader.read(<span class="string">"src/demo.xml"</span>);</span><br><span class="line">    <span class="comment">// 获取根节点&lt;books&gt;</span></span><br><span class="line">    Element root = document.getRootElement();</span><br><span class="line">    <span class="comment">// 获取根节点下的子节点&lt;book&gt;</span></span><br><span class="line">    Element book = root.element(<span class="string">"book"</span>);</span><br><span class="line">    <span class="comment">// 获取book节点下的 子节点</span></span><br><span class="line">    Element author = book.element(<span class="string">"author"</span>);</span><br><span class="line">    Element name = book.element(<span class="string">"name"</span>);</span><br><span class="line">    Element content = book.element(<span class="string">"content"</span>);</span><br><span class="line">    <span class="comment">// 获取name节点属性</span></span><br><span class="line">    Attribute attribute = name.attribute(<span class="string">"id"</span>);</span><br><span class="line">    String id = attribute.getValue();</span><br><span class="line">    <span class="comment">// System.out.println(id);</span></span><br><span class="line">    <span class="comment">// 获取content节点的文本</span></span><br><span class="line">    String cont = content.getText();</span><br><span class="line">    <span class="comment">// System.out.println(cont);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模拟Spring管理对象"><a href="#模拟Spring管理对象" class="headerlink" title="模拟Spring管理对象"></a>模拟Spring管理对象</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--xml文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"servlet"</span>&gt;</span>com.web.UserServlet<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"service"</span>&gt;</span>com.service.UserService<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dao"</span>&gt;</span>com.dao.UserDao<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"bean"</span>&gt;</span>com.bean.UserBean<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>模拟spring管理对象，借助他人管理对象，而非new一个对象。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模拟spring管理对象</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap();</span><br><span class="line">    <span class="comment">// 创建一个解析器</span></span><br><span class="line">    SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">    <span class="comment">// 获取代表文件的对象</span></span><br><span class="line">    Document document = reader.read(<span class="string">"src/application.xml"</span>);</span><br><span class="line">    <span class="comment">// 获取根节点&lt;beans&gt;</span></span><br><span class="line">    Element root = document.getRootElement();</span><br><span class="line">    <span class="comment">// 获取所有子节点</span></span><br><span class="line">    List list = root.elements();</span><br><span class="line">    <span class="keyword">for</span> (Object obj : list) &#123;</span><br><span class="line">        Element e = (Element) obj;</span><br><span class="line">        String name = e.attribute(<span class="string">"id"</span>).getValue();</span><br><span class="line">        String className = e.getText();</span><br><span class="line">        <span class="comment">// 获取实现类</span></span><br><span class="line">        Object instance = Class.forName(className).newInstance();</span><br><span class="line">        map.put(name, instance);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(map);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="简单依赖管理"><a href="#简单依赖管理" class="headerlink" title="简单依赖管理"></a>简单依赖管理</h3><p>xml文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- xml文件:servlet依赖于service和dao --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"servlet"</span> <span class="attr">class</span>=<span class="string">"com.web.UserServlet"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">id</span>=<span class="string">"service"</span>&gt;</span>com.service.UserService<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">id</span>=<span class="string">"dao"</span>&gt;</span>com.dao.UserDao<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>简单依赖管理，servlet依赖于service和dao，所以先创建service和dao，然后创建servlet，避免报错。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 简单依赖管理</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap();</span><br><span class="line">    SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line">    Document document = reader.read(<span class="string">"src/bean.xml"</span>);</span><br><span class="line">    Element bean = document.getRootElement();</span><br><span class="line">    List list = bean.elements();</span><br><span class="line">    <span class="comment">//servlet依赖于service和dao，所以先创建service和dao</span></span><br><span class="line">    <span class="keyword">for</span> (Object obj : list) &#123;</span><br><span class="line">        Element e = (Element) obj;</span><br><span class="line">        String key = e.attribute(<span class="string">"id"</span>).getValue();</span><br><span class="line">        String className = e.getText();</span><br><span class="line">        Object instance = Class.forName(className).newInstance();</span><br><span class="line">        map.put(key, instance);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建service和dao之后，创建Servlet</span></span><br><span class="line">    String key = bean.attribute(<span class="string">"id"</span>).getValue();</span><br><span class="line">    String className = bean.attribute(<span class="string">"class"</span>).getValue();</span><br><span class="line">    Object instance = Class.forName(className).newInstance();</span><br><span class="line">    map.put(key, instance);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><blockquote><p>public class Cookie</p></blockquote><blockquote><p>Creates a cookie, a small amount of information sent by a servlet to a Web browser, saved by the browser, and later sent back to the server. A cookie’s value can uniquely identify a client, so cookies are commonly used for session management. </p></blockquote><blockquote><p>A cookie has a name, a single value, and optional attributes such as a comment, path and domain qualifiers, a maximum age, and a version number. Some Web browsers have bugs in how they handle the optional attributes, so use them sparingly to improve the interoperability of your servlets. </p></blockquote><h3 id="创建cookie"><a href="#创建cookie" class="headerlink" title="创建cookie"></a>创建cookie</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建cookie</span></span><br><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"name"</span>, <span class="string">"linda"</span>);</span><br><span class="line"><span class="comment">//设置路径</span></span><br><span class="line">cookie.setPath(<span class="string">"/"</span>);</span><br><span class="line"><span class="comment">//设置最大存活时间</span></span><br><span class="line">cookie.setMaxAge(<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line"><span class="comment">//将cookie发送至浏览器</span></span><br><span class="line">response.addCookie(cookie);</span><br></pre></td></tr></table></figure><h3 id="获取本地cookie"><a href="#获取本地cookie" class="headerlink" title="获取本地cookie"></a>获取本地cookie</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取本地cookie</span></span><br><span class="line">Cookie[] cookies = request.getCookies();</span><br><span class="line"><span class="comment">//遍历cookie</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">null</span>!=cookies)&#123;</span><br><span class="line">    <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">        String name = cookie.getName();</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"name"</span>.equals(name))&#123;</span><br><span class="line">            String value = cookie.getValue();</span><br><span class="line">            response.getWriter().println(value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="访问时间案例"><a href="#访问时间案例" class="headerlink" title="访问时间案例"></a>访问时间案例</h3><p>将创建cookie与取出cookie放在一起，实现动态显示上次访问时间。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建当前访问时间cookie</span></span><br><span class="line"><span class="comment">// 获取当前访问时间</span></span><br><span class="line"><span class="keyword">long</span> currentTimeMillis = System.currentTimeMillis();</span><br><span class="line">String time = currentTimeMillis + <span class="string">""</span>;</span><br><span class="line"><span class="comment">// 创建cookie</span></span><br><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"time"</span>, time);</span><br><span class="line"><span class="comment">// 将cookie发送至浏览器</span></span><br><span class="line">response.addCookie(cookie);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取本地cookie</span></span><br><span class="line">Cookie[] cookies = request.getCookies();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> != cookies) &#123;</span><br><span class="line">    <span class="keyword">for</span> (Cookie cookie2 : cookies) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"time"</span>.equals(cookie2.getName())) &#123;</span><br><span class="line">            String value = cookie2.getValue();</span><br><span class="line">            <span class="keyword">long</span> parseLong = Long.parseLong(value);</span><br><span class="line">            Date date = <span class="keyword">new</span> Date(parseLong);</span><br><span class="line">            <span class="meta">@SuppressWarnings</span>(<span class="string">"deprecation"</span>)</span><br><span class="line">            String localeString = date.toLocaleString();</span><br><span class="line">            response.getWriter().println(<span class="string">"您上次访问的时间是："</span> + localeString);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    response.getWriter().println(<span class="string">"您是第一次访问"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="解决cookie存放中文的问题"><a href="#解决cookie存放中文的问题" class="headerlink" title="解决cookie存放中文的问题"></a>解决cookie存放中文的问题</h3><p>将含有中文的cookie先以utf-8编码，然后再以utf-8解码取出。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建cookie</span></span><br><span class="line">String name = <span class="string">"琳达"</span>;</span><br><span class="line"><span class="comment">// 将中文编码</span></span><br><span class="line">String nname = URLEncoder.encode(name, <span class="string">"UTF-8"</span>);</span><br><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"name"</span>, nname);</span><br><span class="line">response.addCookie(cookie);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从本地获取cookie</span></span><br><span class="line">Cookie[] cookies = request.getCookies();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> != cookies) &#123;</span><br><span class="line">    <span class="keyword">for</span> (Cookie cookie2 : cookies) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"name"</span>.equals(cookie2.getName())) &#123;</span><br><span class="line">            String value = cookie2.getValue();</span><br><span class="line">            <span class="comment">//解码</span></span><br><span class="line">            String decode = URLDecoder.decode(value, <span class="string">"UTF-8"</span>);</span><br><span class="line">            response.getWriter().println(decode);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="HttpSession"><a href="#HttpSession" class="headerlink" title="HttpSession"></a>HttpSession</h2><blockquote><p>public abstract interface HttpSession</p></blockquote><blockquote><p>Provides a way to identify a user across more than one page request or visit to a Web site and to store information about that user. </p></blockquote><blockquote><p>The servlet container uses this interface to create a session between an HTTP client and an HTTP server. The session persists for a specified time period, across more than one connection or page request from the user. A session usually corresponds to one user, who may visit a site many times. The server can maintain a session in many ways such as using cookies or rewriting URLs.</p></blockquote><p>Session作为一个域对象，存储数据，作用范围一次会话</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取Seesion，域对象，作用范围：一次会话</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line"><span class="comment">// 设置session最大存活时间</span></span><br><span class="line">session.setMaxInactiveInterval(<span class="number">60</span> * <span class="number">60</span>);</span><br><span class="line"><span class="comment">// 向seesion中存数据</span></span><br><span class="line">session.setAttribute(<span class="string">"name"</span>, <span class="string">"linda"</span>);</span><br><span class="line">session.setAttribute(<span class="string">"gender"</span>, <span class="string">"woman"</span>);</span><br><span class="line">session.setAttribute(<span class="string">"age"</span>, <span class="number">18</span>);</span><br><span class="line"><span class="comment">// 移除数据</span></span><br><span class="line"><span class="comment">// session.removeAttribute("age");</span></span><br><span class="line"><span class="comment">// 遍历存入的数据</span></span><br><span class="line">Enumeration&lt;String&gt; names = session.getAttributeNames();</span><br><span class="line"><span class="keyword">while</span> (names.hasMoreElements()) &#123;</span><br><span class="line">    String name = names.nextElement();</span><br><span class="line">    Object value = session.getAttribute(name);</span><br><span class="line">    System.out.println(name + <span class="string">"="</span> + value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="借助session改进登录案列"><a href="#借助session改进登录案列" class="headerlink" title="借助session改进登录案列"></a>借助session改进登录案列</h3><p>登录时，先从session中取用户信息。</p><ol><li>如果取到，说明在登录状态，页面跳转；</li><li><p>如果没有取到，说明session过期，或者没有登录，需要从数据库查询数据登录。</p><ul><li>操作数据库登录成功后，将用户信息放在session中。</li><li>如果登录失败，页面跳转。</li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取session域对象</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">User user = (User) session.getAttribute(<span class="string">"user"</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> == user) &#123;<span class="comment">// user为空，表明没有未登录</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 从数据库查询数据登录</span></span><br><span class="line">        <span class="comment">// 接收页面参数</span></span><br><span class="line">        String name = request.getParameter(<span class="string">"name"</span>);</span><br><span class="line">        String pwd = request.getParameter(<span class="string">"pwd"</span>);</span><br><span class="line">        <span class="comment">// 直接操作数据库登录</span></span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"select * from user2 where name=? and password=?"</span>;</span><br><span class="line">        User user2 = runner.query(sql, <span class="keyword">new</span> BeanHandler&lt;User&gt;(User.class), name, pwd);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">null</span>!=user2)&#123;<span class="comment">//登录成功，页面跳转，并将参数存入session</span></span><br><span class="line">            response.sendRedirect(<span class="string">"/webday09/success.html"</span>);</span><br><span class="line">            session.setAttribute(<span class="string">"user"</span>, user2);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">//跳转登录失败页面</span></span><br><span class="line">            response.sendRedirect(<span class="string">"/webday09/sorry.html"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;<span class="comment">//页面跳转，已登录状态</span></span><br><span class="line">    response.sendRedirect(<span class="string">"/webday09/successing.html"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;XML 指可扩展标记语言（EXtensible Markup Language），类似 HTML。&lt;br&gt;XML 的设计宗旨是传输数据，而非显示数据。&lt;br&gt;XML 标签没有被预定义，您需要自行定义标签。&lt;br&gt;XML 广泛应用于框架的配置文件，如
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="XML" scheme="https://zhaoshengxu.github.io/tags/XML/"/>
    
  </entry>
  
  <entry>
    <title>Servlet应用小案例</title>
    <link href="https://zhaoshengxu.github.io/2018/11/24/Servlet%E5%BA%94%E7%94%A8%E5%B0%8F%E6%A1%88%E4%BE%8B/"/>
    <id>https://zhaoshengxu.github.io/2018/11/24/Servlet应用小案例/</id>
    <published>2018-11-24T13:45:04.000Z</published>
    <updated>2020-01-10T16:04:51.284Z</updated>
    
    <content type="html"><![CDATA[<h2 id="转账案例"><a href="#转账案例" class="headerlink" title="转账案例"></a>转账案例</h2><p>开发环境准备：jar包、c3p0.properties、db.properties(MyDbUtil工具类)</p><p>步骤分析:</p><ol><li>html页面： form，action，method</li><li>servlet： 接收参数，调用service</li><li>service： 事务管理，调用dao</li><li>dao： 操作数据库</li></ol><p>Connection的两种传递方式：</p><ol><li>作为参数传递：dao</li><li>从本地线程中传递</li></ol><h3 id="html转账页：form表单"><a href="#html转账页：form表单" class="headerlink" title="html转账页：form表单"></a>html转账页：form表单</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="servlet：接收参数，调用service"><a href="#servlet：接收参数，调用service" class="headerlink" title="servlet：接收参数，调用service"></a>servlet：接收参数，调用service</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Transfer</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">    <span class="comment">// 调用UserService</span></span><br><span class="line">    <span class="comment">// UserService service = new UserService();</span></span><br><span class="line">    UserService2 service = <span class="keyword">new</span> UserService2();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        response.setContentType(<span class="string">"text/html; charset=UTF-8"</span>);</span><br><span class="line">        <span class="comment">// 转账</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 接收页面参数</span></span><br><span class="line">            String from = request.getParameter(<span class="string">"from"</span>);</span><br><span class="line">            String to = request.getParameter(<span class="string">"to"</span>);</span><br><span class="line">            String money = request.getParameter(<span class="string">"money"</span>);</span><br><span class="line">            <span class="keyword">int</span> i = service.transfer(from, to, money);</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</span><br><span class="line">                response.sendRedirect(<span class="string">"/webday08/success.html"</span>);</span><br><span class="line">                <span class="comment">// System.out.println("转账成功");</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                response.sendRedirect(<span class="string">"/webday08/sorry.html"</span>);</span><br><span class="line">                <span class="comment">// System.out.println("转账失败");</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="service：事务管理，调用dao"><a href="#service：事务管理，调用dao" class="headerlink" title="service：事务管理，调用dao"></a>service：事务管理，调用dao</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService2</span> </span>&#123;</span><br><span class="line">    UserDao2 dao = <span class="keyword">new</span> UserDao2();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 转账服务</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> from 付款人</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> to 收款人</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> money 金额</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 状态码，1表示转账成功，0表示转账失败</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">transfer</span><span class="params">(String from, String to, String money)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">        Connection connection = MyDbUtil2.getConnection();</span><br><span class="line">        <span class="comment">//开启事务</span></span><br><span class="line">        connection.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//付款</span></span><br><span class="line">        <span class="keyword">int</span> i = dao.payMoney(to, money);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//bug</span></span><br><span class="line">        <span class="comment">//int a = 1/0;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//收款</span></span><br><span class="line">        <span class="keyword">int</span> j = dao.receMoney(from, money);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        connection.commit();</span><br><span class="line">        <span class="keyword">return</span> i&amp;j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="dao：操作数据库"><a href="#dao：操作数据库" class="headerlink" title="dao：操作数据库"></a>dao：操作数据库</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">payMoney</span><span class="params">(String to, String money)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">        Connection connection = MyDbUtil2.getConnection();</span><br><span class="line">        <span class="comment">//付款，执行SQL语句</span></span><br><span class="line">        String sql = <span class="string">"update user set money = money-? where name=?"</span>;</span><br><span class="line">        PreparedStatement statement = connection.prepareStatement(sql);</span><br><span class="line">        statement.setString(<span class="number">1</span>, money);</span><br><span class="line">        statement.setString(<span class="number">2</span>, to);</span><br><span class="line">        <span class="keyword">int</span> i = statement.executeUpdate();</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">receMoney</span><span class="params">(String from, String money)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">        Connection connection = MyDbUtil2.getConnection();</span><br><span class="line">        <span class="comment">//收款，执行SQL语句</span></span><br><span class="line">        String sql = <span class="string">"update user set money = money+? where name=?"</span>;</span><br><span class="line">        PreparedStatement statement = connection.prepareStatement(sql);</span><br><span class="line">        statement.setString(<span class="number">1</span>, money);</span><br><span class="line">        statement.setString(<span class="number">2</span>, from);</span><br><span class="line">        <span class="keyword">int</span> j = statement.executeUpdate();</span><br><span class="line">        <span class="keyword">return</span> j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MyDbUtil：获取连接的工具类"><a href="#MyDbUtil：获取连接的工具类" class="headerlink" title="MyDbUtil：获取连接的工具类"></a>MyDbUtil：获取连接的工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyDbUtil2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">static</span> String name = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">static</span> String password = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态表代码块:加载配置文件，注册驱动</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// 加载配置文件</span></span><br><span class="line">        ResourceBundle bundle = ResourceBundle.getBundle(<span class="string">"db"</span>);</span><br><span class="line">        String driverClass = bundle.getString(<span class="string">"driverClass"</span>);</span><br><span class="line">        url = bundle.getString(<span class="string">"url"</span>);</span><br><span class="line">        name = bundle.getString(<span class="string">"name"</span>);</span><br><span class="line">        password = bundle.getString(<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注册驱动</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driverClass);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从本地线程中获取连接</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SQLException</span></span><br><span class="line"><span class="comment">     *             数据库异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> ThreadLocal&lt;Connection&gt; thread = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//可理解为一个本地线程连接池</span></span><br><span class="line">        Connection connection = thread.get();</span><br><span class="line">        <span class="keyword">if</span>(connection == <span class="keyword">null</span>)&#123;</span><br><span class="line">            connection = DriverManager.getConnection(url, name, password);</span><br><span class="line">            thread.set(connection);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放资源</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection</span></span><br><span class="line"><span class="comment">     *            连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> statement</span></span><br><span class="line"><span class="comment">     *            发送执行sql语句的对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultSet</span></span><br><span class="line"><span class="comment">     *            查询返回的结果集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Connection connection, Statement statement, ResultSet resultSet)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != resultSet) &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != statement) &#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != connection) &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查询商品案列"><a href="#查询商品案列" class="headerlink" title="查询商品案列"></a>查询商品案列</h2><h3 id="查询页面"><a href="#查询页面" class="headerlink" title="查询页面"></a>查询页面</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Search<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Search Product<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/webday08/Search"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"keywords"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>Search<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="servlet：获取页面参数，调用service"><a href="#servlet：获取页面参数，调用service" class="headerlink" title="servlet：获取页面参数，调用service"></a>servlet：获取页面参数，调用service</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Search</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">    SearchService service = <span class="keyword">new</span> SearchService();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        response.setContentType(<span class="string">"text/html; charset=UTF-8"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 接收页面参数</span></span><br><span class="line">            String keywords = request.getParameter(<span class="string">"keywords"</span>);</span><br><span class="line">            <span class="comment">// 调用service</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">""</span>.equals(keywords)) &#123;</span><br><span class="line">                List&lt;Product&gt; products = service.SearchAllProducts();</span><br><span class="line">                response.getWriter().write(products.toString());</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                List&lt;Product&gt; products = service.SearchProductsLikeName(keywords);</span><br><span class="line">                response.getWriter().write(products.toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="service-查询事务管理，调用dao"><a href="#service-查询事务管理，调用dao" class="headerlink" title="service:查询事务管理，调用dao"></a>service:查询事务管理，调用dao</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SearchService</span> </span>&#123;</span><br><span class="line">    SearchDao dao = <span class="keyword">new</span> SearchDao();</span><br><span class="line">    <span class="comment">//查询所有商品</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">SearchAllProducts</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">        List&lt;Product&gt; products = dao.SearchAllProducts();</span><br><span class="line">        <span class="keyword">return</span> products;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//查询含有关键词的商品，条件模糊查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">SearchProductsLikeName</span><span class="params">(String keywords)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">        List&lt;Product&gt; products = dao.SearchProductsLikeName(keywords);</span><br><span class="line">        <span class="keyword">return</span> products;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="dao-操作数据库"><a href="#dao-操作数据库" class="headerlink" title="dao:操作数据库"></a>dao:操作数据库</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SearchDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询所有</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">SearchAllProducts</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"select * from product"</span>;</span><br><span class="line">        List&lt;Product&gt; list = runner.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Product&gt;(Product.class));</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//条件模糊查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Product&gt; <span class="title">SearchProductsLikeName</span><span class="params">(String keywords)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"select * from product where name like ?"</span>;</span><br><span class="line">        String nkeywords = <span class="string">"%"</span>+keywords+<span class="string">"%"</span>;</span><br><span class="line">        List&lt;Product&gt; list = runner.query(sql, <span class="keyword">new</span> BeanListHandler&lt;Product&gt;(Product.class), nkeywords);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="面向接口编程"><a href="#面向接口编程" class="headerlink" title="面向接口编程"></a>面向接口编程</h2><p>面向对象编程：</p><pre><code>类：属性（数据）和方法找对象--&gt;类的实例 --&gt;打点调方法</code></pre><p>面向接口编程：</p><pre><code>接口--&gt;多态--&gt;一种事物的多种表现形式左边接口   右边实现类</code></pre><h3 id="面向接口解耦合"><a href="#面向接口解耦合" class="headerlink" title="面向接口解耦合"></a>面向接口解耦合</h3><p>接口UserDao<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ou;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>实现类UserDaoImpl1<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ou;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl1</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserDaoImpl1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>实现类UserDaoImpl2<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ou;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl2</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"UserDaoImpl2"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>配置文件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdao=com.ou.UserDaoImpl2</span><br></pre></td></tr></table></figure></p><p>演示实例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//加载配置文件</span></span><br><span class="line">        InputStream in = MyTest.class.getClassLoader().getResourceAsStream(<span class="string">"dao.properties"</span>);</span><br><span class="line">        Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">        p.load(in);</span><br><span class="line">        <span class="comment">//获取类名称</span></span><br><span class="line">        String className = p.getProperty(<span class="string">"userdao"</span>);</span><br><span class="line">        <span class="comment">//左边接口，右边实现类</span></span><br><span class="line">        <span class="comment">//UserDao userdao = new UserDaoImpl1();</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//实现dao解耦合：修改配置文件可以改变实现类，然后创建实例</span></span><br><span class="line">        UserDao userdao = (UserDao) Class.forName(className).newInstance();</span><br><span class="line">        <span class="comment">//调用实现类方法</span></span><br><span class="line">        userdao.test();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="登录案列：接口-三层代码分离"><a href="#登录案列：接口-三层代码分离" class="headerlink" title="登录案列：接口+三层代码分离"></a>登录案列：接口+三层代码分离</h2><h3 id="Servlet：接收页面参数，调用service"><a href="#Servlet：接收页面参数，调用service" class="headerlink" title="Servlet：接收页面参数，调用service"></a>Servlet：接收页面参数，调用service</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Login</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">    LoginService service = <span class="keyword">new</span> LoginServiceImpl();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">        response.setContentType(<span class="string">"text/html; charset=UTF-8"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//接收页面参数</span></span><br><span class="line">            String name = request.getParameter(<span class="string">"name"</span>);</span><br><span class="line">            String pwd = request.getParameter(<span class="string">"pwd"</span>);</span><br><span class="line">            <span class="comment">//调用service</span></span><br><span class="line">            User user = service.login(name, pwd);</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Service-事务管理，调用dao"><a href="#Service-事务管理，调用dao" class="headerlink" title="Service: 事务管理，调用dao"></a>Service: 事务管理，调用dao</h3><p>Service接口<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LoginService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String name, String pwd)</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Service实现类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServiceImpl</span> <span class="keyword">implements</span> <span class="title">LoginService</span> </span>&#123;</span><br><span class="line">    LoginDao dao = <span class="keyword">new</span> LoginDaoImpl();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String name, String pwd)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        User user = dao.login(name, pwd);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="Dao-操作数据库"><a href="#Dao-操作数据库" class="headerlink" title="Dao: 操作数据库"></a>Dao: 操作数据库</h3><p>Dao接口<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">LoginDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String name, String pwd)</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Dao实现类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginDaoImpl</span> <span class="keyword">implements</span> <span class="title">LoginDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String name, String pwd)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"select * from user2 where name=? and password=?"</span>;</span><br><span class="line">        User user = runner.query(sql, <span class="keyword">new</span> BeanHandler&lt;User&gt;(User.class), name, pwd);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;转账案例&quot;&gt;&lt;a href=&quot;#转账案例&quot; class=&quot;headerlink&quot; title=&quot;转账案例&quot;&gt;&lt;/a&gt;转账案例&lt;/h2&gt;&lt;p&gt;开发环境准备：jar包、c3p0.properties、db.properties(MyDbUtil工具类)&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Servlet</title>
    <link href="https://zhaoshengxu.github.io/2018/11/22/Servlet/"/>
    <id>https://zhaoshengxu.github.io/2018/11/22/Servlet/</id>
    <published>2018-11-22T12:56:41.000Z</published>
    <updated>2020-01-10T16:07:42.964Z</updated>
    
    <content type="html"><![CDATA[<p>servlet是一个运行在web服务上的java程序。servlet通常通过HTTP协议，接收并响应来自Web客户端的请求。在用Eclipse进行web开发时，默认创建的Servlet有很多注释，不够简洁，可以在Eclipse中添加Servlet模板。 详见教程:<a href="https://blog.csdn.net/newmemory/article/details/54603786" target="_blank" rel="noopener">Eclipse for JavaEE中修改Servlet新建模板</a></p><h2 id="注册案例分析"><a href="#注册案例分析" class="headerlink" title="注册案例分析"></a>注册案例分析</h2><h3 id="初级代码"><a href="#初级代码" class="headerlink" title="初级代码"></a>初级代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//接收页面参数</span></span><br><span class="line">    String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">    String password = request.getParameter(<span class="string">"pwd"</span>);</span><br><span class="line">    <span class="comment">//操作数据</span></span><br><span class="line">    ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">    QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">    String sql = <span class="string">"INSERT INTO user2 VALUES(null,?,?)"</span>;</span><br><span class="line">    <span class="keyword">int</span> i = runner.update(sql, username,password);</span><br><span class="line">    <span class="comment">//页面跳转</span></span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">1</span>)&#123;<span class="comment">//注册成功跳转登录页面</span></span><br><span class="line">        response.sendRedirect(<span class="string">"/webday07/login.html"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;<span class="comment">//注册不成功跳转注册页面</span></span><br><span class="line">        response.sendRedirect(<span class="string">"/webday07/register.html"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三层代码分离"><a href="#三层代码分离" class="headerlink" title="三层代码分离"></a>三层代码分离</h3><p>代码分离步骤分析及代码示例：</p><ul><li>Servlet 接收页面参数，处理请求–&gt;调用 Service：new UserService().register（参数）</li><li>Service 处理事务：register（参数）–&gt;调用dao：new UserDao.addUser（参数）</li><li>Dao 执行sql语句: addUser（参数）–&gt;执行sql语句</li></ul><h4 id="Servlet-接收页面参数，处理请求"><a href="#Servlet-接收页面参数，处理请求" class="headerlink" title="Servlet 接收页面参数，处理请求"></a>Servlet 接收页面参数，处理请求</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">    <span class="comment">//接收页面参数</span></span><br><span class="line">    String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">    String password = request.getParameter(<span class="string">"pwd"</span>);</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setName(username);</span><br><span class="line">    user.setPassword(password);</span><br><span class="line">    <span class="comment">//操作数据</span></span><br><span class="line">    <span class="comment">//int i = dao.addUser(user);</span></span><br><span class="line">    <span class="keyword">int</span> i = service.register(user);</span><br><span class="line">    <span class="comment">//页面跳转</span></span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">1</span>)&#123;<span class="comment">//注册成功跳转登录页面</span></span><br><span class="line">        response.sendRedirect(<span class="string">"/webday07/login.html"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;<span class="comment">//注册不成功跳转注册页面</span></span><br><span class="line">        response.sendRedirect(<span class="string">"/webday07/register.html"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">String from = <span class="string">"mike"</span>;</span><br><span class="line">String to = <span class="string">"marry"</span>;</span><br><span class="line"><span class="keyword">int</span> money = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转账</span></span><br><span class="line"><span class="keyword">int</span> i = userService.trans(from, to, money);</span><br></pre></td></tr></table></figure><h4 id="Service-处理事务"><a href="#Service-处理事务" class="headerlink" title="Service 处理事务"></a>Service 处理事务</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//转账，收付款</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    UserDao dao = <span class="keyword">new</span> UserDao();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">trans</span><span class="params">(String from, String to ,<span class="keyword">int</span> money)</span></span>&#123;</span><br><span class="line">        <span class="comment">//开启事务</span></span><br><span class="line">        <span class="comment">//收款</span></span><br><span class="line">        <span class="keyword">int</span> receMoney = dao.receMoney(from, money);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//付款</span></span><br><span class="line">        <span class="keyword">int</span> payMoney = dao.payMoney(to, receMoney);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//提交事务</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//register</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">register</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dao.addUser(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Dao-执行sql语句"><a href="#Dao-执行sql语句" class="headerlink" title="Dao 执行sql语句"></a>Dao 执行sql语句</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="comment">// 操作数据</span></span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"INSERT INTO user2 VALUES(null,?,?)"</span>;</span><br><span class="line">        <span class="keyword">int</span> i = runner.update(sql, user.getName(), user.getPassword());</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 收款</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">receMoney</span><span class="params">(String from, <span class="keyword">int</span> money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 付款</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">payMoney</span><span class="params">(String to, <span class="keyword">int</span> money)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Servlet生命周期"><a href="#Servlet生命周期" class="headerlink" title="Servlet生命周期"></a>Servlet生命周期</h2><ol><li>发送请求</li><li>解析请求: web.xml-&gt;url-&gt;name-&gt;class</li><li>实例化，反射</li><li>初始化，调用init（）方法，调用1次</li><li>服务，调用service（）方法</li><li>返回响应信息</li><li>销毁，调用destroy（）方法，Servlet正常关闭时调用</li></ol><p>如下图所示：</p><p><img src="/2018/11/22/Servlet/ServletLife.png" alt="ServletLife"></p><h2 id="ServletConfig"><a href="#ServletConfig" class="headerlink" title="ServletConfig"></a>ServletConfig</h2><p>ServletConfig这个对象在 Servlet 初始化时就传给 Servlet，所以从servlet对象中去取。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 初始化参数配置   web.xml中配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>ConfigObj<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>ConfigObj<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.demo.ConfigObj<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 初始化参数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>name<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>lili<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// 获取ServletConfig对象</span></span><br><span class="line">    ServletConfig servletConfig = <span class="keyword">this</span>.getServletConfig();</span><br><span class="line">    <span class="comment">//获取初始化参数名，枚举</span></span><br><span class="line">    Enumeration&lt;String&gt; inits = servletConfig.getInitParameterNames();</span><br><span class="line">    String nextElement = inits.nextElement();</span><br><span class="line">    <span class="comment">//获取初始化参数对应的值</span></span><br><span class="line">    String initParameter = servletConfig.getInitParameter(nextElement);</span><br><span class="line">    System.out.println(nextElement+<span class="string">"---"</span>+initParameter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ServletContext"><a href="#ServletContext" class="headerlink" title="ServletContext"></a>ServletContext</h2><p>ServletContext对象是Servlet三大（域）对象之一，每个Web应用程序都只有一个ServletContext对象，该对象是Web应用程序的全局对象，可以在整个Web应用中共享数据资源。Tomcat服务器在启动时，会自动创建一个ServletContext对象（域）。在关闭时，会自动销毁这个ServletContext对象。</p><h3 id="ServletContext对象的作用"><a href="#ServletContext对象的作用" class="headerlink" title="ServletContext对象的作用"></a>ServletContext对象的作用</h3><ol><li>获取全局的初始化参数</li><li>实现整个web应用程序中多个servlet之间的数据共享</li><li>实现转发:一般使用request对象来转发</li><li><p>获取文件的真实路径和项目名（路径），web项目中文件的真实路径有三种:</p><ul><li>第一种，src目录下的文件(src下的代码都在/WEB-INF/classes/目录下)，如/WEB-INF/classes/db.properties</li><li>第二种，WebContent目录下的文件(默认在根目录下)，如/db.properties</li><li>第三种，WEB-INF目录下的文件，如/WEB-INF/db.properties</li></ul></li></ol><h3 id="获取全局初始化参数"><a href="#获取全局初始化参数" class="headerlink" title="获取全局初始化参数"></a>获取全局初始化参数</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 全局初始化参数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>content<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>servletContext<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取context对象</span></span><br><span class="line">ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"><span class="comment">// 获取全局初始化参数</span></span><br><span class="line">Enumeration&lt;String&gt; names = context.getInitParameterNames();</span><br><span class="line">String name = names.nextElement();</span><br><span class="line">String value = context.getInitParameter(name);</span><br><span class="line">System.out.println(name+<span class="string">"---"</span>+value);<span class="comment">//content---servletContext</span></span><br></pre></td></tr></table></figure><h3 id="全局共享数据"><a href="#全局共享数据" class="headerlink" title="全局共享数据"></a>全局共享数据</h3><p>全局域对象context，实现整个web项目中多个servlet之间的数据共享（application域）。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局数据共享，域，范围，整个web项目，存储数据</span></span><br><span class="line">context.setAttribute(<span class="string">"name"</span>, <span class="string">"zsx"</span>);</span><br><span class="line"><span class="comment">// 获取域中的数据</span></span><br><span class="line">value = (String) context.getAttribute(<span class="string">"name"</span>);</span><br><span class="line">System.out.println(value);<span class="comment">//zsx</span></span><br></pre></td></tr></table></figure><h3 id="转发和重定向"><a href="#转发和重定向" class="headerlink" title="转发和重定向"></a>转发和重定向</h3><ul><li>转发：服务器内部的行为，1次请求，url不变，携带request。</li><li>重定向：2次请求，地址栏改变，不携带request。 url需要加项目名。</li><li>代码示例如下：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 转发</span></span><br><span class="line">context.getRequestDispatcher(<span class="string">"/hello.html"</span>).forward(request,response);</span><br><span class="line"><span class="comment">// 重定向</span></span><br><span class="line">response.sendRedirect(<span class="string">"/webday07/hello.html"</span>);</span><br></pre></td></tr></table></figure><h3 id="获取文件真实路径及项目名"><a href="#获取文件真实路径及项目名" class="headerlink" title="获取文件真实路径及项目名"></a>获取文件真实路径及项目名</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取文件的真实路径 、输入流 、读取内容</span></span><br><span class="line"><span class="comment">// src目录下的文件</span></span><br><span class="line">String path1 = context.getRealPath(<span class="string">"/WEB-INF/classes/dbcp.properties"</span>);</span><br><span class="line"><span class="comment">// WebContent目录下的文件</span></span><br><span class="line">String path2 = context.getRealPath(<span class="string">"/dbcp.properties"</span>);</span><br><span class="line"><span class="comment">// WEB-INF目录下的文件</span></span><br><span class="line">String path3 = context.getRealPath(<span class="string">"/WEB-INF/dbcp.properties"</span>);</span><br><span class="line">System.out.println(path1);</span><br><span class="line"><span class="comment">// 通过真实路径获取输入流</span></span><br><span class="line">FileInputStream fileInputStream = <span class="keyword">new</span> FileInputStream(<span class="keyword">new</span> File(path1));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接获取输入流</span></span><br><span class="line">InputStream in = context.getResourceAsStream(<span class="string">"/WEB-INF/classes/dbcp.properties"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取项目名</span></span><br><span class="line">String contextPath = context.getContextPath();</span><br><span class="line"><span class="comment">// System.out.println(contextPath);// /webday07</span></span><br></pre></td></tr></table></figure><h2 id="HttpServletRequest"><a href="#HttpServletRequest" class="headerlink" title="HttpServletRequest"></a>HttpServletRequest</h2><h3 id="GET乱码问题"><a href="#GET乱码问题" class="headerlink" title="GET乱码问题"></a>GET乱码问题</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    response.getWriter().append(<span class="string">"Served at: "</span>).append(request.getContextPath());</span><br><span class="line">    request.setCharacterEncoding(<span class="string">"UTF-8"</span>);<span class="comment">//只针对POST乱码问题</span></span><br><span class="line">    response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">    response.setContentType(<span class="string">"text/html; charset=UTF-8"</span>);</span><br><span class="line">    <span class="comment">//GET乱码问题</span></span><br><span class="line">    String name = request.getParameter(<span class="string">"name"</span>);</span><br><span class="line">    <span class="comment">//解码</span></span><br><span class="line">    <span class="keyword">byte</span>[] bytes = name.getBytes(<span class="string">"iso8859-1"</span>);</span><br><span class="line">    <span class="comment">//编码</span></span><br><span class="line">    String nname = <span class="keyword">new</span> String(bytes,<span class="string">"utf-8"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="接收页面参数"><a href="#接收页面参数" class="headerlink" title="接收页面参数"></a>接收页面参数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接收页面参数</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//接收单个参数</span></span><br><span class="line">    String email = request.getParameter(<span class="string">"email"</span>);</span><br><span class="line">    <span class="comment">//System.out.println(email);</span></span><br><span class="line">    <span class="comment">//接收多个参数</span></span><br><span class="line">    String[] hobby = request.getParameterValues(<span class="string">"hobby"</span>);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * for (String string : hobby) &#123; System.out.println(string); &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//接收一个map对象</span></span><br><span class="line">    MyUser user = <span class="keyword">new</span> MyUser();</span><br><span class="line">    Map&lt;String, String[]&gt; map = request.getParameterMap();</span><br><span class="line">    Set&lt;Entry&lt;String, String[]&gt;&gt; entrySet = map.entrySet();</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * for (Entry&lt;String, String[]&gt; entry : entrySet) &#123; String key =</span></span><br><span class="line"><span class="comment">     * entry.getKey(); String[] value = entry.getValue();</span></span><br><span class="line"><span class="comment">     * System.out.println(key+"---"+value); &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//需要jar包：commons-beanutils-1.8.3.jar|commons-logging-1.1.1.jar</span></span><br><span class="line">    BeanUtils.populate(user,map);</span><br><span class="line">    <span class="comment">//System.out.println(user);</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="作为一个域对象，作用范围一次请求"><a href="#作为一个域对象，作用范围一次请求" class="headerlink" title="作为一个域对象，作用范围一次请求"></a>作为一个域对象，作用范围一次请求</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//作为一个域对象，作用范围一次请求</span></span><br><span class="line">request.setAttribute(<span class="string">"name"</span>, <span class="string">"linda"</span>);<span class="comment">//向域中存储数据</span></span><br><span class="line">String value = (String)request.getAttribute(<span class="string">"name"</span>);<span class="comment">//从域中取数据</span></span><br><span class="line"><span class="comment">//System.out.println(value);//linda</span></span><br></pre></td></tr></table></figure><h3 id="转发"><a href="#转发" class="headerlink" title="转发"></a>转发</h3><p>转发的特点：</p><ol><li>url不变；</li><li>一次请求；</li><li>服务器内部的行为；</li><li>携带request域中的数据；</li><li>WEB-INF受保护，但转发可以访问。</li></ol><p>重定向的特点：</p><ol><li>两次请求；</li><li>地址栏改变；</li><li>不携带request域中的数据；</li><li>无法访问WEB-INF中的文件。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//转发，转发会携带request域中的数据</span></span><br><span class="line">request.getRequestDispatcher(<span class="string">"/Demo"</span>).forward(request, response);</span><br><span class="line"><span class="comment">//request.getRequestDispatcher("/WEB-INF/hello.html").forward(request, response);</span></span><br><span class="line"><span class="comment">//response.sendRedirect("/webday08/WEB-INF/hello.html");//404</span></span><br></pre></td></tr></table></figure><h3 id="获取项目名"><a href="#获取项目名" class="headerlink" title="获取项目名"></a>获取项目名</h3><p>与context对象相似。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取项目名</span></span><br><span class="line">String contextPath = request.getContextPath();</span><br><span class="line">System.out.println(contextPath);<span class="comment">// /webday08</span></span><br></pre></td></tr></table></figure></p><h2 id="HttpServletResponse"><a href="#HttpServletResponse" class="headerlink" title="HttpServletResponse"></a>HttpServletResponse</h2><ol><li>重定向  指定页面  url   状态码302  +   location地址</li><li>写一个页面–&gt;响应–&gt;浏览器   html  字符流</li><li>图片   io    字节流                      </li><li>响应字节流和字符流不能同时使用，两个方法互斥</li></ol><p>代码示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 字符流响应</span></span><br><span class="line"><span class="comment">// response.getWriter().write("&lt;h1&gt;hello&lt;/h1&gt;");</span></span><br><span class="line"><span class="comment">// sresponse.getWriter().write("&lt;h1&gt;你好&lt;/h1&gt;");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 字节流响应</span></span><br><span class="line">response.getOutputStream().write(<span class="string">"你好"</span>.getBytes());</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;servlet是一个运行在web服务上的java程序。servlet通常通过HTTP协议，接收并响应来自Web客户端的请求。在用Eclipse进行web开发时，默认创建的Servlet有很多注释，不够简洁，可以在Eclipse中添加Servlet模板。 详见教程:&lt;a hr
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat</title>
    <link href="https://zhaoshengxu.github.io/2018/11/21/Tomcat/"/>
    <id>https://zhaoshengxu.github.io/2018/11/21/Tomcat/</id>
    <published>2018-11-21T15:05:55.000Z</published>
    <updated>2020-01-10T16:02:23.417Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/11/21/Tomcat/Tomcat.jpg" alt="Tomcat"><br>Tomcat服务器目前最为流行的web服务器，Tomcat服务器是Apache-Jarkarta开源项目中的一个子项目，是一个小型、轻量级的支持JSP和Servlet技术的Web服务器，也是初学者学习开发JSP应用的首选。</p><h2 id="Tomcat下载"><a href="#Tomcat下载" class="headerlink" title="Tomcat下载"></a>Tomcat下载</h2><p>Tomcat下载链接：<a href="http://tomcat.apache.org/whichversion.html" target="_blank" rel="noopener">Tomcat官方下载</a></p><p>Tomcat有安装版和解压版（绿色版）</p><ul><li>安装版，以.exe形式的安装包，双击安装到电脑上，用的比较少。</li><li>解压版，即绿色版，解压后直接使用，用的比较多。</li></ul><h2 id="Tomcat在eclipse中发布web项目"><a href="#Tomcat在eclipse中发布web项目" class="headerlink" title="Tomcat在eclipse中发布web项目"></a>Tomcat在eclipse中发布web项目</h2><ol><li>添加服务器运行环境<br> Window/Preferences/Server/Runtime Environmen/Add/Apache Tomcat v8.0</li><li>设置服务器安装目录<br> D:\tool\apache-tomcat-8.0.53</li><li>显示服务器<br> Window/Show View/Other/Server/Servers</li><li>修改Tomcat发布位置<br> 双击Tomcat v8.0 Server at localhost/Use Tomcat installtion</li><li>创建web项目<br> New/Project/Web/Dynamic Web Project/项目名称/Dynamic web module version 改为2.5<br> 右击Tomcat v8.0 Server at localhost/Add and Remove/添加上面建立的项目</li></ol><h2 id="用户登录应用实例"><a href="#用户登录应用实例" class="headerlink" title="用户登录应用实例"></a>用户登录应用实例</h2><ol><li>HTML登录页面。包括form action  method</li><li>创建服务器。接收页面的参数：name，passsword</li><li>查询数据库。拿到表单中的输入数据后，去数据库中查询。有数据 ，则登录成功，否则失败</li><li>跳转页面。登录成功跳转登录成功页面，登录失败则跳转登录页面</li><li>登录成功页面HTML</li></ol><p>核心代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 接收页面参数</span></span><br><span class="line">        String username = request.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String pwd = request.getParameter(<span class="string">"pwd"</span>);</span><br><span class="line">        <span class="comment">// 操作数据库 ，jar:驱动|c3p0|pool|dbutils</span></span><br><span class="line">        ComboPooledDataSource dataSource = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">        QueryRunner runner = <span class="keyword">new</span> QueryRunner(dataSource);</span><br><span class="line">        String sql = <span class="string">"select * from user2 where name=? and password=?"</span>;</span><br><span class="line">        User user = runner.query(sql, <span class="keyword">new</span> BeanHandler&lt;User&gt;(User.class), username, pwd);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != user) &#123;<span class="comment">// 不为空表明登录成功</span></span><br><span class="line">            response.sendRedirect(<span class="string">"/webday06/hello.html"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            response.sendRedirect(<span class="string">"/webday06/login.html"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>登录页面:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/webday06/MyServlet"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">        用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span> </span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pwd"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>登录成功页面:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>winter is coming!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    目前最为流行的Tomcat服务器是Apache-Jarkarta开源项目中的一个子项目，</span><br><span class="line">    是一个小型、轻量级的支持JSP和Servlet 技术的Web服务器，也是初学者学习开发JSP应用的首选。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>User:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User [name="</span> + name + <span class="string">", password="</span> + password + <span class="string">"]"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2018/11/21/Tomcat/Tomcat.jpg&quot; alt=&quot;Tomcat&quot;&gt;&lt;br&gt;Tomcat服务器目前最为流行的web服务器，Tomcat服务器是Apache-Jarkarta开源项目中的一个子项目，是一个小型、轻量级的支持JSP和Ser
      
    
    </summary>
    
      <category term="IT" scheme="https://zhaoshengxu.github.io/categories/IT/"/>
    
    
      <category term="Java" scheme="https://zhaoshengxu.github.io/tags/Java/"/>
    
  </entry>
  
</feed>
