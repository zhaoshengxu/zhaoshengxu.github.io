<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xu&#39;s Blog</title>
  
  <subtitle>Live&amp;Learn</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zsx-cup.top/"/>
  <updated>2018-10-28T17:26:59.263Z</updated>
  <id>http://zsx-cup.top/</id>
  
  <author>
    <name>ZhaoShengxu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo配置Next主题搭建炫酷博客主页</title>
    <link href="http://zsx-cup.top/2018/10/29/Hexo%E9%85%8D%E7%BD%AENext%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E7%82%AB%E9%85%B7%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A1%B5/"/>
    <id>http://zsx-cup.top/2018/10/29/Hexo配置Next主题搭建炫酷博客主页/</id>
    <published>2018-10-28T17:25:08.000Z</published>
    <updated>2018-10-28T17:26:59.263Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装配置-Hexo"><a href="#安装配置-Hexo" class="headerlink" title="安装配置 Hexo"></a>安装配置 Hexo</h2><h2 id="配置主题-Next"><a href="#配置主题-Next" class="headerlink" title="配置主题 Next"></a>配置主题 Next</h2><p>博客根目录下的配置文件：blog/_config.yml</p><p>博客主题目录下的配置文件：themes/next/_config.yml</p><p>文件修改：themes/next/layout/_partials/footer.swig</p><p>修改文件：themes/next/layout/_layout.swig</p><p>修改文件：themes/next/languages/zh-Hans.yml</p><p>连接重置至个人网站<br>“D:\blog\blog\source\CNAME”</p><p>字数统计：wordcount</p><p>阅读次数:leancloud获取appid 和appkey，leancloud_visitors</p><p>评论：leancloud获取appid 和appkey，主题配置文件直接配置</p><p>访客数、访问量busuanzi</p><p><script async src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script><br>文件修改：themes/next/layout/_partials/footer.swig</p><p>本地搜索 Local search</p><p>添加侧栏友情链接</p><p>进度条、网页动画<br>彩带，Only fit scheme Pisces</p><p>GitHub关注按钮<br>然后粘贴刚才复制的代码到themes/next/layout/_layout.swig文件中(放在<div class="headband"></div>的下面)，并把href改为你的github地址<br>修改文件：themes/next/layout/_layout.swig</p><p>中文显示<br>author: 赵胜绪<br>totalcount: 博客总字数<br>“D:\blog\blog\themes\next\languages\zh-Hans.yml”</p><p>网站名称图标: easyiocn</p><p>Git bash 清屏：reset</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装配置-Hexo&quot;&gt;&lt;a href=&quot;#安装配置-Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装配置 Hexo&quot;&gt;&lt;/a&gt;安装配置 Hexo&lt;/h2&gt;&lt;h2 id=&quot;配置主题-Next&quot;&gt;&lt;a href=&quot;#配置主题-Next&quot; class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo+Git一个小时快速搭建个人博客</title>
    <link href="http://zsx-cup.top/2018/10/27/Hexo-Git%E4%B8%80%E4%B8%AA%E5%B0%8F%E6%97%B6%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://zsx-cup.top/2018/10/27/Hexo-Git一个小时快速搭建个人博客/</id>
    <published>2018-10-27T09:41:01.000Z</published>
    <updated>2018-10-28T17:41:12.367Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/10/27/Hexo-Git一个小时快速搭建个人博客/myblog_v1.1.jpg" alt="myblog_v1.1"></p><h2 id="搭建本地环境：Hexo框架"><a href="#搭建本地环境：Hexo框架" class="headerlink" title="搭建本地环境：Hexo框架"></a>搭建本地环境：Hexo框架</h2><h3 id="Hexo为何物"><a href="#Hexo为何物" class="headerlink" title="Hexo为何物"></a>Hexo为何物</h3><blockquote><p><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用<a href="https://daringfireball.net/projects/markdown" target="_blank" rel="noopener">Markdown</a>解析文章，并瞬间利用靓丽的主题生成静态网页。其中，Markdown是一个用于将普通文本转换为HTML的工具，它以易于阅读和编写的纯文本格式进行编写，然后将其转换为的HTML（或XHTML）。</p></blockquote><h3 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h3><p><strong>本文是基于Windows7系统安装，如果是其他系统可参见<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">Hexo官方文档</a>。</strong></p><p>Hexo安装的前提是电脑预安装Node.js和Git。如果你的电脑已安装Node.js和Git，直接跳到第三步开始安装Hexo；如果未安装则需要先按照前两步提示进行安装，下载安装非常快。</p><ol><li><a href="https://nodejs.org" target="_blank" rel="noopener">Node.js</a>下载安装，默认安装即可。</li><li><a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a>下载安装，Git官网下载速度非常慢，建议在腾讯软件中心下载<a href="https://pc.qq.com/detail/13/detail_22693.html" target="_blank" rel="noopener">Git</a>，默认安装即可。用作将本地的内容提交到GitHub仓库，后续会介绍如何操作。</li><li>利用 npm 命令安装Hexo。在任意位置右击鼠标，选择Git Bash输入以下命令即可安装。耗时稍长，安装顺利的话只需要几分钟，如果在安装过程中遇到问题，可重新安装。其中，<a href="https://www.npmjs.com.cn/" target="_blank" rel="noopener">npm</a> 是 JavaScript 世界的包管理工具,并且是 Node.js 平台的默认包管理工具。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li></ol><p>成功安装Node.js、Git和Hexo后，可用以下命令查看相应版本，结果如下图：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ node -v        <span class="comment">//查看node版本</span></span><br><span class="line">v8.12.0</span><br><span class="line"></span><br><span class="line">$ npm -v         <span class="comment">//查看npm版本</span></span><br><span class="line"><span class="number">6.4</span>.1</span><br><span class="line"></span><br><span class="line">$ git --version  <span class="comment">//查看git版本</span></span><br><span class="line">git version <span class="number">2.19</span>.1.windows.1</span><br><span class="line"></span><br><span class="line">$ hexo --version  <span class="comment">//查看hexo版本</span></span><br><span class="line">hexo: <span class="number">3.8</span>.0</span><br><span class="line">hexo-cli: <span class="number">1.1</span>.0</span><br><span class="line">os: Windows_NT <span class="number">6.1</span>.7601 win32 x64</span><br><span class="line">http_parser: <span class="number">2.8</span>.0</span><br><span class="line">node: <span class="number">8.12</span>.0</span><br><span class="line">v8: <span class="number">6.2</span>.414.66</span><br><span class="line">uv: <span class="number">1.19</span>.2</span><br><span class="line">zlib: <span class="number">1.2</span>.11</span><br><span class="line">ares: <span class="number">1.10</span>.1-DEV</span><br><span class="line">modules: <span class="number">57</span></span><br><span class="line">nghttp2: <span class="number">1.32</span>.0</span><br><span class="line">napi: <span class="number">3</span></span><br><span class="line">openssl: <span class="number">1.0</span>.2p</span><br><span class="line">icu: <span class="number">60.1</span></span><br><span class="line">unicode: <span class="number">10.0</span></span><br><span class="line">cldr: <span class="number">32.0</span></span><br><span class="line">tz: <span class="number">2017</span>c</span><br></pre></td></tr></table></figure></p><h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。了解目录结构及相关信息可参看<a href="https://hexo.io/zh-cn/docs/setup.html" target="_blank" rel="noopener">Hexo官方文档</a>，稍后配置Hexo时会涉及到。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></p><p>至此博客本地环境已经搭建完毕，并附上<a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">Hexo常用命令</a>。下面进行测试一下，发布一篇名为”Test”的博文，结果展示如下图：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> <span class="string">"Test"</span>  <span class="comment">//新建一篇文章，new后面跟的是标题，最好用双引号括起来，特别是标题中有空格</span></span><br><span class="line">$ hexo g  <span class="comment">//生成静态文件，g是generate的简写</span></span><br><span class="line">$ hexo s  <span class="comment">//启动服务器。默认情况下，访问网址为： http://localhost:4000/。</span></span><br></pre></td></tr></table></figure></p><p><img src="/2018/10/27/Hexo-Git一个小时快速搭建个人博客/test.jpg" alt="test"></p><h2 id="搭建GitHub环境"><a href="#搭建GitHub环境" class="headerlink" title="搭建GitHub环境"></a>搭建GitHub环境</h2><ol><li><a href="https://github.com/" target="_blank" rel="noopener">Github</a>注册</li><li>新建仓库（new repository）。注意Owner与repository的前半部分必须一致，比如<br><img src="/2018/10/27/Hexo-Git一个小时快速搭建个人博客/new_repository.jpg" alt="new_repository"></li><li>开启GitHub Pages。进入刚才新建的仓库，点击Settings并将页面拉到底，即可看见GitHub Pages，该主页托管了上述建立的仓库，主页地址如下图所示，即为刚才新建的仓库地址。<br><img src="/2018/10/27/Hexo-Git一个小时快速搭建个人博客/github_page.jpg" alt="github_page"></li></ol><h2 id="关联Hexo与GitHub-Pages"><a href="#关联Hexo与GitHub-Pages" class="headerlink" title="关联Hexo与GitHub Pages"></a>关联Hexo与GitHub Pages</h2><h3 id="初次运行-Git-前的配置"><a href="#初次运行-Git-前的配置" class="headerlink" title="初次运行 Git 前的配置"></a>初次运行 Git 前的配置</h3><ol><li><p>初始化Git，创建一个空的Git仓库，或者重新初始化存在的仓库:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure></li><li><p>设置你的用户名称与邮件地址：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"John Doe"</span>  <span class="comment">//GitHub注册用户名</span></span><br><span class="line">$ git config --global user.email johndoe<span class="meta">@example</span>.com  <span class="comment">//GitHub注册邮箱</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>如果使用了 –global 选项，那么该命令只需要运行一次，因为之后无论你在该系统上做任何事情， Git 都会使用那些信息。 当你想针对特定项目使用不同的用户名称与邮件地址时，可以在那个项目目录下运行没有 –global 选项的命令来配置。</p></blockquote><h3 id="使用SSH连接到GitHub"><a href="#使用SSH连接到GitHub" class="headerlink" title="使用SSH连接到GitHub"></a>使用SSH连接到GitHub</h3><blockquote><p>该部分参考Github帮助文档：<a href="https://help.github.com/articles/connecting-to-github-with-ssh/" target="_blank" rel="noopener">Connecting to GitHub with SSH</a>。</p></blockquote><ol><li><p>查看存在的SSH公/私钥。通常私钥保存在文件id_rsa，私钥保存在文件id_rsa.pub。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -al ~/.ssh</span><br></pre></td></tr></table></figure></li><li><p>生成SSH公/私钥</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -b <span class="number">4096</span> -C <span class="string">"your_email@example.com"</span>  <span class="comment">//替换邮箱为注册邮箱</span></span><br><span class="line"><span class="function">$ Enter a file in which to save the <span class="title">key</span> <span class="params">(/c/Users/you/.ssh/id_rsa)</span>: <span class="comment">//提示输入公/私钥保存路径，直接回车即可</span></span></span><br><span class="line"><span class="function">$ Enter <span class="title">passphrase</span> <span class="params">(empty <span class="keyword">for</span> no passphrase)</span>: <span class="comment">//输入密码，可以留空，直接回车即可</span></span></span><br><span class="line"><span class="function">$ Enter same passphrase again: <span class="comment">//再次输入密码，可以留空，直接回车即可</span></span></span><br></pre></td></tr></table></figure></li><li><p>将秘钥添加到SSH代理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ eval $(ssh-agent -s)  <span class="comment">//首先确保SSH代理在运行</span></span><br><span class="line">Agent pid <span class="number">59566</span>  <span class="comment">//显示进程id</span></span><br><span class="line"></span><br><span class="line">$ ssh-add ~/.ssh/id_rsa <span class="comment">//将秘钥添加到SSH代理</span></span><br></pre></td></tr></table></figure></li><li><p>将公钥添加到Github账户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ clip &lt; ~/.ssh/id_rsa.pub  <span class="comment">//复制刚才生成的公钥，如果公钥保存路径不是默认路径则该命令无效</span></span><br></pre></td></tr></table></figure></li></ol><p>然后点击Github页面右上角的头像，在弹出栏中点击Settings，并在新页面左边栏中点击SSH and GPG keys，在弹出页面点击New SSH key，并将复制的公钥贴过去，title会根据邮箱自动生成。</p><ol start="5"><li>测试SSH连接<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git<span class="meta">@github</span>.com <span class="comment">//测试代码，出现下一行提示表示连接成功</span></span><br><span class="line">Hi username! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="将网站部署到服务器"><a href="#将网站部署到服务器" class="headerlink" title="将网站部署到服务器"></a>将网站部署到服务器</h3><ol><li><p>安装 hexo-deployer-git:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>配置Deployment。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:git<span class="meta">@github</span>.com:githubname/githubname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li></ol><p>找到根目录中_config.yml中Deployment，按照以下代码格式，将其中的githubname更换为你的Github注册用户名即可。</p><ol start="3"><li>将博客发布到Github<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean  <span class="comment">//清除缓存文件 (db.json) 和已生成的静态文件 (public)。</span></span><br><span class="line">$ hexo generate  <span class="comment">// 生成静态文件</span></span><br><span class="line">$ hexo deploy  <span class="comment">// 部署网站</span></span><br></pre></td></tr></table></figure></li></ol><p>这样就实现了Hexo本地环境与Github的关联，即可通过 <a href="http://githubname.github.io" target="_blank" rel="noopener">http://githubname.github.io</a> 访问你部署在Github上的博客了，如下图所示。<br><img src="/2018/10/27/Hexo-Git一个小时快速搭建个人博客/blog.jpg" alt="blog"></p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><ol><li>购买域名。阿里云，腾讯云等都有，最便宜的9块钱</li><li>域名解析设置。需要设置的参数，如下表所示，其他参数默认即可。</li></ol><table><thead><tr><th style="text-align:center">记录类型</th><th style="text-align:center">主机记录</th><th style="text-align:center">记录值</th></tr></thead><tbody><tr><td style="text-align:center">CNAME</td><td style="text-align:center">@</td><td style="text-align:center">githubname.github.io</td></tr><tr><td style="text-align:center">A</td><td style="text-align:center">www</td><td style="text-align:center">IPV4地址1</td></tr><tr><td style="text-align:center">A</td><td style="text-align:center">www</td><td style="text-align:center">IPV4地址2</td></tr></tbody></table><ul><li>记录类型选择CNAME，则记录值填写githubname.github.io（GitHub Pages 对应域名）。</li><li>记录类型选择A，则记录值填写IPV4地址，通过ping上述GitHub Pages 域名获取IPV4地址，即下表的185.199.108.153，通常会获取到2个不同IPV4地址，最好都加进去。</li><li>主机记录填写@，则直接解析主域名，即购买的域名，前边没有www，如aliyun.com。</li><li>主机记录填写www，则解析后的域名含有www，如<a href="http://www.aliyun.com。" target="_blank" rel="noopener">www.aliyun.com。</a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ping zhaoshengxu.github.io <span class="comment">//ping操作</span></span><br><span class="line">正在 Ping zhaoshengxu.github.io [<span class="number">185.199</span>.108.153] 具有 <span class="number">32</span> 字节的数据: <span class="comment">//返回结果第1行</span></span><br></pre></td></tr></table></figure></li></ul><ol start="3"><li><p>在博客根目录下的source文件夹中新建名为CNAME的无后缀文件，并将购买的域名写入（不加www），如下图所示。<br><img src="/2018/10/27/Hexo-Git一个小时快速搭建个人博客/CNAME.jpg" alt="CNAME"></p></li><li><p>将购买的个性化域名绑定到Github Pages。将个性化域名填入Github Pages页面的Custom domain中并保存，上翻Github Pages页面即可看到，该页面已经和你的个性化域名绑定成功。</p></li><li><p>测试输入个性化域名访问你的博客首页。</p></li></ol><p><strong>恭喜完成博客的初期搭建，起航吧！</strong></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">Hexo官方文档</a></li><li><a href="https://help.github.com/articles/connecting-to-github-with-ssh/" target="_blank" rel="noopener">Github帮助文档：Connecting to GitHub with SSH</a></li><li><a href="https://www.cnblogs.com/Dreamice/p/7205231.html" target="_blank" rel="noopener">HEXO+Git+Github+域名搭建个人博客</a></li><li><a href="https://blog.csdn.net/AinUser/article/details/77609180?utm_source=blogxgwz8" target="_blank" rel="noopener">hexo+github搭建个人博客(超详细教程)</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2018/10/27/Hexo-Git一个小时快速搭建个人博客/myblog_v1.1.jpg&quot; alt=&quot;myblog_v1.1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;搭建本地环境：Hexo框架&quot;&gt;&lt;a href=&quot;#搭建本地环境：Hexo框架&quot; class=
      
    
    </summary>
    
      <category term="QucikStart" scheme="http://zsx-cup.top/categories/QucikStart/"/>
    
    
      <category term="Hexo, Git, GitHub" scheme="http://zsx-cup.top/tags/Hexo-Git-GitHub/"/>
    
  </entry>
  
  <entry>
    <title>玩转Sci-Hub</title>
    <link href="http://zsx-cup.top/2018/10/24/%E7%8E%A9%E8%BD%ACSci-Hub/"/>
    <id>http://zsx-cup.top/2018/10/24/玩转Sci-Hub/</id>
    <published>2018-10-23T16:00:56.000Z</published>
    <updated>2018-10-27T15:54:14.720Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/10/24/玩转Sci-Hub/sci-hub.jpg" alt="Sci-Hub"></p><blockquote><p>挣扎许久，终于下定决心给看看英文文献，可是搜了一篇又一篇SCI文献，学校图书馆都没有购买，怎么破？假如你也遇到如此尬境，可以尝试一下SCI免费下载神器：<a href="https://sci-hub.tw/" target="_blank" rel="noopener"><strong>Sci-Hub</strong></a>，如不可用，可尝试以下网址，或前往维基百科查看最新可用网址<a href="https://zh.m.wikipedia.org/wiki/Sci-Hub" target="_blank" rel="noopener">Sci-hub(维基百科)</a></p></blockquote><blockquote><p>Sci-Hub可用网址(2018.10.24测试可用)</p><ol><li><a href="http://sci-hub.tw/" target="_blank" rel="noopener">sci-hub.tw</a></li><li><a href="http://80.82.77.83/" target="_blank" rel="noopener">80.82.77.83</a></li><li><a href="http://80.82.77.84/" target="_blank" rel="noopener">80.82.77.84</a></li></ol></blockquote><p>首先需要说明的是：</p><p>Sci-Hub只支持精确匹配，不支持模糊匹配。这就意味着，搜索结果只有两种：返回目标文献或搜索结果为空。而不会像度娘或谷歌那样支持模糊匹配，返回多个搜索结果。这就要求查找文献之前，必须要提前知道目标查找文献的下列信息之一：</p><blockquote><ol><li>文献标题(String)</li><li>文献地址(URL)</li><li><a href="https://baike.baidu.com/item/doi/6776783?fr=aladdin" target="_blank" rel="noopener">文献DOI(数字对象唯一标识符)</a>：</li><li><a href="http://baike.baidu.com/link?url=0P0iFw84YBoFPTCyfELFuXa0gX5OFRAuXuKHVFgUgr9RTbw6JWjL4IqVPbR-Ype0gXmWhjAwBclO4vbQ3O7HFq" target="_blank" rel="noopener">文献PMID(PubMed唯一标识码，生命科学或医学领域)</a></li></ol></blockquote><p>以下面这篇文献为例，进行介绍：</p><blockquote><p>Kubiak W. Completion time variance minimization on a single machine is difficult [J]. Operations Research Letters, 1993, 14(1):49-59.</p></blockquote><h2 id="使用文献标题搜索"><a href="#使用文献标题搜索" class="headerlink" title="使用文献标题搜索"></a>使用文献标题搜索</h2><p>Sci-Hub搜索框键入文章标题：</p><blockquote><p>Completion time variance minimization on a single machine is difficult</p></blockquote><p>返回结果如下图，即没有搜索到我想要的文献。不过，别急着放弃，再尝试使用文献地址(URL)、DOI、PMID进行搜索。<br><img src="/2018/10/24/玩转Sci-Hub/sci-hub-bug.jpg" alt="Sci-Hub-bug"></p><h2 id="使用文献地址或DOI搜索"><a href="#使用文献地址或DOI搜索" class="headerlink" title="使用文献地址或DOI搜索"></a>使用文献地址或DOI搜索</h2><p>首先，用度娘查找文献地址、DOI等信息：</p><ul><li>在度娘输入文献标题搜索，并在搜索页面依次进入：<br>百度学术-&gt;爱思唯尔(Elsevier)，即可抵达如下页面</li><li>页面最下方即为文献地址：<a href="https://doi.org/10.1016/0167-6377(93)90019-D" target="_blank" rel="noopener">https://doi.org/10.1016/0167-6377(93)90019-D</a><br>(及文献DOI：10.1016/0167-6377(93)90019-D)<br><img src="/2018/10/24/玩转Sci-Hub/sci-hub-sd1.jpg" alt="Sci-Hub-SD"></li><li>文献在百度学术通常有多个文献来源，通常任意文献来源进入之后都可以找到文献DOI，如下图所示：<br><img src="/2018/10/24/玩转Sci-Hub/sci-hub-3.jpg" alt="ref"></li></ul><p>然后，在Sci-Hub搜索框输入文献地址(URL)或DOI等信息，开始搜索，返回结果页如下，成功返回我想要的文献。<br><img src="/2018/10/24/玩转Sci-Hub/sci-hub-result.jpg" alt="Sci-Hub-result"></p><p>最后，点击右上角的下载箭头，下载文献即可。</p><h2 id="可能涉及科学上网"><a href="#可能涉及科学上网" class="headerlink" title="可能涉及科学上网"></a>可能涉及科学上网</h2><p>Sci-Hub网站涉及版权问题，某些网址可能无法使用，如遇此情况，可访问sci-hub维基百科词条查看可用网址。</p><blockquote><p>如需科学上网，出门左转访问<a href="https://github.com/getlantern/forum" target="_blank" rel="noopener">getlantern(蓝灯)</a>下载安装即可使用。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2018/10/24/玩转Sci-Hub/sci-hub.jpg&quot; alt=&quot;Sci-Hub&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;挣扎许久，终于下定决心给看看英文文献，可是搜了一篇又一篇SCI文献，学校图书馆都没有购买，怎么破？假如你也遇到如此
      
    
    </summary>
    
      <category term="Tool" scheme="http://zsx-cup.top/categories/Tool/"/>
    
    
      <category term="Sci-Hub" scheme="http://zsx-cup.top/tags/Sci-Hub/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Git搭建博客初具模样</title>
    <link href="http://zsx-cup.top/2018/10/21/Hexo-Git%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%88%9D%E5%85%B7%E6%A8%A1%E6%A0%B7/"/>
    <id>http://zsx-cup.top/2018/10/21/Hexo-Git搭建博客初具模样/</id>
    <published>2018-10-20T17:33:03.000Z</published>
    <updated>2018-10-23T15:45:10.012Z</updated>
    
    <content type="html"><![CDATA[<p>利用Hexo+Git+GitHub搭建个人博客，博客已经初具模样：<br><img src="/2018/10/21/Hexo-Git搭建博客初具模样/myblog_v1.0.jpg" alt="myblog_v1.0"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;利用Hexo+Git+GitHub搭建个人博客，博客已经初具模样：&lt;br&gt;&lt;img src=&quot;/2018/10/21/Hexo-Git搭建博客初具模样/myblog_v1.0.jpg&quot; alt=&quot;myblog_v1.0&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="Picture" scheme="http://zsx-cup.top/categories/Picture/"/>
    
    
      <category term="Blog" scheme="http://zsx-cup.top/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Categories&amp;Tags</title>
    <link href="http://zsx-cup.top/2018/10/20/Categories-Tags/"/>
    <id>http://zsx-cup.top/2018/10/20/Categories-Tags/</id>
    <published>2018-10-20T15:00:24.000Z</published>
    <updated>2018-10-20T15:07:09.877Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Test" scheme="http://zsx-cup.top/categories/Test/"/>
    
    
      <category term="Test" scheme="http://zsx-cup.top/tags/Test/"/>
    
  </entry>
  
  <entry>
    <title>Test</title>
    <link href="http://zsx-cup.top/2018/10/18/Test/"/>
    <id>http://zsx-cup.top/2018/10/18/Test/</id>
    <published>2018-10-18T15:20:28.000Z</published>
    <updated>2018-10-23T15:46:32.676Z</updated>
    
    <content type="html"><![CDATA[<p>Just a test.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Just a test.&lt;/p&gt;

      
    
    </summary>
    
      <category term="Test" scheme="http://zsx-cup.top/categories/Test/"/>
    
    
      <category term="Test" scheme="http://zsx-cup.top/tags/Test/"/>
    
  </entry>
  
  <entry>
    <title>Hello</title>
    <link href="http://zsx-cup.top/2018/10/18/Hello/"/>
    <id>http://zsx-cup.top/2018/10/18/Hello/</id>
    <published>2018-10-18T12:04:01.000Z</published>
    <updated>2018-10-23T15:45:32.564Z</updated>
    
    <content type="html"><![CDATA[<p>Winter is coming!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Winter is coming!&lt;/p&gt;

      
    
    </summary>
    
      <category term="Test" scheme="http://zsx-cup.top/categories/Test/"/>
    
    
      <category term="Test" scheme="http://zsx-cup.top/tags/Test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://zsx-cup.top/2018/10/17/hello-world/"/>
    <id>http://zsx-cup.top/2018/10/17/hello-world/</id>
    <published>2018-10-17T15:20:00.156Z</published>
    <updated>2018-10-23T15:45:52.861Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="QuickStart" scheme="http://zsx-cup.top/categories/QuickStart/"/>
    
    
      <category term="Hexo" scheme="http://zsx-cup.top/tags/Hexo/"/>
    
  </entry>
  
</feed>
